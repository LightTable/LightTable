// Compiled by ClojureScript 1.10.844 {}
goog.provide('lt.util.events');
goog.require('cljs.core');
/**
 * Add function `handler` to trigger when event listener `ev` fires on `elem`.
 * 
 *   If `elem` is not provided then the event `ev` and its `handler` are bound to the document.
 */
lt.util.events.capture = (function lt$util$events$capture(var_args){
var G__6687 = arguments.length;
switch (G__6687) {
case 2:
return lt.util.events.capture.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return lt.util.events.capture.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));

}
});

(lt.util.events.capture.cljs$core$IFn$_invoke$arity$2 = (function (ev,handler){
return lt.util.events.capture.call(null,document,ev,handler);
}));

(lt.util.events.capture.cljs$core$IFn$_invoke$arity$3 = (function (elem,ev,handler){
return elem.addEventListener(cljs.core.name.call(null,ev),handler,true);
}));

(lt.util.events.capture.cljs$lang$maxFixedArity = 3);

