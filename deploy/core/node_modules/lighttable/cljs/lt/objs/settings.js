// Compiled by ClojureScript 1.10.844 {}
goog.provide('lt.objs.settings');
goog.require('cljs.core');
goog.require('lt.object');
goog.require('lt.objs.app');
goog.require('lt.objs.command');
goog.require('lt.objs.keyboard');
goog.require('lt.objs.tabs');
goog.require('lt.objs.files');
goog.require('lt.objs.console');
goog.require('lt.objs.notifos');
goog.require('lt.objs.editor');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.workspace');
goog.require('clojure.string');
goog.require('lt.objs.sidebar.command');
goog.require('lt.util.dom');
goog.require('lt.util.cljs');
goog.require('cljs.reader');
lt.objs.settings.safe_read = (function lt$objs$settings$safe_read(s,file){
if(cljs.core.truth_(s)){
try{return cljs.reader.read_string.call(null,s);
}catch (e10453){var e = e10453;
lt.objs.console.error.call(null,["Invalid settings file: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(file),"\n",cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join(''));

return null;
}} else {
return null;
}
});
lt.objs.settings._PLUS_behaviors = (function lt$objs$settings$_PLUS_behaviors(cur,m){
return cljs.core.assoc.call(null,cur,new cljs.core.Keyword(null,"+","+",1913524883),cljs.core.reduce.call(null,(function (res,p__10455){
var vec__10456 = p__10455;
var k = cljs.core.nth.call(null,vec__10456,(0),null);
var v = cljs.core.nth.call(null,vec__10456,(1),null);
return cljs.core.update_in.call(null,res,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [k], null),(function (p1__10454_SHARP_){
return cljs.core.apply.call(null,cljs.core.conj,(function (){var or__4160__auto__ = p1__10454_SHARP_;
if(cljs.core.truth_(or__4160__auto__)){
return or__4160__auto__;
} else {
return cljs.core.List.EMPTY;
}
})(),v);
}));
}),new cljs.core.Keyword(null,"+","+",1913524883).cljs$core$IFn$_invoke$arity$1(cur),m));
});
lt.objs.settings._behaviors = (function lt$objs$settings$_behaviors(cur,m){
return cljs.core.assoc.call(null,cur,new cljs.core.Keyword(null,"+","+",1913524883),cljs.core.reduce.call(null,(function (res,p__10461){
var vec__10462 = p__10461;
var k = cljs.core.nth.call(null,vec__10462,(0),null);
var v = cljs.core.nth.call(null,vec__10462,(1),null);
return cljs.core.update_in.call(null,res,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [k], null),(function (p1__10459_SHARP_){
return cljs.core.remove.call(null,cljs.core.set.call(null,v),p1__10459_SHARP_);
}));
}),new cljs.core.Keyword(null,"+","+",1913524883).cljs$core$IFn$_invoke$arity$1(cur),m),new cljs.core.Keyword(null,"-","-",-2112348439),cljs.core.reduce.call(null,(function (res,p__10465){
var vec__10466 = p__10465;
var k = cljs.core.nth.call(null,vec__10466,(0),null);
var v = cljs.core.nth.call(null,vec__10466,(1),null);
return cljs.core.update_in.call(null,res,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [k], null),(function (p1__10460_SHARP_){
return cljs.core.apply.call(null,cljs.core.conj,(function (){var or__4160__auto__ = p1__10460_SHARP_;
if(cljs.core.truth_(or__4160__auto__)){
return or__4160__auto__;
} else {
return cljs.core.List.EMPTY;
}
})(),v);
}));
}),new cljs.core.Keyword(null,"-","-",-2112348439).cljs$core$IFn$_invoke$arity$1(cur),m));
});
lt.objs.settings.behavior_diff = (function lt$objs$settings$behavior_diff(p__10469,final$){
var map__10470 = p__10469;
var map__10470__$1 = cljs.core.__destructure_map.call(null,map__10470);
var diff = map__10470__$1;
var add = cljs.core.get.call(null,map__10470__$1,new cljs.core.Keyword(null,"+","+",1913524883));
var rem = cljs.core.get.call(null,map__10470__$1,new cljs.core.Keyword(null,"-","-",-2112348439));
if(cljs.core.not.call(null,diff)){
return final$;
} else {
return lt.objs.settings._behaviors.call(null,lt.objs.settings._PLUS_behaviors.call(null,final$,add),rem);
}
});
lt.objs.settings.reverse_diff = (function lt$objs$settings$reverse_diff(p__10471){
var map__10472 = p__10471;
var map__10472__$1 = cljs.core.__destructure_map.call(null,map__10472);
var add = cljs.core.get.call(null,map__10472__$1,new cljs.core.Keyword(null,"+","+",1913524883));
var rem = cljs.core.get.call(null,map__10472__$1,new cljs.core.Keyword(null,"-","-",-2112348439));
return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"+","+",1913524883),rem,new cljs.core.Keyword(null,"-","-",-2112348439),add], null);
});
lt.objs.settings.apply_diff = (function lt$objs$settings$apply_diff(diff){
var final$ = lt.objs.settings.behavior_diff.call(null,diff,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"+","+",1913524883),cljs.core.deref.call(null,lt.object.tags)], null));
return cljs.core.reset_BANG_.call(null,lt.object.tags,new cljs.core.Keyword(null,"+","+",1913524883).cljs$core$IFn$_invoke$arity$1(final$));
});
lt.objs.settings.keyword__GT_str = (function lt$objs$settings$keyword__GT_str(kw){
if((kw instanceof cljs.core.Keyword)){
return cljs.core.subs.call(null,cljs.core.str.cljs$core$IFn$_invoke$arity$1(kw),(1));
} else {
return kw;
}
});
lt.objs.settings.flat_behaviors__GT_map = (function lt$objs$settings$flat_behaviors__GT_map(flat){
var adds = ({});
var removes = ({});
var seq__10477_10507 = cljs.core.seq.call(null,flat);
var chunk__10479_10508 = null;
var count__10480_10509 = (0);
var i__10481_10510 = (0);
while(true){
if((i__10481_10510 < count__10480_10509)){
var vec__10495_10511 = cljs.core._nth.call(null,chunk__10479_10508,i__10481_10510);
var tag_10512 = cljs.core.nth.call(null,vec__10495_10511,(0),null);
var behavior_10513 = cljs.core.nth.call(null,vec__10495_10511,(1),null);
var all_10514 = vec__10495_10511;
var vec__10498_10515 = ((cljs.core._EQ_.call(null,(lt.objs.settings.keyword__GT_str.call(null,behavior_10513)[(0)]),"-"))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [removes,cljs.core.subs.call(null,lt.objs.settings.keyword__GT_str.call(null,behavior_10513),(1))], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [adds,lt.objs.settings.keyword__GT_str.call(null,behavior_10513)], null));
var coll_10516 = cljs.core.nth.call(null,vec__10498_10515,(0),null);
var behavior_10517__$1 = cljs.core.nth.call(null,vec__10498_10515,(1),null);
var tag_10518__$1 = lt.objs.settings.keyword__GT_str.call(null,tag_10512);
if(cljs.core.truth_((coll_10516[tag_10518__$1]))){
} else {
(coll_10516[tag_10518__$1] = []);
}

(coll_10516[tag_10518__$1]).push((((cljs.core.count.call(null,all_10514) > (2)))?cljs.core.conj.call(null,cljs.core.seq.call(null,cljs.core.subvec.call(null,all_10514,(2))),cljs.core.keyword.call(null,behavior_10517__$1)):cljs.core.keyword.call(null,behavior_10517__$1)));


var G__10519 = seq__10477_10507;
var G__10520 = chunk__10479_10508;
var G__10521 = count__10480_10509;
var G__10522 = (i__10481_10510 + (1));
seq__10477_10507 = G__10519;
chunk__10479_10508 = G__10520;
count__10480_10509 = G__10521;
i__10481_10510 = G__10522;
continue;
} else {
var temp__5753__auto___10523 = cljs.core.seq.call(null,seq__10477_10507);
if(temp__5753__auto___10523){
var seq__10477_10524__$1 = temp__5753__auto___10523;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__10477_10524__$1)){
var c__4591__auto___10525 = cljs.core.chunk_first.call(null,seq__10477_10524__$1);
var G__10526 = cljs.core.chunk_rest.call(null,seq__10477_10524__$1);
var G__10527 = c__4591__auto___10525;
var G__10528 = cljs.core.count.call(null,c__4591__auto___10525);
var G__10529 = (0);
seq__10477_10507 = G__10526;
chunk__10479_10508 = G__10527;
count__10480_10509 = G__10528;
i__10481_10510 = G__10529;
continue;
} else {
var vec__10501_10530 = cljs.core.first.call(null,seq__10477_10524__$1);
var tag_10531 = cljs.core.nth.call(null,vec__10501_10530,(0),null);
var behavior_10532 = cljs.core.nth.call(null,vec__10501_10530,(1),null);
var all_10533 = vec__10501_10530;
var vec__10504_10534 = ((cljs.core._EQ_.call(null,(lt.objs.settings.keyword__GT_str.call(null,behavior_10532)[(0)]),"-"))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [removes,cljs.core.subs.call(null,lt.objs.settings.keyword__GT_str.call(null,behavior_10532),(1))], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [adds,lt.objs.settings.keyword__GT_str.call(null,behavior_10532)], null));
var coll_10535 = cljs.core.nth.call(null,vec__10504_10534,(0),null);
var behavior_10536__$1 = cljs.core.nth.call(null,vec__10504_10534,(1),null);
var tag_10537__$1 = lt.objs.settings.keyword__GT_str.call(null,tag_10531);
if(cljs.core.truth_((coll_10535[tag_10537__$1]))){
} else {
(coll_10535[tag_10537__$1] = []);
}

(coll_10535[tag_10537__$1]).push((((cljs.core.count.call(null,all_10533) > (2)))?cljs.core.conj.call(null,cljs.core.seq.call(null,cljs.core.subvec.call(null,all_10533,(2))),cljs.core.keyword.call(null,behavior_10536__$1)):cljs.core.keyword.call(null,behavior_10536__$1)));


var G__10538 = cljs.core.next.call(null,seq__10477_10524__$1);
var G__10539 = null;
var G__10540 = (0);
var G__10541 = (0);
seq__10477_10507 = G__10538;
chunk__10479_10508 = G__10539;
count__10480_10509 = G__10540;
i__10481_10510 = G__10541;
continue;
}
} else {
}
}
break;
}

return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"+","+",1913524883),cljs.core.js__GT_clj.call(null,adds,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),true),new cljs.core.Keyword(null,"-","-",-2112348439),cljs.core.js__GT_clj.call(null,removes,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),true)], null);
});
lt.objs.settings.map__GT_flat_behaviors = (function lt$objs$settings$map__GT_flat_behaviors(behaviors_map){
var flat = [];
var seq__10542_10600 = cljs.core.seq.call(null,new cljs.core.Keyword(null,"+","+",1913524883).cljs$core$IFn$_invoke$arity$1(behaviors_map));
var chunk__10550_10601 = null;
var count__10551_10602 = (0);
var i__10552_10603 = (0);
while(true){
if((i__10552_10603 < count__10551_10602)){
var vec__10566_10604 = cljs.core._nth.call(null,chunk__10550_10601,i__10552_10603);
var tag_10605 = cljs.core.nth.call(null,vec__10566_10604,(0),null);
var behs_10606 = cljs.core.nth.call(null,vec__10566_10604,(1),null);
var tag_vec_10607 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_10605], null);
var seq__10554_10608 = cljs.core.seq.call(null,behs_10606);
var chunk__10556_10609 = null;
var count__10557_10610 = (0);
var i__10558_10611 = (0);
while(true){
if((i__10558_10611 < count__10557_10610)){
var beh_10612 = cljs.core._nth.call(null,chunk__10556_10609,i__10558_10611);
var beh_10613__$1 = ((cljs.core.coll_QMARK_.call(null,beh_10612))?beh_10612:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [beh_10612], null));
flat.push(cljs.core.into.call(null,tag_vec_10607,beh_10613__$1));


var G__10614 = seq__10554_10608;
var G__10615 = chunk__10556_10609;
var G__10616 = count__10557_10610;
var G__10617 = (i__10558_10611 + (1));
seq__10554_10608 = G__10614;
chunk__10556_10609 = G__10615;
count__10557_10610 = G__10616;
i__10558_10611 = G__10617;
continue;
} else {
var temp__5753__auto___10618 = cljs.core.seq.call(null,seq__10554_10608);
if(temp__5753__auto___10618){
var seq__10554_10619__$1 = temp__5753__auto___10618;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__10554_10619__$1)){
var c__4591__auto___10620 = cljs.core.chunk_first.call(null,seq__10554_10619__$1);
var G__10621 = cljs.core.chunk_rest.call(null,seq__10554_10619__$1);
var G__10622 = c__4591__auto___10620;
var G__10623 = cljs.core.count.call(null,c__4591__auto___10620);
var G__10624 = (0);
seq__10554_10608 = G__10621;
chunk__10556_10609 = G__10622;
count__10557_10610 = G__10623;
i__10558_10611 = G__10624;
continue;
} else {
var beh_10625 = cljs.core.first.call(null,seq__10554_10619__$1);
var beh_10626__$1 = ((cljs.core.coll_QMARK_.call(null,beh_10625))?beh_10625:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [beh_10625], null));
flat.push(cljs.core.into.call(null,tag_vec_10607,beh_10626__$1));


var G__10627 = cljs.core.next.call(null,seq__10554_10619__$1);
var G__10628 = null;
var G__10629 = (0);
var G__10630 = (0);
seq__10554_10608 = G__10627;
chunk__10556_10609 = G__10628;
count__10557_10610 = G__10629;
i__10558_10611 = G__10630;
continue;
}
} else {
}
}
break;
}

var G__10631 = seq__10542_10600;
var G__10632 = chunk__10550_10601;
var G__10633 = count__10551_10602;
var G__10634 = (i__10552_10603 + (1));
seq__10542_10600 = G__10631;
chunk__10550_10601 = G__10632;
count__10551_10602 = G__10633;
i__10552_10603 = G__10634;
continue;
} else {
var temp__5753__auto___10635 = cljs.core.seq.call(null,seq__10542_10600);
if(temp__5753__auto___10635){
var seq__10542_10636__$1 = temp__5753__auto___10635;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__10542_10636__$1)){
var c__4591__auto___10637 = cljs.core.chunk_first.call(null,seq__10542_10636__$1);
var G__10638 = cljs.core.chunk_rest.call(null,seq__10542_10636__$1);
var G__10639 = c__4591__auto___10637;
var G__10640 = cljs.core.count.call(null,c__4591__auto___10637);
var G__10641 = (0);
seq__10542_10600 = G__10638;
chunk__10550_10601 = G__10639;
count__10551_10602 = G__10640;
i__10552_10603 = G__10641;
continue;
} else {
var vec__10569_10642 = cljs.core.first.call(null,seq__10542_10636__$1);
var tag_10643 = cljs.core.nth.call(null,vec__10569_10642,(0),null);
var behs_10644 = cljs.core.nth.call(null,vec__10569_10642,(1),null);
var tag_vec_10645 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_10643], null);
var seq__10544_10646 = cljs.core.seq.call(null,behs_10644);
var chunk__10546_10647 = null;
var count__10547_10648 = (0);
var i__10548_10649 = (0);
while(true){
if((i__10548_10649 < count__10547_10648)){
var beh_10650 = cljs.core._nth.call(null,chunk__10546_10647,i__10548_10649);
var beh_10651__$1 = ((cljs.core.coll_QMARK_.call(null,beh_10650))?beh_10650:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [beh_10650], null));
flat.push(cljs.core.into.call(null,tag_vec_10645,beh_10651__$1));


var G__10652 = seq__10544_10646;
var G__10653 = chunk__10546_10647;
var G__10654 = count__10547_10648;
var G__10655 = (i__10548_10649 + (1));
seq__10544_10646 = G__10652;
chunk__10546_10647 = G__10653;
count__10547_10648 = G__10654;
i__10548_10649 = G__10655;
continue;
} else {
var temp__5753__auto___10656__$1 = cljs.core.seq.call(null,seq__10544_10646);
if(temp__5753__auto___10656__$1){
var seq__10544_10657__$1 = temp__5753__auto___10656__$1;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__10544_10657__$1)){
var c__4591__auto___10658 = cljs.core.chunk_first.call(null,seq__10544_10657__$1);
var G__10659 = cljs.core.chunk_rest.call(null,seq__10544_10657__$1);
var G__10660 = c__4591__auto___10658;
var G__10661 = cljs.core.count.call(null,c__4591__auto___10658);
var G__10662 = (0);
seq__10544_10646 = G__10659;
chunk__10546_10647 = G__10660;
count__10547_10648 = G__10661;
i__10548_10649 = G__10662;
continue;
} else {
var beh_10663 = cljs.core.first.call(null,seq__10544_10657__$1);
var beh_10664__$1 = ((cljs.core.coll_QMARK_.call(null,beh_10663))?beh_10663:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [beh_10663], null));
flat.push(cljs.core.into.call(null,tag_vec_10645,beh_10664__$1));


var G__10665 = cljs.core.next.call(null,seq__10544_10657__$1);
var G__10666 = null;
var G__10667 = (0);
var G__10668 = (0);
seq__10544_10646 = G__10665;
chunk__10546_10647 = G__10666;
count__10547_10648 = G__10667;
i__10548_10649 = G__10668;
continue;
}
} else {
}
}
break;
}

var G__10669 = cljs.core.next.call(null,seq__10542_10636__$1);
var G__10670 = null;
var G__10671 = (0);
var G__10672 = (0);
seq__10542_10600 = G__10669;
chunk__10550_10601 = G__10670;
count__10551_10602 = G__10671;
i__10552_10603 = G__10672;
continue;
}
} else {
}
}
break;
}

var seq__10572_10673 = cljs.core.seq.call(null,new cljs.core.Keyword(null,"-","-",-2112348439).cljs$core$IFn$_invoke$arity$1(behaviors_map));
var chunk__10579_10674 = null;
var count__10580_10675 = (0);
var i__10581_10676 = (0);
while(true){
if((i__10581_10676 < count__10580_10675)){
var vec__10594_10677 = cljs.core._nth.call(null,chunk__10579_10674,i__10581_10676);
var tag_10678 = cljs.core.nth.call(null,vec__10594_10677,(0),null);
var behs_10679 = cljs.core.nth.call(null,vec__10594_10677,(1),null);
var seq__10582_10680 = cljs.core.seq.call(null,behs_10679);
var chunk__10584_10681 = null;
var count__10585_10682 = (0);
var i__10586_10683 = (0);
while(true){
if((i__10586_10683 < count__10585_10682)){
var beh_10684 = cljs.core._nth.call(null,chunk__10584_10681,i__10586_10683);
var beh_10685__$1 = ((cljs.core.coll_QMARK_.call(null,beh_10684))?beh_10684:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [beh_10684], null));
var tag_vec_10686 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_10678,cljs.core.keyword.call(null,["-",cljs.core.str.cljs$core$IFn$_invoke$arity$1(lt.objs.settings.keyword__GT_str.call(null,cljs.core.first.call(null,beh_10685__$1)))].join(''))], null);
flat.push(cljs.core.into.call(null,tag_vec_10686,cljs.core.rest.call(null,beh_10685__$1)));


var G__10687 = seq__10582_10680;
var G__10688 = chunk__10584_10681;
var G__10689 = count__10585_10682;
var G__10690 = (i__10586_10683 + (1));
seq__10582_10680 = G__10687;
chunk__10584_10681 = G__10688;
count__10585_10682 = G__10689;
i__10586_10683 = G__10690;
continue;
} else {
var temp__5753__auto___10691 = cljs.core.seq.call(null,seq__10582_10680);
if(temp__5753__auto___10691){
var seq__10582_10692__$1 = temp__5753__auto___10691;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__10582_10692__$1)){
var c__4591__auto___10693 = cljs.core.chunk_first.call(null,seq__10582_10692__$1);
var G__10694 = cljs.core.chunk_rest.call(null,seq__10582_10692__$1);
var G__10695 = c__4591__auto___10693;
var G__10696 = cljs.core.count.call(null,c__4591__auto___10693);
var G__10697 = (0);
seq__10582_10680 = G__10694;
chunk__10584_10681 = G__10695;
count__10585_10682 = G__10696;
i__10586_10683 = G__10697;
continue;
} else {
var beh_10698 = cljs.core.first.call(null,seq__10582_10692__$1);
var beh_10699__$1 = ((cljs.core.coll_QMARK_.call(null,beh_10698))?beh_10698:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [beh_10698], null));
var tag_vec_10700 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_10678,cljs.core.keyword.call(null,["-",cljs.core.str.cljs$core$IFn$_invoke$arity$1(lt.objs.settings.keyword__GT_str.call(null,cljs.core.first.call(null,beh_10699__$1)))].join(''))], null);
flat.push(cljs.core.into.call(null,tag_vec_10700,cljs.core.rest.call(null,beh_10699__$1)));


var G__10701 = cljs.core.next.call(null,seq__10582_10692__$1);
var G__10702 = null;
var G__10703 = (0);
var G__10704 = (0);
seq__10582_10680 = G__10701;
chunk__10584_10681 = G__10702;
count__10585_10682 = G__10703;
i__10586_10683 = G__10704;
continue;
}
} else {
}
}
break;
}

var G__10705 = seq__10572_10673;
var G__10706 = chunk__10579_10674;
var G__10707 = count__10580_10675;
var G__10708 = (i__10581_10676 + (1));
seq__10572_10673 = G__10705;
chunk__10579_10674 = G__10706;
count__10580_10675 = G__10707;
i__10581_10676 = G__10708;
continue;
} else {
var temp__5753__auto___10709 = cljs.core.seq.call(null,seq__10572_10673);
if(temp__5753__auto___10709){
var seq__10572_10710__$1 = temp__5753__auto___10709;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__10572_10710__$1)){
var c__4591__auto___10711 = cljs.core.chunk_first.call(null,seq__10572_10710__$1);
var G__10712 = cljs.core.chunk_rest.call(null,seq__10572_10710__$1);
var G__10713 = c__4591__auto___10711;
var G__10714 = cljs.core.count.call(null,c__4591__auto___10711);
var G__10715 = (0);
seq__10572_10673 = G__10712;
chunk__10579_10674 = G__10713;
count__10580_10675 = G__10714;
i__10581_10676 = G__10715;
continue;
} else {
var vec__10597_10716 = cljs.core.first.call(null,seq__10572_10710__$1);
var tag_10717 = cljs.core.nth.call(null,vec__10597_10716,(0),null);
var behs_10718 = cljs.core.nth.call(null,vec__10597_10716,(1),null);
var seq__10573_10719 = cljs.core.seq.call(null,behs_10718);
var chunk__10575_10720 = null;
var count__10576_10721 = (0);
var i__10577_10722 = (0);
while(true){
if((i__10577_10722 < count__10576_10721)){
var beh_10723 = cljs.core._nth.call(null,chunk__10575_10720,i__10577_10722);
var beh_10724__$1 = ((cljs.core.coll_QMARK_.call(null,beh_10723))?beh_10723:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [beh_10723], null));
var tag_vec_10725 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_10717,cljs.core.keyword.call(null,["-",cljs.core.str.cljs$core$IFn$_invoke$arity$1(lt.objs.settings.keyword__GT_str.call(null,cljs.core.first.call(null,beh_10724__$1)))].join(''))], null);
flat.push(cljs.core.into.call(null,tag_vec_10725,cljs.core.rest.call(null,beh_10724__$1)));


var G__10726 = seq__10573_10719;
var G__10727 = chunk__10575_10720;
var G__10728 = count__10576_10721;
var G__10729 = (i__10577_10722 + (1));
seq__10573_10719 = G__10726;
chunk__10575_10720 = G__10727;
count__10576_10721 = G__10728;
i__10577_10722 = G__10729;
continue;
} else {
var temp__5753__auto___10730__$1 = cljs.core.seq.call(null,seq__10573_10719);
if(temp__5753__auto___10730__$1){
var seq__10573_10731__$1 = temp__5753__auto___10730__$1;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__10573_10731__$1)){
var c__4591__auto___10732 = cljs.core.chunk_first.call(null,seq__10573_10731__$1);
var G__10733 = cljs.core.chunk_rest.call(null,seq__10573_10731__$1);
var G__10734 = c__4591__auto___10732;
var G__10735 = cljs.core.count.call(null,c__4591__auto___10732);
var G__10736 = (0);
seq__10573_10719 = G__10733;
chunk__10575_10720 = G__10734;
count__10576_10721 = G__10735;
i__10577_10722 = G__10736;
continue;
} else {
var beh_10737 = cljs.core.first.call(null,seq__10573_10731__$1);
var beh_10738__$1 = ((cljs.core.coll_QMARK_.call(null,beh_10737))?beh_10737:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [beh_10737], null));
var tag_vec_10739 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_10717,cljs.core.keyword.call(null,["-",cljs.core.str.cljs$core$IFn$_invoke$arity$1(lt.objs.settings.keyword__GT_str.call(null,cljs.core.first.call(null,beh_10738__$1)))].join(''))], null);
flat.push(cljs.core.into.call(null,tag_vec_10739,cljs.core.rest.call(null,beh_10738__$1)));


var G__10740 = cljs.core.next.call(null,seq__10573_10731__$1);
var G__10741 = null;
var G__10742 = (0);
var G__10743 = (0);
seq__10573_10719 = G__10740;
chunk__10575_10720 = G__10741;
count__10576_10721 = G__10742;
i__10577_10722 = G__10743;
continue;
}
} else {
}
}
break;
}

var G__10744 = cljs.core.next.call(null,seq__10572_10710__$1);
var G__10745 = null;
var G__10746 = (0);
var G__10747 = (0);
seq__10572_10673 = G__10744;
chunk__10579_10674 = G__10745;
count__10580_10675 = G__10746;
i__10581_10676 = G__10747;
continue;
}
} else {
}
}
break;
}

return cljs.core.vec.call(null,cljs.core.sort_by.call(null,cljs.core.first,cljs.core.js__GT_clj.call(null,flat)));
});
lt.objs.settings.parse_behaviors = (function lt$objs$settings$parse_behaviors(behs,file){
if(cljs.core.map_QMARK_.call(null,behs)){
return behs;
} else {
if(cljs.core.vector_QMARK_.call(null,behs)){
return lt.objs.settings.flat_behaviors__GT_map.call(null,behs);
} else {
return lt.objs.console.error.call(null,["Invalid behaviors file: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(file),". Behaviors must be either a vector or a map."].join(''));

}
}
});
lt.objs.settings.parse_file = (function lt$objs$settings$parse_file(file){
return lt.objs.settings.parse_behaviors.call(null,lt.objs.settings.safe_read.call(null,new cljs.core.Keyword(null,"content","content",15833224).cljs$core$IFn$_invoke$arity$1(lt.objs.files.open_sync.call(null,file)),file),file);
});
lt.objs.settings.pprint_flat_behaviors = (function lt$objs$settings$pprint_flat_behaviors(flat){
return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"str","str",1089608819).cljs$core$IFn$_invoke$arity$1(cljs.core.reduce.call(null,(function (result,cur){
var new_tag = cljs.core.first.call(null,cur);
return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"str","str",1089608819),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"str","str",1089608819).cljs$core$IFn$_invoke$arity$1(result)),(((!(cljs.core._EQ_.call(null,new_tag,new cljs.core.Keyword(null,"tag","tag",-1290361223).cljs$core$IFn$_invoke$arity$1(result)))))?"\n":null),"\n ",cljs.core.pr_str.call(null,cur)].join(''),new cljs.core.Keyword(null,"tag","tag",-1290361223),new_tag], null);
}),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"tag","tag",-1290361223),cljs.core.first.call(null,cljs.core.first.call(null,flat)),new cljs.core.Keyword(null,"str","str",1089608819),"["], null),flat))),"\n]"].join('');
});
lt.objs.settings.behavior_diffs_in = (function lt$objs$settings$behavior_diffs_in(path){
if(cljs.core.truth_(lt.objs.files.exists_QMARK_.call(null,path))){
return cljs.core.mapv.call(null,lt.objs.settings.parse_file,cljs.core.filter.call(null,(function (p1__10748_SHARP_){
return cljs.core._EQ_.call(null,lt.objs.files.ext.call(null,p1__10748_SHARP_),"behaviors");
}),lt.objs.files.full_path_ls.call(null,path)));
} else {
return null;
}
});
lt.objs.settings.load_all = (function lt$objs$settings$load_all(){
var final$ = cljs.core.reduce.call(null,(function (fin,cur){
return lt.objs.settings.behavior_diff.call(null,cur,fin);
}),cljs.core.PersistentArrayMap.EMPTY,cljs.core.concat.call(null,lt.object.raise_reduce.call(null,lt.objs.app.app,new cljs.core.Keyword(null,"behaviors.diffs.default+","behaviors.diffs.default+",-659027530),cljs.core.PersistentVector.EMPTY),lt.object.raise_reduce.call(null,lt.objs.app.app,new cljs.core.Keyword(null,"behaviors.diffs.plugin+","behaviors.diffs.plugin+",-195662477),cljs.core.PersistentVector.EMPTY),lt.object.raise_reduce.call(null,lt.objs.app.app,new cljs.core.Keyword(null,"behaviors.diffs.user+","behaviors.diffs.user+",-916482803),cljs.core.PersistentVector.EMPTY)));
var ws_diff = new cljs.core.Keyword(null,"ws-behaviors","ws-behaviors",-1322175278).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,lt.objs.workspace.current_ws));
var final$__$1 = (cljs.core.truth_((function (){var and__4149__auto__ = ws_diff;
if(cljs.core.truth_(and__4149__auto__)){
return (!(cljs.core.empty_QMARK_.call(null,ws_diff)));
} else {
return and__4149__auto__;
}
})())?lt.objs.settings.behavior_diff.call(null,lt.objs.settings.parse_behaviors.call(null,lt.objs.settings.safe_read.call(null,ws_diff,"workspace.behaviors"),"workspace.behaviors"),final$):final$);
cljs.core.reset_BANG_.call(null,lt.object.negated_tags,(function (){var or__4160__auto__ = new cljs.core.Keyword(null,"-","-",-2112348439).cljs$core$IFn$_invoke$arity$1(final$__$1);
if(cljs.core.truth_(or__4160__auto__)){
return or__4160__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})());

return cljs.core.reset_BANG_.call(null,lt.object.tags,(function (){var or__4160__auto__ = new cljs.core.Keyword(null,"+","+",1913524883).cljs$core$IFn$_invoke$arity$1(final$__$1);
if(cljs.core.truth_(or__4160__auto__)){
return or__4160__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})());
});
lt.objs.settings.refresh_all = (function lt$objs$settings$refresh_all(objs){
if(cljs.core.not.call(null,cljs.core.seq.call(null,objs))){
lt.object.raise.call(null,lt.objs.app.app,new cljs.core.Keyword(null,"behaviors.refreshed","behaviors.refreshed",-919120200));

return lt.objs.notifos.done_working.call(null,"Behaviors loaded");
} else {
try{lt.object.refresh_BANG_.call(null,cljs.core.first.call(null,objs));
}catch (e10749){var e_10750 = e10749;
lt.objs.console.error.call(null,e_10750);
}
return process.nextTick((function (){
return lt.objs.settings.refresh_all.call(null,cljs.core.next.call(null,objs));
}));
}
});
lt.objs.settings.refresh_diffed = (function lt$objs$settings$refresh_diffed(diff){
return lt.objs.settings.refresh_all.call(null,cljs.core.mapcat.call(null,lt.object.by_tag,cljs.core.concat.call(null,cljs.core.keys.call(null,new cljs.core.Keyword(null,"+","+",1913524883).cljs$core$IFn$_invoke$arity$1(diff)),cljs.core.keys.call(null,new cljs.core.Keyword(null,"-","-",-2112348439).cljs$core$IFn$_invoke$arity$1(diff)))));
});
lt.objs.settings.__GT_ordered_keystr = (function lt$objs$settings$__GT_ordered_keystr(k){
var char$ = ((cljs.core._EQ_.call(null,cljs.core.last.call(null,k),"-"))?"-":cljs.core.last.call(null,clojure.string.split.call(null,k,"-")));
return [((lt.util.cljs.str_contains_QMARK_.call(null,k,"ctrl"))?"ctrl-":null),((lt.util.cljs.str_contains_QMARK_.call(null,k,"cmd"))?"cmd-":null),((lt.util.cljs.str_contains_QMARK_.call(null,k,"meta"))?"meta-":null),((lt.util.cljs.str_contains_QMARK_.call(null,k,"altgr"))?"altgr-":null),((lt.util.cljs.str_contains_QMARK_.call(null,k,"alt"))?"alt-":null),((lt.util.cljs.str_contains_QMARK_.call(null,k,"shift"))?"shift-":null),cljs.core.str.cljs$core$IFn$_invoke$arity$1(char$)].join('');
});
lt.objs.settings.fix_key = (function lt$objs$settings$fix_key(k){
var k__$1 = clojure.string.replace.call(null,k,"pmeta",lt.objs.keyboard.meta);
var keys = clojure.string.split.call(null,k__$1," ");
return cljs.core.reduce.call(null,(function (p1__10751_SHARP_,p2__10752_SHARP_){
return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__10751_SHARP_)," ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__10752_SHARP_)].join('');
}),cljs.core.map.call(null,lt.objs.settings.__GT_ordered_keystr,keys));
});
lt.objs.settings.fix_key_entry = (function lt$objs$settings$fix_key_entry(p__10753){
var vec__10754 = p__10753;
var k = cljs.core.nth.call(null,vec__10754,(0),null);
var v = cljs.core.nth.call(null,vec__10754,(1),null);
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [lt.objs.settings.fix_key.call(null,k),v], null);
});
lt.objs.settings._PLUS_keys = (function lt$objs$settings$_PLUS_keys(cur,m){
return cljs.core.reduce.call(null,(function (res,p__10758){
var vec__10759 = p__10758;
var k = cljs.core.nth.call(null,vec__10759,(0),null);
var v = cljs.core.nth.call(null,vec__10759,(1),null);
return cljs.core.update_in.call(null,res,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [k], null),(function (p1__10757_SHARP_){
return cljs.core.into.call(null,(function (){var or__4160__auto__ = p1__10757_SHARP_;
if(cljs.core.truth_(or__4160__auto__)){
return or__4160__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.map.call(null,lt.objs.settings.fix_key_entry,v));
}));
}),cur,m);
});
lt.objs.settings._keys = (function lt$objs$settings$_keys(cur,m){
return cljs.core.reduce.call(null,(function (res,p__10763){
var vec__10764 = p__10763;
var k = cljs.core.nth.call(null,vec__10764,(0),null);
var v = cljs.core.nth.call(null,vec__10764,(1),null);
return cljs.core.update_in.call(null,res,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [k], null),(function (p1__10762_SHARP_){
return cljs.core.apply.call(null,cljs.core.dissoc,p1__10762_SHARP_,cljs.core.map.call(null,lt.objs.settings.fix_key,((cljs.core.map_QMARK_.call(null,v))?cljs.core.keys.call(null,v):v)));
}));
}),cur,m);
});
lt.objs.settings.key_diff = (function lt$objs$settings$key_diff(p__10767,final$){
var map__10768 = p__10767;
var map__10768__$1 = cljs.core.__destructure_map.call(null,map__10768);
var add = cljs.core.get.call(null,map__10768__$1,new cljs.core.Keyword(null,"+","+",1913524883));
var rem = cljs.core.get.call(null,map__10768__$1,new cljs.core.Keyword(null,"-","-",-2112348439));
return lt.objs.settings._PLUS_keys.call(null,lt.objs.settings._keys.call(null,final$,rem),add);
});
lt.objs.settings.load_all_keys = (function lt$objs$settings$load_all_keys(){
var final$ = cljs.core.reduce.call(null,(function (fin,cur){
return lt.objs.settings.key_diff.call(null,cur,fin);
}),cljs.core.PersistentArrayMap.EMPTY,cljs.core.concat.call(null,lt.object.raise_reduce.call(null,lt.objs.app.app,new cljs.core.Keyword(null,"keymap.diffs.default+","keymap.diffs.default+",-577617345),cljs.core.PersistentVector.EMPTY),lt.object.raise_reduce.call(null,lt.objs.app.app,new cljs.core.Keyword(null,"keymap.diffs.plugin+","keymap.diffs.plugin+",844114694),cljs.core.PersistentVector.EMPTY),lt.object.raise_reduce.call(null,lt.objs.app.app,new cljs.core.Keyword(null,"keymap.diffs.user+","keymap.diffs.user+",-435792044),cljs.core.PersistentVector.EMPTY)));
return cljs.core.reset_BANG_.call(null,lt.objs.keyboard.keys,final$);
});
/**
 * 
 */
lt.objs.settings.__BEH__default_behavior_diffs = (function lt$objs$settings$__BEH__default_behavior_diffs(this$,diffs){
return cljs.core.concat.call(null,diffs,lt.objs.settings.behavior_diffs_in.call(null,lt.objs.files.lt_home.call(null,"settings/default/")));
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.settings","default-behavior-diffs","lt.objs.settings/default-behavior-diffs",1037819685),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"behaviors.diffs.default+","behaviors.diffs.default+",-659027530),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.settings.__BEH__default_behavior_diffs);
lt.objs.settings.user_plugin_dir = lt.objs.files.lt_user_dir.call(null,"User");
/**
 * 
 */
lt.objs.settings.__BEH__user_behavior_diffs = (function lt$objs$settings$__BEH__user_behavior_diffs(this$,diffs){
return cljs.core.concat.call(null,diffs,lt.objs.settings.behavior_diffs_in.call(null,lt.objs.settings.user_plugin_dir));
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.settings","user-behavior-diffs","lt.objs.settings/user-behavior-diffs",-1762471677),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"behaviors.diffs.user+","behaviors.diffs.user+",-916482803),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.settings.__BEH__user_behavior_diffs);
/**
 * 
 */
lt.objs.settings.__BEH__initial_behaviors = (function lt$objs$settings$__BEH__initial_behaviors(this$){
if(cljs.core.truth_(lt.objs.files.exists_QMARK_.call(null,lt.objs.settings.user_plugin_dir))){
} else {
lt.objs.files.mkdir.call(null,lt.objs.settings.user_plugin_dir);
}

lt.object.raise.call(null,this$,new cljs.core.Keyword(null,"pre-load","pre-load",-1239999613));

lt.objs.settings.load_all.call(null);

var seq__10769_10773 = cljs.core.seq.call(null,cljs.core.vals.call(null,cljs.core.deref.call(null,lt.object.instances)));
var chunk__10770_10774 = null;
var count__10771_10775 = (0);
var i__10772_10776 = (0);
while(true){
if((i__10772_10776 < count__10771_10775)){
var inst_10777 = cljs.core._nth.call(null,chunk__10770_10774,i__10772_10776);
lt.object.refresh_BANG_.call(null,inst_10777);


var G__10778 = seq__10769_10773;
var G__10779 = chunk__10770_10774;
var G__10780 = count__10771_10775;
var G__10781 = (i__10772_10776 + (1));
seq__10769_10773 = G__10778;
chunk__10770_10774 = G__10779;
count__10771_10775 = G__10780;
i__10772_10776 = G__10781;
continue;
} else {
var temp__5753__auto___10782 = cljs.core.seq.call(null,seq__10769_10773);
if(temp__5753__auto___10782){
var seq__10769_10783__$1 = temp__5753__auto___10782;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__10769_10783__$1)){
var c__4591__auto___10784 = cljs.core.chunk_first.call(null,seq__10769_10783__$1);
var G__10785 = cljs.core.chunk_rest.call(null,seq__10769_10783__$1);
var G__10786 = c__4591__auto___10784;
var G__10787 = cljs.core.count.call(null,c__4591__auto___10784);
var G__10788 = (0);
seq__10769_10773 = G__10785;
chunk__10770_10774 = G__10786;
count__10771_10775 = G__10787;
i__10772_10776 = G__10788;
continue;
} else {
var inst_10789 = cljs.core.first.call(null,seq__10769_10783__$1);
lt.object.refresh_BANG_.call(null,inst_10789);


var G__10790 = cljs.core.next.call(null,seq__10769_10783__$1);
var G__10791 = null;
var G__10792 = (0);
var G__10793 = (0);
seq__10769_10773 = G__10790;
chunk__10770_10774 = G__10791;
count__10771_10775 = G__10792;
i__10772_10776 = G__10793;
continue;
}
} else {
}
}
break;
}

lt.objs.settings.load_all_keys.call(null);

return lt.objs.keyboard.refresh.call(null);
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.settings","initial-behaviors","lt.objs.settings/initial-behaviors",123075103),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"pre-init","pre-init",423602427),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.settings.__BEH__initial_behaviors);
/**
 * 
 */
lt.objs.settings.__BEH__load_behaviors = (function lt$objs$settings$__BEH__load_behaviors(this$){
lt.objs.notifos.working.call(null,"loading behaviors...");

lt.objs.settings.load_all.call(null);

return lt.objs.settings.refresh_all.call(null,cljs.core.vals.call(null,cljs.core.deref.call(null,lt.object.instances)));
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.settings","load-behaviors","lt.objs.settings/load-behaviors",221558706),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"behaviors.reload","behaviors.reload",2130924967),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.settings.__BEH__load_behaviors);
/**
 * 
 */
lt.objs.settings.__BEH__eval_settings = (function lt$objs$settings$__BEH__eval_settings(ed){
return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"save","save",1850079149));
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.settings","eval-settings","lt.objs.settings/eval-settings",-1273726011),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"eval.one","eval.one",-520903538),null,new cljs.core.Keyword(null,"eval","eval",-1103567905),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.settings.__BEH__eval_settings);
/**
 * 
 */
lt.objs.settings.__BEH__grab_workspace_behaviors = (function lt$objs$settings$__BEH__grab_workspace_behaviors(workspace,old){
var old__$1 = new cljs.core.Keyword(null,"ws-behaviors","ws-behaviors",-1322175278).cljs$core$IFn$_invoke$arity$1(old);
var old__$2 = ((cljs.core.empty_QMARK_.call(null,old__$1))?null:lt.objs.settings.parse_behaviors.call(null,cljs.reader.read_string.call(null,old__$1),"workspace.behaviors"));
var neue = new cljs.core.Keyword(null,"ws-behaviors","ws-behaviors",-1322175278).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,workspace));
var neue__$1 = ((cljs.core.empty_QMARK_.call(null,neue))?null:lt.objs.settings.parse_behaviors.call(null,cljs.reader.read_string.call(null,neue),"workspace.behaviors"));
if(cljs.core.truth_(old__$2)){
lt.objs.settings.apply_diff.call(null,lt.objs.settings.reverse_diff.call(null,old__$2));

lt.objs.settings.refresh_diffed.call(null,old__$2);
} else {
}

if(cljs.core.truth_(neue__$1)){
lt.objs.settings.apply_diff.call(null,neue__$1);

return lt.objs.settings.refresh_diffed.call(null,neue__$1);
} else {
return null;
}
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.settings","grab-workspace-behaviors","lt.objs.settings/grab-workspace-behaviors",1485506549),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"set","set",304602554),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.settings.__BEH__grab_workspace_behaviors);
/**
 * 
 */
lt.objs.settings.__BEH__workspace_save = (function lt$objs$settings$__BEH__workspace_save(editor){
var map__10794 = cljs.core.deref.call(null,editor).call(null,new cljs.core.Keyword(null,"info","info",-317069002));
var map__10794__$1 = cljs.core.__destructure_map.call(null,map__10794);
var path = cljs.core.get.call(null,map__10794__$1,new cljs.core.Keyword(null,"path","path",-188191168));
var final$ = lt.object.raise_reduce.call(null,editor,new cljs.core.Keyword(null,"save+","save+",-787237961),lt.objs.editor.__GT_val.call(null,editor));
lt.object.merge_BANG_.call(null,lt.objs.workspace.current_ws,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"ws-behaviors","ws-behaviors",-1322175278),final$], null));

lt.object.merge_BANG_.call(null,editor,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"dirty","dirty",729553281),false], null));

lt.object.raise.call(null,editor,new cljs.core.Keyword(null,"saved","saved",288760660));

lt.object.raise.call(null,editor,new cljs.core.Keyword(null,"clean","clean",41534079));

return lt.object.raise.call(null,lt.objs.workspace.current_ws,new cljs.core.Keyword(null,"serialize!","serialize!",1684731051));
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.settings","workspace-save","lt.objs.settings/workspace-save",-870129491),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"save","save",1850079149),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.settings.__BEH__workspace_save);
lt.objs.settings.user_behaviors_path = lt.objs.files.join.call(null,lt.objs.settings.user_plugin_dir,"user.behaviors");
lt.objs.settings.user_keymap_path = lt.objs.files.join.call(null,lt.objs.settings.user_plugin_dir,"user.keymap");
lt.objs.settings.user_cljs_path = lt.objs.files.join.call(null,lt.objs.settings.user_plugin_dir,"src","lt","plugins","user.cljs");
lt.objs.settings.user_plugin_paths = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["user.behaviors","user.keymap","src","project.clj","plugin.edn","user_compiled.js"], null);
/**
 * 
 */
lt.objs.settings.__BEH__create_user_plugin = (function lt$objs$settings$__BEH__create_user_plugin(app){
var seq__10795 = cljs.core.seq.call(null,lt.objs.settings.user_plugin_paths);
var chunk__10796 = null;
var count__10797 = (0);
var i__10798 = (0);
while(true){
if((i__10798 < count__10797)){
var path = cljs.core._nth.call(null,chunk__10796,i__10798);
var full_path_10799 = lt.objs.files.join.call(null,lt.objs.settings.user_plugin_dir,path);
if(cljs.core.truth_(lt.objs.files.exists_QMARK_.call(null,full_path_10799))){
} else {
if(cljs.core.truth_(((cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["user.behaviors",null,"user.keymap",null], null), null),path))?lt.objs.files.exists_QMARK_.call(null,lt.objs.files.lt_user_dir.call(null,["/settings/",cljs.core.str.cljs$core$IFn$_invoke$arity$1(path)].join(''))):false))){
lt.objs.files.copy.call(null,lt.objs.files.lt_user_dir.call(null,["/settings/",cljs.core.str.cljs$core$IFn$_invoke$arity$1(path)].join('')),full_path_10799);
} else {
lt.objs.files.copy.call(null,lt.objs.files.lt_home.call(null,lt.objs.files.join.call(null,"core","User",path)),full_path_10799);
}
}


var G__10800 = seq__10795;
var G__10801 = chunk__10796;
var G__10802 = count__10797;
var G__10803 = (i__10798 + (1));
seq__10795 = G__10800;
chunk__10796 = G__10801;
count__10797 = G__10802;
i__10798 = G__10803;
continue;
} else {
var temp__5753__auto__ = cljs.core.seq.call(null,seq__10795);
if(temp__5753__auto__){
var seq__10795__$1 = temp__5753__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__10795__$1)){
var c__4591__auto__ = cljs.core.chunk_first.call(null,seq__10795__$1);
var G__10804 = cljs.core.chunk_rest.call(null,seq__10795__$1);
var G__10805 = c__4591__auto__;
var G__10806 = cljs.core.count.call(null,c__4591__auto__);
var G__10807 = (0);
seq__10795 = G__10804;
chunk__10796 = G__10805;
count__10797 = G__10806;
i__10798 = G__10807;
continue;
} else {
var path = cljs.core.first.call(null,seq__10795__$1);
var full_path_10808 = lt.objs.files.join.call(null,lt.objs.settings.user_plugin_dir,path);
if(cljs.core.truth_(lt.objs.files.exists_QMARK_.call(null,full_path_10808))){
} else {
if(cljs.core.truth_(((cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["user.behaviors",null,"user.keymap",null], null), null),path))?lt.objs.files.exists_QMARK_.call(null,lt.objs.files.lt_user_dir.call(null,["/settings/",cljs.core.str.cljs$core$IFn$_invoke$arity$1(path)].join(''))):false))){
lt.objs.files.copy.call(null,lt.objs.files.lt_user_dir.call(null,["/settings/",cljs.core.str.cljs$core$IFn$_invoke$arity$1(path)].join('')),full_path_10808);
} else {
lt.objs.files.copy.call(null,lt.objs.files.lt_home.call(null,lt.objs.files.join.call(null,"core","User",path)),full_path_10808);
}
}


var G__10809 = cljs.core.next.call(null,seq__10795__$1);
var G__10810 = null;
var G__10811 = (0);
var G__10812 = (0);
seq__10795 = G__10809;
chunk__10796 = G__10810;
count__10797 = G__10811;
i__10798 = G__10812;
continue;
}
} else {
return null;
}
}
break;
}
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.settings","create-user-plugin","lt.objs.settings/create-user-plugin",791464501),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"create-user-plugin","create-user-plugin",1061956772),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.settings.__BEH__create_user_plugin);
/**
 * If the given keymap or behaviors file is in the old map format,
 *   backs it up and converts it to the flattened vec format.
 */
lt.objs.settings.convert_file = (function lt$objs$settings$convert_file(file){
var config = lt.objs.settings.safe_read.call(null,new cljs.core.Keyword(null,"content","content",15833224).cljs$core$IFn$_invoke$arity$1(lt.objs.files.open_sync.call(null,file)),file);
if(cljs.core.map_QMARK_.call(null,config)){
var backup_file = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(file),".bak"].join('');
var _ = lt.objs.files.copy.call(null,file,backup_file);
var convert_fn = (function (){var G__10813 = lt.objs.files.ext.call(null,file);
switch (G__10813) {
case "keymap":
return lt.objs.settings.map__GT_flat_keymap;

break;
case "behaviors":
return lt.objs.settings.map__GT_flat_behaviors;

break;
default:
return cljs.core.identity;

}
})();
var body = [";; Your file has been converted to the new flat format.\n",";; Conversion does not preserve comments or indentation.\n",";; File is backed up at ",backup_file,"\n",lt.objs.settings.pprint_flat_behaviors.call(null,convert_fn.call(null,config))].join('');
return lt.objs.files.save.call(null,file,body);
} else {
return null;
}
});
/**
 * 
 */
lt.objs.settings.__BEH__flatten_map_settings = (function lt$objs$settings$__BEH__flatten_map_settings(app){
var seq__10816 = cljs.core.seq.call(null,cljs.core.filter.call(null,(function (p1__10815_SHARP_){
return cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["keymap",null,"behaviors",null], null), null),lt.objs.files.ext.call(null,p1__10815_SHARP_));
}),lt.objs.files.full_path_ls.call(null,lt.objs.settings.user_plugin_dir)));
var chunk__10817 = null;
var count__10818 = (0);
var i__10819 = (0);
while(true){
if((i__10819 < count__10818)){
var file = cljs.core._nth.call(null,chunk__10817,i__10819);
lt.objs.settings.convert_file.call(null,file);


var G__10820 = seq__10816;
var G__10821 = chunk__10817;
var G__10822 = count__10818;
var G__10823 = (i__10819 + (1));
seq__10816 = G__10820;
chunk__10817 = G__10821;
count__10818 = G__10822;
i__10819 = G__10823;
continue;
} else {
var temp__5753__auto__ = cljs.core.seq.call(null,seq__10816);
if(temp__5753__auto__){
var seq__10816__$1 = temp__5753__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__10816__$1)){
var c__4591__auto__ = cljs.core.chunk_first.call(null,seq__10816__$1);
var G__10824 = cljs.core.chunk_rest.call(null,seq__10816__$1);
var G__10825 = c__4591__auto__;
var G__10826 = cljs.core.count.call(null,c__4591__auto__);
var G__10827 = (0);
seq__10816 = G__10824;
chunk__10817 = G__10825;
count__10818 = G__10826;
i__10819 = G__10827;
continue;
} else {
var file = cljs.core.first.call(null,seq__10816__$1);
lt.objs.settings.convert_file.call(null,file);


var G__10828 = cljs.core.next.call(null,seq__10816__$1);
var G__10829 = null;
var G__10830 = (0);
var G__10831 = (0);
seq__10816 = G__10828;
chunk__10817 = G__10829;
count__10818 = G__10830;
i__10819 = G__10831;
continue;
}
} else {
return null;
}
}
break;
}
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.settings","flatten-map-settings","lt.objs.settings/flatten-map-settings",1596709618),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"flatten-map-settings","flatten-map-settings",772619331),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.settings.__BEH__flatten_map_settings);
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",-894540724),new cljs.core.Keyword(null,"behaviors.reload","behaviors.reload",2130924967),new cljs.core.Keyword(null,"desc","desc",2093485764),"App: Reload behaviors",new cljs.core.Keyword(null,"exec","exec",1625568743),(function (){
return lt.object.raise.call(null,cljs.core.first.call(null,lt.object.by_tag.call(null,new cljs.core.Keyword(null,"app","app",-560961707))),new cljs.core.Keyword(null,"behaviors.reload","behaviors.reload",2130924967));
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",-894540724),new cljs.core.Keyword(null,"keymaps.reload","keymaps.reload",-244540607),new cljs.core.Keyword(null,"desc","desc",2093485764),"App: Reload keymaps",new cljs.core.Keyword(null,"exec","exec",1625568743),(function (){
lt.objs.settings.load_all_keys.call(null);

lt.objs.keyboard.refresh.call(null);

lt.object.raise.call(null,cljs.core.first.call(null,lt.object.by_tag.call(null,new cljs.core.Keyword(null,"app","app",-560961707))),new cljs.core.Keyword(null,"app.keys.load","app.keys.load",-1717839792));

return lt.objs.notifos.set_msg_BANG_.call(null,"keys loaded");
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",-894540724),new cljs.core.Keyword(null,"behaviors.modify-user","behaviors.modify-user",-973902490),new cljs.core.Keyword(null,"desc","desc",2093485764),"Settings: User behaviors",new cljs.core.Keyword(null,"exec","exec",1625568743),(function (){
return lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"open-path","open-path",2082525233),lt.objs.settings.user_behaviors_path);
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",-894540724),new cljs.core.Keyword(null,"behaviors.view-default","behaviors.view-default",116065479),new cljs.core.Keyword(null,"desc","desc",2093485764),"Settings: Default behaviors",new cljs.core.Keyword(null,"exec","exec",1625568743),(function (){
return lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"open-path","open-path",2082525233),lt.objs.files.lt_home.call(null,"/settings/default/default.behaviors"));
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",-894540724),new cljs.core.Keyword(null,"behaviors.modify-workspace","behaviors.modify-workspace",835008819),new cljs.core.Keyword(null,"desc","desc",2093485764),"Settings: Workspace behaviors",new cljs.core.Keyword(null,"exec","exec",1625568743),(function (){
return lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"opener.open-info","opener.open-info",1573577989),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"mime","mime",-1846414642),"text/x-clojure",new cljs.core.Keyword(null,"name","name",1843675177),"workspace.behaviors",new cljs.core.Keyword(null,"tags","tags",1771418977),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"editor.behaviors","editor.behaviors",-661211790),new cljs.core.Keyword(null,"editor.behaviors.workspace","editor.behaviors.workspace",-713102198)], null),new cljs.core.Keyword(null,"content","content",15833224),new cljs.core.Keyword(null,"ws-behaviors","ws-behaviors",-1322175278).cljs$core$IFn$_invoke$arity$2(cljs.core.deref.call(null,lt.objs.workspace.current_ws),"")], null));
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",-894540724),new cljs.core.Keyword(null,"keymap.modify-user","keymap.modify-user",1194420785),new cljs.core.Keyword(null,"desc","desc",2093485764),"Settings: User keymap",new cljs.core.Keyword(null,"exec","exec",1625568743),(function (){
return lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"open-path","open-path",2082525233),lt.objs.settings.user_keymap_path);
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",-894540724),new cljs.core.Keyword(null,"keymap.view-default","keymap.view-default",1416925645),new cljs.core.Keyword(null,"desc","desc",2093485764),"Settings: Default keymap",new cljs.core.Keyword(null,"exec","exec",1625568743),(function (){
return lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"open-path","open-path",2082525233),lt.objs.files.lt_home.call(null,"/settings/default/default.keymap"));
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",-894540724),new cljs.core.Keyword(null,"user.modify-user","user.modify-user",-829072516),new cljs.core.Keyword(null,"desc","desc",2093485764),"Settings: User script",new cljs.core.Keyword(null,"exec","exec",1625568743),(function (){
return lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"open-path","open-path",2082525233),lt.objs.settings.user_cljs_path);
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",-894540724),new cljs.core.Keyword(null,"user.add-user-plugin-to-workspace","user.add-user-plugin-to-workspace",-1906213797),new cljs.core.Keyword(null,"desc","desc",2093485764),"Settings: Add User plugin to workspace",new cljs.core.Keyword(null,"exec","exec",1625568743),(function (){
return lt.object.raise.call(null,lt.objs.workspace.current_ws,new cljs.core.Keyword(null,"add.folder!","add.folder!",755480535),lt.objs.settings.user_plugin_dir);
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",-894540724),new cljs.core.Keyword(null,"convert-to-flat-format","convert-to-flat-format",-589692592),new cljs.core.Keyword(null,"desc","desc",2093485764),"Settings: Convert current file to flat format",new cljs.core.Keyword(null,"exec","exec",1625568743),(function (){
return lt.objs.settings.convert_file.call(null,cljs.core.get_in.call(null,cljs.core.deref.call(null,lt.objs.editor.pool.last_active.call(null)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"info","info",-317069002),new cljs.core.Keyword(null,"path","path",-188191168)], null)));
})], null));
/**
 * 
 */
lt.objs.settings.__BEH__on_close_remove = (function lt$objs$settings$__BEH__on_close_remove(this$){
return lt.objs.tabs.rem_BANG_.call(null,this$);
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.settings","on-close-remove","lt.objs.settings/on-close-remove",957814399),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"close","close",1835149582),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.settings.__BEH__on_close_remove);
lt.objs.settings.flat_keymap__GT_map = (function lt$objs$settings$flat_keymap__GT_map(flat){
var adds = ({});
var removes = ({});
var seq__10836_10894 = cljs.core.seq.call(null,flat);
var chunk__10838_10895 = null;
var count__10839_10896 = (0);
var i__10840_10897 = (0);
while(true){
if((i__10840_10897 < count__10839_10896)){
var vec__10858_10898 = cljs.core._nth.call(null,chunk__10838_10895,i__10840_10897);
var tag_10899 = cljs.core.nth.call(null,vec__10858_10898,(0),null);
var key_10900 = cljs.core.nth.call(null,vec__10858_10898,(1),null);
var all_10901 = vec__10858_10898;
var vec__10861_10902 = ((((cljs.core._EQ_.call(null,(lt.objs.settings.keyword__GT_str.call(null,key_10900)[(0)]),"-")) && ((cljs.core.count.call(null,lt.objs.settings.keyword__GT_str.call(null,key_10900)) > (1)))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [removes,cljs.core.subs.call(null,lt.objs.settings.keyword__GT_str.call(null,key_10900),(1))], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [adds,lt.objs.settings.keyword__GT_str.call(null,key_10900)], null));
var coll_10903 = cljs.core.nth.call(null,vec__10861_10902,(0),null);
var key_10904__$1 = cljs.core.nth.call(null,vec__10861_10902,(1),null);
var remove_QMARK__10905 = (coll_10903 === removes);
var tag_10906__$1 = lt.objs.settings.keyword__GT_str.call(null,tag_10899);
if(cljs.core.truth_((coll_10903[tag_10906__$1]))){
} else {
(coll_10903[tag_10906__$1] = ((remove_QMARK__10905)?[]:({})));
}

if(remove_QMARK__10905){
(coll_10903[tag_10906__$1]).push(key_10904__$1);
} else {
((coll_10903[tag_10906__$1])[key_10904__$1] = cljs.core.subvec.call(null,all_10901,(2)));
}


var G__10907 = seq__10836_10894;
var G__10908 = chunk__10838_10895;
var G__10909 = count__10839_10896;
var G__10910 = (i__10840_10897 + (1));
seq__10836_10894 = G__10907;
chunk__10838_10895 = G__10908;
count__10839_10896 = G__10909;
i__10840_10897 = G__10910;
continue;
} else {
var temp__5753__auto___10911 = cljs.core.seq.call(null,seq__10836_10894);
if(temp__5753__auto___10911){
var seq__10836_10912__$1 = temp__5753__auto___10911;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__10836_10912__$1)){
var c__4591__auto___10913 = cljs.core.chunk_first.call(null,seq__10836_10912__$1);
var G__10914 = cljs.core.chunk_rest.call(null,seq__10836_10912__$1);
var G__10915 = c__4591__auto___10913;
var G__10916 = cljs.core.count.call(null,c__4591__auto___10913);
var G__10917 = (0);
seq__10836_10894 = G__10914;
chunk__10838_10895 = G__10915;
count__10839_10896 = G__10916;
i__10840_10897 = G__10917;
continue;
} else {
var vec__10866_10918 = cljs.core.first.call(null,seq__10836_10912__$1);
var tag_10919 = cljs.core.nth.call(null,vec__10866_10918,(0),null);
var key_10920 = cljs.core.nth.call(null,vec__10866_10918,(1),null);
var all_10921 = vec__10866_10918;
var vec__10869_10922 = ((((cljs.core._EQ_.call(null,(lt.objs.settings.keyword__GT_str.call(null,key_10920)[(0)]),"-")) && ((cljs.core.count.call(null,lt.objs.settings.keyword__GT_str.call(null,key_10920)) > (1)))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [removes,cljs.core.subs.call(null,lt.objs.settings.keyword__GT_str.call(null,key_10920),(1))], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [adds,lt.objs.settings.keyword__GT_str.call(null,key_10920)], null));
var coll_10923 = cljs.core.nth.call(null,vec__10869_10922,(0),null);
var key_10924__$1 = cljs.core.nth.call(null,vec__10869_10922,(1),null);
var remove_QMARK__10925 = (coll_10923 === removes);
var tag_10926__$1 = lt.objs.settings.keyword__GT_str.call(null,tag_10919);
if(cljs.core.truth_((coll_10923[tag_10926__$1]))){
} else {
(coll_10923[tag_10926__$1] = ((remove_QMARK__10925)?[]:({})));
}

if(remove_QMARK__10925){
(coll_10923[tag_10926__$1]).push(key_10924__$1);
} else {
((coll_10923[tag_10926__$1])[key_10924__$1] = cljs.core.subvec.call(null,all_10921,(2)));
}


var G__10927 = cljs.core.next.call(null,seq__10836_10912__$1);
var G__10928 = null;
var G__10929 = (0);
var G__10930 = (0);
seq__10836_10894 = G__10927;
chunk__10838_10895 = G__10928;
count__10839_10896 = G__10929;
i__10840_10897 = G__10930;
continue;
}
} else {
}
}
break;
}

return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"+","+",1913524883),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4564__auto__ = (function lt$objs$settings$flat_keymap__GT_map_$_iter__10874(s__10875){
return (new cljs.core.LazySeq(null,(function (){
var s__10875__$1 = s__10875;
while(true){
var temp__5753__auto__ = cljs.core.seq.call(null,s__10875__$1);
if(temp__5753__auto__){
var s__10875__$2 = temp__5753__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,s__10875__$2)){
var c__4562__auto__ = cljs.core.chunk_first.call(null,s__10875__$2);
var size__4563__auto__ = cljs.core.count.call(null,c__4562__auto__);
var b__10877 = cljs.core.chunk_buffer.call(null,size__4563__auto__);
if((function (){var i__10876 = (0);
while(true){
if((i__10876 < size__4563__auto__)){
var vec__10878 = cljs.core._nth.call(null,c__4562__auto__,i__10876);
var tag = cljs.core.nth.call(null,vec__10878,(0),null);
var keys = cljs.core.nth.call(null,vec__10878,(1),null);
cljs.core.chunk_append.call(null,b__10877,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null,tag),keys], null));

var G__10931 = (i__10876 + (1));
i__10876 = G__10931;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__10877),lt$objs$settings$flat_keymap__GT_map_$_iter__10874.call(null,cljs.core.chunk_rest.call(null,s__10875__$2)));
} else {
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__10877),null);
}
} else {
var vec__10881 = cljs.core.first.call(null,s__10875__$2);
var tag = cljs.core.nth.call(null,vec__10881,(0),null);
var keys = cljs.core.nth.call(null,vec__10881,(1),null);
return cljs.core.cons.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null,tag),keys], null),lt$objs$settings$flat_keymap__GT_map_$_iter__10874.call(null,cljs.core.rest.call(null,s__10875__$2)));
}
} else {
return null;
}
break;
}
}),null,null));
});
return iter__4564__auto__.call(null,cljs.core.js__GT_clj.call(null,adds));
})()),new cljs.core.Keyword(null,"-","-",-2112348439),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4564__auto__ = (function lt$objs$settings$flat_keymap__GT_map_$_iter__10884(s__10885){
return (new cljs.core.LazySeq(null,(function (){
var s__10885__$1 = s__10885;
while(true){
var temp__5753__auto__ = cljs.core.seq.call(null,s__10885__$1);
if(temp__5753__auto__){
var s__10885__$2 = temp__5753__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,s__10885__$2)){
var c__4562__auto__ = cljs.core.chunk_first.call(null,s__10885__$2);
var size__4563__auto__ = cljs.core.count.call(null,c__4562__auto__);
var b__10887 = cljs.core.chunk_buffer.call(null,size__4563__auto__);
if((function (){var i__10886 = (0);
while(true){
if((i__10886 < size__4563__auto__)){
var vec__10888 = cljs.core._nth.call(null,c__4562__auto__,i__10886);
var tag = cljs.core.nth.call(null,vec__10888,(0),null);
var keys = cljs.core.nth.call(null,vec__10888,(1),null);
cljs.core.chunk_append.call(null,b__10887,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null,tag),keys], null));

var G__10932 = (i__10886 + (1));
i__10886 = G__10932;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__10887),lt$objs$settings$flat_keymap__GT_map_$_iter__10884.call(null,cljs.core.chunk_rest.call(null,s__10885__$2)));
} else {
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__10887),null);
}
} else {
var vec__10891 = cljs.core.first.call(null,s__10885__$2);
var tag = cljs.core.nth.call(null,vec__10891,(0),null);
var keys = cljs.core.nth.call(null,vec__10891,(1),null);
return cljs.core.cons.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null,tag),keys], null),lt$objs$settings$flat_keymap__GT_map_$_iter__10884.call(null,cljs.core.rest.call(null,s__10885__$2)));
}
} else {
return null;
}
break;
}
}),null,null));
});
return iter__4564__auto__.call(null,cljs.core.js__GT_clj.call(null,removes));
})())], null);
});
lt.objs.settings.map__GT_flat_keymap = (function lt$objs$settings$map__GT_flat_keymap(keymap){
var flat = [];
var seq__10933_11085 = cljs.core.seq.call(null,new cljs.core.Keyword(null,"+","+",1913524883).cljs$core$IFn$_invoke$arity$1(keymap));
var chunk__10940_11086 = null;
var count__10941_11087 = (0);
var i__10942_11088 = (0);
while(true){
if((i__10942_11088 < count__10941_11087)){
var vec__10979_11089 = cljs.core._nth.call(null,chunk__10940_11086,i__10942_11088);
var tag_11090 = cljs.core.nth.call(null,vec__10979_11089,(0),null);
var keys_11091 = cljs.core.nth.call(null,vec__10979_11089,(1),null);
var seq__10943_11092 = cljs.core.seq.call(null,keys_11091);
var chunk__10945_11093 = null;
var count__10946_11094 = (0);
var i__10947_11095 = (0);
while(true){
if((i__10947_11095 < count__10946_11094)){
var vec__10988_11096 = cljs.core._nth.call(null,chunk__10945_11093,i__10947_11095);
var key_11097 = cljs.core.nth.call(null,vec__10988_11096,(0),null);
var commands_11098 = cljs.core.nth.call(null,vec__10988_11096,(1),null);
var tag_vec_11099 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_11090,key_11097], null);
flat.push(cljs.core.into.call(null,tag_vec_11099,commands_11098));


var G__11100 = seq__10943_11092;
var G__11101 = chunk__10945_11093;
var G__11102 = count__10946_11094;
var G__11103 = (i__10947_11095 + (1));
seq__10943_11092 = G__11100;
chunk__10945_11093 = G__11101;
count__10946_11094 = G__11102;
i__10947_11095 = G__11103;
continue;
} else {
var temp__5753__auto___11104 = cljs.core.seq.call(null,seq__10943_11092);
if(temp__5753__auto___11104){
var seq__10943_11105__$1 = temp__5753__auto___11104;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__10943_11105__$1)){
var c__4591__auto___11106 = cljs.core.chunk_first.call(null,seq__10943_11105__$1);
var G__11107 = cljs.core.chunk_rest.call(null,seq__10943_11105__$1);
var G__11108 = c__4591__auto___11106;
var G__11109 = cljs.core.count.call(null,c__4591__auto___11106);
var G__11110 = (0);
seq__10943_11092 = G__11107;
chunk__10945_11093 = G__11108;
count__10946_11094 = G__11109;
i__10947_11095 = G__11110;
continue;
} else {
var vec__10991_11111 = cljs.core.first.call(null,seq__10943_11105__$1);
var key_11112 = cljs.core.nth.call(null,vec__10991_11111,(0),null);
var commands_11113 = cljs.core.nth.call(null,vec__10991_11111,(1),null);
var tag_vec_11114 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_11090,key_11112], null);
flat.push(cljs.core.into.call(null,tag_vec_11114,commands_11113));


var G__11115 = cljs.core.next.call(null,seq__10943_11105__$1);
var G__11116 = null;
var G__11117 = (0);
var G__11118 = (0);
seq__10943_11092 = G__11115;
chunk__10945_11093 = G__11116;
count__10946_11094 = G__11117;
i__10947_11095 = G__11118;
continue;
}
} else {
}
}
break;
}

var G__11119 = seq__10933_11085;
var G__11120 = chunk__10940_11086;
var G__11121 = count__10941_11087;
var G__11122 = (i__10942_11088 + (1));
seq__10933_11085 = G__11119;
chunk__10940_11086 = G__11120;
count__10941_11087 = G__11121;
i__10942_11088 = G__11122;
continue;
} else {
var temp__5753__auto___11123 = cljs.core.seq.call(null,seq__10933_11085);
if(temp__5753__auto___11123){
var seq__10933_11124__$1 = temp__5753__auto___11123;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__10933_11124__$1)){
var c__4591__auto___11125 = cljs.core.chunk_first.call(null,seq__10933_11124__$1);
var G__11126 = cljs.core.chunk_rest.call(null,seq__10933_11124__$1);
var G__11127 = c__4591__auto___11125;
var G__11128 = cljs.core.count.call(null,c__4591__auto___11125);
var G__11129 = (0);
seq__10933_11085 = G__11126;
chunk__10940_11086 = G__11127;
count__10941_11087 = G__11128;
i__10942_11088 = G__11129;
continue;
} else {
var vec__10994_11130 = cljs.core.first.call(null,seq__10933_11124__$1);
var tag_11131 = cljs.core.nth.call(null,vec__10994_11130,(0),null);
var keys_11132 = cljs.core.nth.call(null,vec__10994_11130,(1),null);
var seq__10934_11133 = cljs.core.seq.call(null,keys_11132);
var chunk__10936_11134 = null;
var count__10937_11135 = (0);
var i__10938_11136 = (0);
while(true){
if((i__10938_11136 < count__10937_11135)){
var vec__11003_11137 = cljs.core._nth.call(null,chunk__10936_11134,i__10938_11136);
var key_11138 = cljs.core.nth.call(null,vec__11003_11137,(0),null);
var commands_11139 = cljs.core.nth.call(null,vec__11003_11137,(1),null);
var tag_vec_11140 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_11131,key_11138], null);
flat.push(cljs.core.into.call(null,tag_vec_11140,commands_11139));


var G__11141 = seq__10934_11133;
var G__11142 = chunk__10936_11134;
var G__11143 = count__10937_11135;
var G__11144 = (i__10938_11136 + (1));
seq__10934_11133 = G__11141;
chunk__10936_11134 = G__11142;
count__10937_11135 = G__11143;
i__10938_11136 = G__11144;
continue;
} else {
var temp__5753__auto___11145__$1 = cljs.core.seq.call(null,seq__10934_11133);
if(temp__5753__auto___11145__$1){
var seq__10934_11146__$1 = temp__5753__auto___11145__$1;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__10934_11146__$1)){
var c__4591__auto___11147 = cljs.core.chunk_first.call(null,seq__10934_11146__$1);
var G__11148 = cljs.core.chunk_rest.call(null,seq__10934_11146__$1);
var G__11149 = c__4591__auto___11147;
var G__11150 = cljs.core.count.call(null,c__4591__auto___11147);
var G__11151 = (0);
seq__10934_11133 = G__11148;
chunk__10936_11134 = G__11149;
count__10937_11135 = G__11150;
i__10938_11136 = G__11151;
continue;
} else {
var vec__11006_11152 = cljs.core.first.call(null,seq__10934_11146__$1);
var key_11153 = cljs.core.nth.call(null,vec__11006_11152,(0),null);
var commands_11154 = cljs.core.nth.call(null,vec__11006_11152,(1),null);
var tag_vec_11155 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_11131,key_11153], null);
flat.push(cljs.core.into.call(null,tag_vec_11155,commands_11154));


var G__11156 = cljs.core.next.call(null,seq__10934_11146__$1);
var G__11157 = null;
var G__11158 = (0);
var G__11159 = (0);
seq__10934_11133 = G__11156;
chunk__10936_11134 = G__11157;
count__10937_11135 = G__11158;
i__10938_11136 = G__11159;
continue;
}
} else {
}
}
break;
}

var G__11160 = cljs.core.next.call(null,seq__10933_11124__$1);
var G__11161 = null;
var G__11162 = (0);
var G__11163 = (0);
seq__10933_11085 = G__11160;
chunk__10940_11086 = G__11161;
count__10941_11087 = G__11162;
i__10942_11088 = G__11163;
continue;
}
} else {
}
}
break;
}

var seq__11009_11164 = cljs.core.seq.call(null,new cljs.core.Keyword(null,"-","-",-2112348439).cljs$core$IFn$_invoke$arity$1(keymap));
var chunk__11016_11165 = null;
var count__11017_11166 = (0);
var i__11018_11167 = (0);
while(true){
if((i__11018_11167 < count__11017_11166)){
var vec__11055_11168 = cljs.core._nth.call(null,chunk__11016_11165,i__11018_11167);
var tag_11169 = cljs.core.nth.call(null,vec__11055_11168,(0),null);
var keys_11170 = cljs.core.nth.call(null,vec__11055_11168,(1),null);
var seq__11019_11171 = cljs.core.seq.call(null,keys_11170);
var chunk__11021_11172 = null;
var count__11022_11173 = (0);
var i__11023_11174 = (0);
while(true){
if((i__11023_11174 < count__11022_11173)){
var key_11175 = cljs.core._nth.call(null,chunk__11021_11172,i__11023_11174);
var vec__11064_11176 = ((cljs.core.map_QMARK_.call(null,keys_11170))?key_11175:new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_11175,cljs.core.PersistentVector.EMPTY], null));
var key_11177__$1 = cljs.core.nth.call(null,vec__11064_11176,(0),null);
var command_11178 = cljs.core.nth.call(null,vec__11064_11176,(1),null);
var tag_vec_11179 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_11169,["-",cljs.core.str.cljs$core$IFn$_invoke$arity$1(key_11177__$1)].join('')], null);
flat.push(cljs.core.into.call(null,tag_vec_11179,command_11178));


var G__11180 = seq__11019_11171;
var G__11181 = chunk__11021_11172;
var G__11182 = count__11022_11173;
var G__11183 = (i__11023_11174 + (1));
seq__11019_11171 = G__11180;
chunk__11021_11172 = G__11181;
count__11022_11173 = G__11182;
i__11023_11174 = G__11183;
continue;
} else {
var temp__5753__auto___11184 = cljs.core.seq.call(null,seq__11019_11171);
if(temp__5753__auto___11184){
var seq__11019_11185__$1 = temp__5753__auto___11184;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__11019_11185__$1)){
var c__4591__auto___11186 = cljs.core.chunk_first.call(null,seq__11019_11185__$1);
var G__11187 = cljs.core.chunk_rest.call(null,seq__11019_11185__$1);
var G__11188 = c__4591__auto___11186;
var G__11189 = cljs.core.count.call(null,c__4591__auto___11186);
var G__11190 = (0);
seq__11019_11171 = G__11187;
chunk__11021_11172 = G__11188;
count__11022_11173 = G__11189;
i__11023_11174 = G__11190;
continue;
} else {
var key_11191 = cljs.core.first.call(null,seq__11019_11185__$1);
var vec__11067_11192 = ((cljs.core.map_QMARK_.call(null,keys_11170))?key_11191:new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_11191,cljs.core.PersistentVector.EMPTY], null));
var key_11193__$1 = cljs.core.nth.call(null,vec__11067_11192,(0),null);
var command_11194 = cljs.core.nth.call(null,vec__11067_11192,(1),null);
var tag_vec_11195 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_11169,["-",cljs.core.str.cljs$core$IFn$_invoke$arity$1(key_11193__$1)].join('')], null);
flat.push(cljs.core.into.call(null,tag_vec_11195,command_11194));


var G__11196 = cljs.core.next.call(null,seq__11019_11185__$1);
var G__11197 = null;
var G__11198 = (0);
var G__11199 = (0);
seq__11019_11171 = G__11196;
chunk__11021_11172 = G__11197;
count__11022_11173 = G__11198;
i__11023_11174 = G__11199;
continue;
}
} else {
}
}
break;
}

var G__11200 = seq__11009_11164;
var G__11201 = chunk__11016_11165;
var G__11202 = count__11017_11166;
var G__11203 = (i__11018_11167 + (1));
seq__11009_11164 = G__11200;
chunk__11016_11165 = G__11201;
count__11017_11166 = G__11202;
i__11018_11167 = G__11203;
continue;
} else {
var temp__5753__auto___11204 = cljs.core.seq.call(null,seq__11009_11164);
if(temp__5753__auto___11204){
var seq__11009_11205__$1 = temp__5753__auto___11204;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__11009_11205__$1)){
var c__4591__auto___11206 = cljs.core.chunk_first.call(null,seq__11009_11205__$1);
var G__11207 = cljs.core.chunk_rest.call(null,seq__11009_11205__$1);
var G__11208 = c__4591__auto___11206;
var G__11209 = cljs.core.count.call(null,c__4591__auto___11206);
var G__11210 = (0);
seq__11009_11164 = G__11207;
chunk__11016_11165 = G__11208;
count__11017_11166 = G__11209;
i__11018_11167 = G__11210;
continue;
} else {
var vec__11070_11211 = cljs.core.first.call(null,seq__11009_11205__$1);
var tag_11212 = cljs.core.nth.call(null,vec__11070_11211,(0),null);
var keys_11213 = cljs.core.nth.call(null,vec__11070_11211,(1),null);
var seq__11010_11214 = cljs.core.seq.call(null,keys_11213);
var chunk__11012_11215 = null;
var count__11013_11216 = (0);
var i__11014_11217 = (0);
while(true){
if((i__11014_11217 < count__11013_11216)){
var key_11218 = cljs.core._nth.call(null,chunk__11012_11215,i__11014_11217);
var vec__11079_11219 = ((cljs.core.map_QMARK_.call(null,keys_11213))?key_11218:new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_11218,cljs.core.PersistentVector.EMPTY], null));
var key_11220__$1 = cljs.core.nth.call(null,vec__11079_11219,(0),null);
var command_11221 = cljs.core.nth.call(null,vec__11079_11219,(1),null);
var tag_vec_11222 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_11212,["-",cljs.core.str.cljs$core$IFn$_invoke$arity$1(key_11220__$1)].join('')], null);
flat.push(cljs.core.into.call(null,tag_vec_11222,command_11221));


var G__11223 = seq__11010_11214;
var G__11224 = chunk__11012_11215;
var G__11225 = count__11013_11216;
var G__11226 = (i__11014_11217 + (1));
seq__11010_11214 = G__11223;
chunk__11012_11215 = G__11224;
count__11013_11216 = G__11225;
i__11014_11217 = G__11226;
continue;
} else {
var temp__5753__auto___11227__$1 = cljs.core.seq.call(null,seq__11010_11214);
if(temp__5753__auto___11227__$1){
var seq__11010_11228__$1 = temp__5753__auto___11227__$1;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__11010_11228__$1)){
var c__4591__auto___11229 = cljs.core.chunk_first.call(null,seq__11010_11228__$1);
var G__11230 = cljs.core.chunk_rest.call(null,seq__11010_11228__$1);
var G__11231 = c__4591__auto___11229;
var G__11232 = cljs.core.count.call(null,c__4591__auto___11229);
var G__11233 = (0);
seq__11010_11214 = G__11230;
chunk__11012_11215 = G__11231;
count__11013_11216 = G__11232;
i__11014_11217 = G__11233;
continue;
} else {
var key_11234 = cljs.core.first.call(null,seq__11010_11228__$1);
var vec__11082_11235 = ((cljs.core.map_QMARK_.call(null,keys_11213))?key_11234:new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_11234,cljs.core.PersistentVector.EMPTY], null));
var key_11236__$1 = cljs.core.nth.call(null,vec__11082_11235,(0),null);
var command_11237 = cljs.core.nth.call(null,vec__11082_11235,(1),null);
var tag_vec_11238 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag_11212,["-",cljs.core.str.cljs$core$IFn$_invoke$arity$1(key_11236__$1)].join('')], null);
flat.push(cljs.core.into.call(null,tag_vec_11238,command_11237));


var G__11239 = cljs.core.next.call(null,seq__11010_11228__$1);
var G__11240 = null;
var G__11241 = (0);
var G__11242 = (0);
seq__11010_11214 = G__11239;
chunk__11012_11215 = G__11240;
count__11013_11216 = G__11241;
i__11014_11217 = G__11242;
continue;
}
} else {
}
}
break;
}

var G__11243 = cljs.core.next.call(null,seq__11009_11205__$1);
var G__11244 = null;
var G__11245 = (0);
var G__11246 = (0);
seq__11009_11164 = G__11243;
chunk__11016_11165 = G__11244;
count__11017_11166 = G__11245;
i__11018_11167 = G__11246;
continue;
}
} else {
}
}
break;
}

return cljs.core.vec.call(null,cljs.core.sort_by.call(null,cljs.core.first,cljs.core.js__GT_clj.call(null,flat)));
});
lt.objs.settings.parse_key_file = (function lt$objs$settings$parse_key_file(file){
var keys = lt.objs.settings.safe_read.call(null,new cljs.core.Keyword(null,"content","content",15833224).cljs$core$IFn$_invoke$arity$1(lt.objs.files.open_sync.call(null,file)),file);
if(cljs.core.map_QMARK_.call(null,keys)){
return keys;
} else {
if(cljs.core.vector_QMARK_.call(null,keys)){
return lt.objs.settings.flat_keymap__GT_map.call(null,keys);
} else {
return lt.objs.console.error.call(null,["Invalid keymap file: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(file),". Keymaps must be either a vector or a map."].join(''));

}
}
});
lt.objs.settings.keymap_diffs_in = (function lt$objs$settings$keymap_diffs_in(path){
if(cljs.core.truth_(lt.objs.files.exists_QMARK_.call(null,path))){
return cljs.core.map.call(null,lt.objs.settings.parse_key_file,cljs.core.filter.call(null,(function (p1__11247_SHARP_){
return cljs.core._EQ_.call(null,lt.objs.files.ext.call(null,p1__11247_SHARP_),"keymap");
}),lt.objs.files.full_path_ls.call(null,path)));
} else {
return null;
}
});
/**
 * 
 */
lt.objs.settings.__BEH__default_keymap_diffs = (function lt$objs$settings$__BEH__default_keymap_diffs(this$,diffs){
return cljs.core.concat.call(null,diffs,lt.objs.settings.keymap_diffs_in.call(null,lt.objs.files.lt_home.call(null,"/settings/default/")));
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.settings","default-keymap-diffs","lt.objs.settings/default-keymap-diffs",-637119362),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keymap.diffs.default+","keymap.diffs.default+",-577617345),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.settings.__BEH__default_keymap_diffs);
/**
 * 
 */
lt.objs.settings.__BEH__user_keymap_diffs = (function lt$objs$settings$__BEH__user_keymap_diffs(this$,diffs){
return cljs.core.concat.call(null,diffs,lt.objs.settings.keymap_diffs_in.call(null,lt.objs.settings.user_plugin_dir));
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.settings","user-keymap-diffs","lt.objs.settings/user-keymap-diffs",-874328542),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keymap.diffs.user+","keymap.diffs.user+",-435792044),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.settings.__BEH__user_keymap_diffs);
lt.objs.settings.pair_keybindings = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"editor.keys.normal","editor.keys.normal",-1649567699),new cljs.core.PersistentArrayMap(null, 7, ["\"",new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Keyword(null,"editor.repeat-pair","editor.repeat-pair",-1356015822),"\"")], null),"(",new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Keyword(null,"editor.open-pair","editor.open-pair",1089086685),"(")], null),")",new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Keyword(null,"editor.close-pair","editor.close-pair",-1826198933),")")], null),"[",new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Keyword(null,"editor.open-pair","editor.open-pair",1089086685),"[")], null),"{",new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Keyword(null,"editor.open-pair","editor.open-pair",1089086685),"{")], null),"]",new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Keyword(null,"editor.close-pair","editor.close-pair",-1826198933),"]")], null),"}",new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Keyword(null,"editor.close-pair","editor.close-pair",-1826198933),"}")], null)], null)], null);
/**
 * 
 */
lt.objs.settings.__BEH__pair_keymap_diffs = (function lt$objs$settings$__BEH__pair_keymap_diffs(this$,diffs){
lt.objs.console.error.call(null,["[:app ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword("lt.objs.settings","pair-keymap-diffs","lt.objs.settings/pair-keymap-diffs",1514941387)),"] is deprecated and will be removed in 0.9.0. Use [:editor :lt.objs.editor/autoclose-brackets] instead"].join(''));

return cljs.core.concat.call(null,diffs,(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"+","+",1913524883),lt.objs.settings.pair_keybindings], null),null,(1),null)));
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.settings","pair-keymap-diffs","lt.objs.settings/pair-keymap-diffs",1514941387),new cljs.core.Keyword(null,"desc","desc",2093485764),"Editor: auto-close parens/brackets/quotes/pairs",new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"user","user",1532431356),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keymap.diffs.user+","keymap.diffs.user+",-435792044),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.settings.__BEH__pair_keymap_diffs);
/**
 * 
 */
lt.objs.settings.__BEH__on_behaviors_editor_save = (function lt$objs$settings$__BEH__on_behaviors_editor_save(editor){
return lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"behaviors.reload","behaviors.reload",2130924967));
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.settings","on-behaviors-editor-save","lt.objs.settings/on-behaviors-editor-save",460771607),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"saved","saved",288760660),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.settings.__BEH__on_behaviors_editor_save);
/**
 * 
 */
lt.objs.settings.__BEH__on_keymap_editor_save = (function lt$objs$settings$__BEH__on_keymap_editor_save(editor){
return lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"keymaps.reload","keymaps.reload",-244540607));
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.settings","on-keymap-editor-save","lt.objs.settings/on-keymap-editor-save",-1115486601),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"saved","saved",288760660),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.settings.__BEH__on_keymap_editor_save);
lt.object.tag_behaviors.call(null,new cljs.core.Keyword(null,"app","app",-560961707),new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("lt.objs.settings","initial-behaviors","lt.objs.settings/initial-behaviors",123075103),new cljs.core.Keyword("lt.objs.settings","create-user-plugin","lt.objs.settings/create-user-plugin",791464501),new cljs.core.Keyword("lt.objs.settings","flatten-map-settings","lt.objs.settings/flatten-map-settings",1596709618),new cljs.core.Keyword("lt.objs.settings","load-behaviors","lt.objs.settings/load-behaviors",221558706),new cljs.core.Keyword("lt.objs.settings","default-behavior-diffs","lt.objs.settings/default-behavior-diffs",1037819685),new cljs.core.Keyword("lt.objs.settings","user-behavior-diffs","lt.objs.settings/user-behavior-diffs",-1762471677),new cljs.core.Keyword("lt.objs.settings","default-keymap-diffs","lt.objs.settings/default-keymap-diffs",-637119362),new cljs.core.Keyword("lt.objs.settings","user-keymap-diffs","lt.objs.settings/user-keymap-diffs",-874328542)], null));
