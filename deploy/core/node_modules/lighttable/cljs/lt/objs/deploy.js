// Compiled by ClojureScript 1.10.844 {}
goog.provide('lt.objs.deploy');
goog.require('cljs.core');
goog.require('lt.object');
goog.require('lt.objs.clients');
goog.require('lt.objs.files');
goog.require('lt.objs.popup');
goog.require('lt.objs.cache');
goog.require('lt.objs.notifos');
goog.require('lt.objs.platform');
goog.require('lt.objs.sidebar.command');
goog.require('lt.objs.console');
goog.require('lt.objs.app');
goog.require('lt.util.load');
goog.require('lt.util.js');
goog.require('lt.util.cljs');
goog.require('clojure.string');
goog.require('fetch.core');
lt.objs.deploy.shell = lt.util.load.node_module.call(null,"shelljs");
lt.objs.deploy.fs = require("fs");
lt.objs.deploy.zlib = require("zlib");
lt.objs.deploy.request = lt.util.load.node_module.call(null,"request");
lt.objs.deploy.tar = lt.util.load.node_module.call(null,"tar");
lt.objs.deploy.home_path = lt.objs.files.lt_home.call(null,"");
lt.objs.deploy.request_strict_ssl = true;
lt.objs.deploy.tar_path = (function lt$objs$deploy$tar_path(v){
if(cljs.core.truth_(lt.objs.cache.fetch.call(null,new cljs.core.Keyword(null,"edge","edge",919909153)))){
return "https://api.github.com/repos/LightTable/LightTable/tarball/master";
} else {
return ["https://api.github.com/repos/LightTable/LightTable/tarball/",cljs.core.str.cljs$core$IFn$_invoke$arity$1(v)].join('');
}
});
lt.objs.deploy.version_regex = /^\d+\.\d+\.\d+(-.*)?$/;
lt.objs.deploy.get_versions = (function lt$objs$deploy$get_versions(){
var vstr = new cljs.core.Keyword(null,"content","content",15833224).cljs$core$IFn$_invoke$arity$1(lt.objs.files.open_sync.call(null,lt.objs.files.lt_home.call(null,"core/version.json")));
return cljs.core.js__GT_clj.call(null,JSON.parse(vstr),new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),true);
});
lt.objs.deploy.proxy_QMARK_ = (function lt$objs$deploy$proxy_QMARK_(){
var p = lt.objs.deploy.get_proxy.call(null,lt.objs.deploy.tar_path.call(null,"0.5.0"));
if(lt.util.cljs.str_contains_QMARK_.call(null,p,"PROXY")){
return cljs.core.second.call(null,clojure.string.split.call(null,p," "));
} else {
return null;
}
});
lt.objs.deploy.version_timeout = (((60) * (60)) * (1000));
lt.objs.deploy.version = lt.objs.deploy.get_versions.call(null);
lt.objs.deploy.str__GT_version = (function lt$objs$deploy$str__GT_version(s){
var vec__10120 = clojure.string.split.call(null,s,".");
var major = cljs.core.nth.call(null,vec__10120,(0),null);
var minor = cljs.core.nth.call(null,vec__10120,(1),null);
var patch = cljs.core.nth.call(null,vec__10120,(2),null);
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"major","major",-27376078),parseInt(major),new cljs.core.Keyword(null,"minor","minor",-608536071),parseInt(minor),new cljs.core.Keyword(null,"patch","patch",380775109),parseInt(patch)], null);
});
lt.objs.deploy.compare_versions = (function lt$objs$deploy$compare_versions(v1,v2){
if(cljs.core._EQ_.call(null,v1,v2)){
return false;
} else {
return (!((((new cljs.core.Keyword(null,"major","major",-27376078).cljs$core$IFn$_invoke$arity$1(v2) < new cljs.core.Keyword(null,"major","major",-27376078).cljs$core$IFn$_invoke$arity$1(v1))) || (((cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"major","major",-27376078).cljs$core$IFn$_invoke$arity$1(v2),new cljs.core.Keyword(null,"major","major",-27376078).cljs$core$IFn$_invoke$arity$1(v1))) && ((new cljs.core.Keyword(null,"minor","minor",-608536071).cljs$core$IFn$_invoke$arity$1(v2) < new cljs.core.Keyword(null,"minor","minor",-608536071).cljs$core$IFn$_invoke$arity$1(v1))))) || (((cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"major","major",-27376078).cljs$core$IFn$_invoke$arity$1(v2),new cljs.core.Keyword(null,"major","major",-27376078).cljs$core$IFn$_invoke$arity$1(v1))) && (cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"minor","minor",-608536071).cljs$core$IFn$_invoke$arity$1(v2),new cljs.core.Keyword(null,"minor","minor",-608536071).cljs$core$IFn$_invoke$arity$1(v1))) && ((new cljs.core.Keyword(null,"patch","patch",380775109).cljs$core$IFn$_invoke$arity$1(v2) < new cljs.core.Keyword(null,"patch","patch",380775109).cljs$core$IFn$_invoke$arity$1(v1))))))));
}
});
/**
 * Returns true if second version is newer/greater than first version.
 */
lt.objs.deploy.is_newer_QMARK_ = (function lt$objs$deploy$is_newer_QMARK_(v1,v2){
return lt.objs.deploy.compare_versions.call(null,lt.objs.deploy.str__GT_version.call(null,v1),lt.objs.deploy.str__GT_version.call(null,v2));
});
lt.objs.deploy.download_file = (function lt$objs$deploy$download_file(from,to,cb){
var options = (function (){var obj10124 = ({"url":from,"headers":(function (){var obj10126 = ({"User-Agent":"Light Table"});
return obj10126;
})(),"strictSSL":lt.objs.deploy.request_strict_ssl});
return obj10124;
})();
var out = lt.objs.deploy.fs.createWriteStream(to);
var temp__5753__auto___10127 = (function (){var or__4160__auto__ = process.env.http_proxy;
if(cljs.core.truth_(or__4160__auto__)){
return or__4160__auto__;
} else {
return process.env.https_proxy;
}
})();
if(cljs.core.truth_(temp__5753__auto___10127)){
var proxy_10128 = temp__5753__auto___10127;
(options.proxy = proxy_10128);
} else {
}

return lt.objs.deploy.request.get(options,cb).on("response",(function (resp){
if(cljs.core._EQ_.call(null,resp.statusCode,(200))){
return null;
} else {
lt.objs.notifos.done_working.call(null);

throw (new Error(["Error downloading: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(from)," status code: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(resp.statusCode)].join('')));
}
})).pipe(out);
});
lt.objs.deploy.download_zip = (function lt$objs$deploy$download_zip(ver,cb){
var n = lt.objs.notifos.working.call(null,["Downloading version ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ver)," .."].join(''));
return lt.objs.deploy.download_file.call(null,lt.objs.deploy.tar_path.call(null,ver),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(lt.objs.deploy.home_path),"/tmp.tar.gz"].join(''),(function (e,r,body){
lt.objs.notifos.done_working.call(null);

return cb.call(null,e,r,body);
}));
});
lt.objs.deploy.untar = (function lt$objs$deploy$untar(from,to,cb){
var t = lt.objs.deploy.fs.createReadStream(from);
return t.pipe(lt.objs.deploy.zlib.createGunzip()).pipe(lt.objs.deploy.tar.Extract((function (){var obj10130 = ({"path":to});
return obj10130;
})())).on("end",cb);
});
lt.objs.deploy.move_tmp = (function lt$objs$deploy$move_tmp(){
var parent_dir_10135 = cljs.core.first.call(null,lt.objs.files.full_path_ls.call(null,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(lt.objs.deploy.home_path),"/tmp/"].join('')));
var seq__10131_10136 = cljs.core.seq.call(null,lt.objs.files.full_path_ls.call(null,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent_dir_10135),"/deploy/"].join('')));
var chunk__10132_10137 = null;
var count__10133_10138 = (0);
var i__10134_10139 = (0);
while(true){
if((i__10134_10139 < count__10133_10138)){
var file_10140 = cljs.core._nth.call(null,chunk__10132_10137,i__10134_10139);
lt.objs.deploy.shell.cp("-rf",file_10140,lt.objs.deploy.home_path);


var G__10141 = seq__10131_10136;
var G__10142 = chunk__10132_10137;
var G__10143 = count__10133_10138;
var G__10144 = (i__10134_10139 + (1));
seq__10131_10136 = G__10141;
chunk__10132_10137 = G__10142;
count__10133_10138 = G__10143;
i__10134_10139 = G__10144;
continue;
} else {
var temp__5753__auto___10145 = cljs.core.seq.call(null,seq__10131_10136);
if(temp__5753__auto___10145){
var seq__10131_10146__$1 = temp__5753__auto___10145;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__10131_10146__$1)){
var c__4591__auto___10147 = cljs.core.chunk_first.call(null,seq__10131_10146__$1);
var G__10148 = cljs.core.chunk_rest.call(null,seq__10131_10146__$1);
var G__10149 = c__4591__auto___10147;
var G__10150 = cljs.core.count.call(null,c__4591__auto___10147);
var G__10151 = (0);
seq__10131_10136 = G__10148;
chunk__10132_10137 = G__10149;
count__10133_10138 = G__10150;
i__10134_10139 = G__10151;
continue;
} else {
var file_10152 = cljs.core.first.call(null,seq__10131_10146__$1);
lt.objs.deploy.shell.cp("-rf",file_10152,lt.objs.deploy.home_path);


var G__10153 = cljs.core.next.call(null,seq__10131_10146__$1);
var G__10154 = null;
var G__10155 = (0);
var G__10156 = (0);
seq__10131_10136 = G__10153;
chunk__10132_10137 = G__10154;
count__10133_10138 = G__10155;
i__10134_10139 = G__10156;
continue;
}
} else {
}
}
break;
}

return lt.objs.deploy.shell.rm("-rf",[cljs.core.str.cljs$core$IFn$_invoke$arity$1(lt.objs.deploy.home_path),"/tmp*"].join(''));
});
lt.objs.deploy.fetch_and_deploy = (function lt$objs$deploy$fetch_and_deploy(ver){
return lt.objs.deploy.download_zip.call(null,ver,(function (){
lt.objs.notifos.working.call(null,"Extracting update...");

return lt.objs.deploy.untar.call(null,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(lt.objs.deploy.home_path),"/tmp.tar.gz"].join(''),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(lt.objs.deploy.home_path),"/tmp"].join(''),(function (){
lt.objs.deploy.move_tmp.call(null);

lt.objs.notifos.done_working.call(null);

(lt.objs.deploy.version = cljs.core.assoc.call(null,lt.objs.deploy.version,new cljs.core.Keyword(null,"version","version",425292698),ver));

return lt.objs.popup.popup_BANG_.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"header","header",119441134),"Light Table has been updated!",new cljs.core.Keyword(null,"body","body",-2049205669),["Light Table has been updated to ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ver),"! Just\n                                                         restart to get the latest and greatest."].join(''),new cljs.core.Keyword(null,"buttons","buttons",-1953831197),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"label","label",1718410804),"ok"], null)], null)], null));
}));
}));
});
lt.objs.deploy.tags_url = "https://api.github.com/repos/LightTable/LightTable/tags";
lt.objs.deploy.should_update_popup = (function lt$objs$deploy$should_update_popup(data){
return lt.objs.popup.popup_BANG_.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"header","header",119441134),"There's a newer version of Light Table!",new cljs.core.Keyword(null,"body","body",-2049205669),["Would you like us to download and install version ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(data),"?"].join(''),new cljs.core.Keyword(null,"buttons","buttons",-1953831197),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"label","label",1718410804),"Cancel"], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"label","label",1718410804),"Download and install",new cljs.core.Keyword(null,"action","action",-811238024),(function (){
return lt.objs.deploy.fetch_and_deploy.call(null,data);
})], null)], null)], null));
});
/**
 * Returns latest LT version for github api tags endpoint.
 */
lt.objs.deploy.__GT_latest_version = (function lt$objs$deploy$__GT_latest_version(body){
var temp__5753__auto__ = (function (){try{return JSON.parse(body);
}catch (e10158){var e = e10158;
return lt.objs.console.error.call(null,["Invalid JSON response from ",lt.objs.deploy.tags_url,": ",cljs.core.pr_str.call(null,body)].join(''));
}})();
if(cljs.core.truth_(temp__5753__auto__)){
var parsed_body = temp__5753__auto__;
return cljs.core.last.call(null,cljs.core.sort.call(null,cljs.core.keep.call(null,(function (p1__10157_SHARP_){
if(cljs.core.truth_(cljs.core.re_find.call(null,lt.objs.deploy.version_regex,p1__10157_SHARP_.name))){
return p1__10157_SHARP_.name;
} else {
return null;
}
}),parsed_body)));
} else {
return null;
}
});
lt.objs.deploy.check_version = (function lt$objs$deploy$check_version(var_args){
var args__4777__auto__ = [];
var len__4771__auto___10164 = arguments.length;
var i__4772__auto___10165 = (0);
while(true){
if((i__4772__auto___10165 < len__4771__auto___10164)){
args__4777__auto__.push((arguments[i__4772__auto___10165]));

var G__10166 = (i__4772__auto___10165 + (1));
i__4772__auto___10165 = G__10166;
continue;
} else {
}
break;
}

var argseq__4778__auto__ = ((((0) < args__4777__auto__.length))?(new cljs.core.IndexedSeq(args__4777__auto__.slice((0)),(0),null)):null);
return lt.objs.deploy.check_version.cljs$core$IFn$_invoke$arity$variadic(argseq__4778__auto__);
});

(lt.objs.deploy.check_version.cljs$core$IFn$_invoke$arity$variadic = (function (p__10160){
var vec__10161 = p__10160;
var notify_QMARK_ = cljs.core.nth.call(null,vec__10161,(0),null);
return fetch.core.xhr.call(null,lt.objs.deploy.tags_url,cljs.core.PersistentArrayMap.EMPTY,(function (data){
var latest_version = lt.objs.deploy.__GT_latest_version.call(null,data);
if(cljs.core.truth_(cljs.core.re_find.call(null,lt.objs.deploy.version_regex,latest_version))){
if(cljs.core.truth_(((cljs.core.not_EQ_.call(null,latest_version,""))?((cljs.core.not_EQ_.call(null,latest_version,new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(lt.objs.deploy.version)))?((lt.objs.deploy.is_newer_QMARK_.call(null,new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(lt.objs.deploy.version),latest_version))?(function (){var or__4160__auto__ = notify_QMARK_;
if(cljs.core.truth_(or__4160__auto__)){
return or__4160__auto__;
} else {
return cljs.core.not_EQ_.call(null,localStorage.fetchedVersion,latest_version);
}
})():false):false):false))){
(localStorage.fetchedVersion = latest_version);

return lt.objs.deploy.should_update_popup.call(null,latest_version);
} else {
if(cljs.core.truth_(notify_QMARK_)){
return lt.objs.notifos.set_msg_BANG_.call(null,["At latest version: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(lt.objs.deploy.version))].join(''));
} else {
return null;
}
}
} else {
return null;
}
}));
}));

(lt.objs.deploy.check_version.cljs$lang$maxFixedArity = (0));

/** @this {Function} */
(lt.objs.deploy.check_version.cljs$lang$applyTo = (function (seq10159){
var self__4759__auto__ = this;
return self__4759__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null,seq10159));
}));

/**
 * Binary/electron version. The two versions are in sync since binaries updates
 *   only occur with electron updates.
 */
lt.objs.deploy.binary_version = (function lt$objs$deploy$binary_version(){
return (process.versions["electron"]);
});
/**
 * 
 */
lt.objs.deploy.button = (function lt$objs$deploy$button(var_args){
var args__4777__auto__ = [];
var len__4771__auto___10189 = arguments.length;
var i__4772__auto___10190 = (0);
while(true){
if((i__4772__auto___10190 < len__4771__auto___10189)){
args__4777__auto__.push((arguments[i__4772__auto___10190]));

var G__10191 = (i__4772__auto___10190 + (1));
i__4772__auto___10190 = G__10191;
continue;
} else {
}
break;
}

var argseq__4778__auto__ = ((((1) < args__4777__auto__.length))?(new cljs.core.IndexedSeq(args__4777__auto__.slice((1)),(0),null)):null);
return lt.objs.deploy.button.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4778__auto__);
});

(lt.objs.deploy.button.cljs$core$IFn$_invoke$arity$variadic = (function (label,p__10169){
var vec__10170 = p__10169;
var cb = cljs.core.nth.call(null,vec__10170,(0),null);
var e__992__auto__ = singultus.core.html.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div.button.right","div.button.right",1623860542),label], null));
var seq__10173_10192 = cljs.core.seq.call(null,cljs.core.partition.call(null,(2),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"click","click",1912301393),((function (e__992__auto__,vec__10170,cb){
return (function (){
if(cljs.core.truth_(cb)){
return cb.call(null);
} else {
return null;
}
});})(e__992__auto__,vec__10170,cb))
], null)));
var chunk__10174_10193 = null;
var count__10175_10194 = (0);
var i__10176_10195 = (0);
while(true){
if((i__10176_10195 < count__10175_10194)){
var vec__10183_10196 = cljs.core._nth.call(null,chunk__10174_10193,i__10176_10195);
var ev__993__auto___10197 = cljs.core.nth.call(null,vec__10183_10196,(0),null);
var func__994__auto___10198 = cljs.core.nth.call(null,vec__10183_10196,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___10197,func__994__auto___10198);


var G__10199 = seq__10173_10192;
var G__10200 = chunk__10174_10193;
var G__10201 = count__10175_10194;
var G__10202 = (i__10176_10195 + (1));
seq__10173_10192 = G__10199;
chunk__10174_10193 = G__10200;
count__10175_10194 = G__10201;
i__10176_10195 = G__10202;
continue;
} else {
var temp__5753__auto___10203 = cljs.core.seq.call(null,seq__10173_10192);
if(temp__5753__auto___10203){
var seq__10173_10204__$1 = temp__5753__auto___10203;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__10173_10204__$1)){
var c__4591__auto___10205 = cljs.core.chunk_first.call(null,seq__10173_10204__$1);
var G__10206 = cljs.core.chunk_rest.call(null,seq__10173_10204__$1);
var G__10207 = c__4591__auto___10205;
var G__10208 = cljs.core.count.call(null,c__4591__auto___10205);
var G__10209 = (0);
seq__10173_10192 = G__10206;
chunk__10174_10193 = G__10207;
count__10175_10194 = G__10208;
i__10176_10195 = G__10209;
continue;
} else {
var vec__10186_10210 = cljs.core.first.call(null,seq__10173_10204__$1);
var ev__993__auto___10211 = cljs.core.nth.call(null,vec__10186_10210,(0),null);
var func__994__auto___10212 = cljs.core.nth.call(null,vec__10186_10210,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___10211,func__994__auto___10212);


var G__10213 = cljs.core.next.call(null,seq__10173_10204__$1);
var G__10214 = null;
var G__10215 = (0);
var G__10216 = (0);
seq__10173_10192 = G__10213;
chunk__10174_10193 = G__10214;
count__10175_10194 = G__10215;
i__10176_10195 = G__10216;
continue;
}
} else {
}
}
break;
}

return e__992__auto__;
}));

(lt.objs.deploy.button.cljs$lang$maxFixedArity = (1));

/** @this {Function} */
(lt.objs.deploy.button.cljs$lang$applyTo = (function (seq10167){
var G__10168 = cljs.core.first.call(null,seq10167);
var seq10167__$1 = cljs.core.next.call(null,seq10167);
var self__4758__auto__ = this;
return self__4758__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10168,seq10167__$1);
}));

lt.objs.deploy.alert_binary_update = (function lt$objs$deploy$alert_binary_update(){
return lt.objs.popup.popup_BANG_.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"header","header",119441134),"There's been a binary update!",new cljs.core.Keyword(null,"body","body",-2049205669),"There's a new version of the Light Table binary. Clicking below will open the\n                                 Light Table website so you can download the updated version.",new cljs.core.Keyword(null,"buttons","buttons",-1953831197),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"label","label",1718410804),"Download latest",new cljs.core.Keyword(null,"action","action",-811238024),(function (){
lt.objs.platform.open_url.call(null,"http://www.lighttable.com");

return lt.objs.popup.remain_open.call(null);
})], null)], null)], null));
});
/**
 * 
 */
lt.objs.deploy.__BEH__check_deploy = (function lt$objs$deploy$__BEH__check_deploy(this$){
if(lt.objs.deploy.is_newer_QMARK_.call(null,lt.objs.deploy.binary_version.call(null),new cljs.core.Keyword(null,"electron","electron",1312019442).cljs$core$IFn$_invoke$arity$1(lt.objs.deploy.version))){
return lt.objs.deploy.alert_binary_update.call(null);
} else {
return null;
}
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.deploy","check-deploy","lt.objs.deploy/check-deploy",1282551742),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"deploy","deploy",-2006774212),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.deploy.__BEH__check_deploy);
/**
 * 
 */
lt.objs.deploy.__BEH__check_version = (function lt$objs$deploy$__BEH__check_version(this$){
if(lt.objs.app.first_window_QMARK_.call(null)){
(localStorage.fetchedVersion = null);
} else {
}

lt.objs.deploy.check_version.call(null);

return lt.util.js.every.call(null,lt.objs.deploy.version_timeout,lt.objs.deploy.check_version);
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.deploy","check-version","lt.objs.deploy/check-version",505502919),new cljs.core.Keyword(null,"desc","desc",2093485764),"App: Automatically check for updates",new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"user","user",1532431356),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"init","init",-1875481434),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.deploy.__BEH__check_version);
/**
 * 
 */
lt.objs.deploy.__BEH__strict_ssl = (function lt$objs$deploy$__BEH__strict_ssl(this$){
return (lt.objs.deploy.request_strict_ssl = true);
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.deploy","strict-ssl","lt.objs.deploy/strict-ssl",499803838),new cljs.core.Keyword(null,"exclusive","exclusive",-1507998718),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("lt.objs.deploy","disable-strict-ssl","lt.objs.deploy/disable-strict-ssl",2143973871)], null),new cljs.core.Keyword(null,"desc","desc",2093485764),"Enables strict SSL certificate checking when downloading LT and LT plugin repos (default setting)",new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"user","user",1532431356),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"object.instant","object.instant",-29936727),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.deploy.__BEH__strict_ssl);
/**
 * 
 */
lt.objs.deploy.__BEH__disable_strict_ssl = (function lt$objs$deploy$__BEH__disable_strict_ssl(this$){
return (lt.objs.deploy.request_strict_ssl = false);
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.deploy","disable-strict-ssl","lt.objs.deploy/disable-strict-ssl",2143973871),new cljs.core.Keyword(null,"exclusive","exclusive",-1507998718),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("lt.objs.deploy","strict-ssl","lt.objs.deploy/strict-ssl",499803838)], null),new cljs.core.Keyword(null,"desc","desc",2093485764),"Disables strict SSL certificate checking when downloading LT and LT plugin repos",new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"user","user",1532431356),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"object.instant","object.instant",-29936727),null], null), null),new cljs.core.Keyword(null,"details","details",1956795411),"In some enterprise environments with SSL proxies strict certificate checking will fail due to MITM certificates used for monitoring SSL traffic. This option allows these network requests to succeed in such environments.",new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.deploy.__BEH__disable_strict_ssl);
lt.object.tag_behaviors.call(null,new cljs.core.Keyword(null,"app","app",-560961707),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("lt.objs.deploy","check-deploy","lt.objs.deploy/check-deploy",1282551742)], null));
