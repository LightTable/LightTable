// Compiled by ClojureScript 1.10.844 {}
goog.provide('lt.objs.proc');
goog.require('cljs.core');
goog.require('lt.object');
goog.require('lt.objs.clients');
goog.require('lt.objs.files');
goog.require('lt.objs.platform');
goog.require('lt.objs.app');
goog.require('lt.objs.notifos');
goog.require('lt.util.load');
goog.require('clojure.string');
lt.objs.proc.shell = lt.util.load.node_module.call(null,"shelljs");
lt.objs.proc.spawn = require("child_process").spawn;
lt.objs.proc.custom_env = cljs.core.atom.call(null,cljs.core.PersistentArrayMap.EMPTY);
lt.objs.proc.procs = cljs.core.atom.call(null,cljs.core.PersistentHashSet.EMPTY);
lt.objs.proc.add_BANG_ = (function lt$objs$proc$add_BANG_(p){
return cljs.core.swap_BANG_.call(null,lt.objs.proc.procs,cljs.core.conj,p);
});
lt.objs.proc.rem_BANG_ = (function lt$objs$proc$rem_BANG_(p){
return cljs.core.swap_BANG_.call(null,lt.objs.proc.procs,cljs.core.disj,p);
});
lt.objs.proc.kill = (function lt$objs$proc$kill(p){
return p.kill();
});
lt.objs.proc.kill_all = (function lt$objs$proc$kill_all(var_args){
var args__4777__auto__ = [];
var len__4771__auto___10271 = arguments.length;
var i__4772__auto___10272 = (0);
while(true){
if((i__4772__auto___10272 < len__4771__auto___10271)){
args__4777__auto__.push((arguments[i__4772__auto___10272]));

var G__10273 = (i__4772__auto___10272 + (1));
i__4772__auto___10272 = G__10273;
continue;
} else {
}
break;
}

var argseq__4778__auto__ = ((((0) < args__4777__auto__.length))?(new cljs.core.IndexedSeq(args__4777__auto__.slice((0)),(0),null)):null);
return lt.objs.proc.kill_all.cljs$core$IFn$_invoke$arity$variadic(argseq__4778__auto__);
});

(lt.objs.proc.kill_all.cljs$core$IFn$_invoke$arity$variadic = (function (p__10263){
var vec__10264 = p__10263;
var ps = cljs.core.nth.call(null,vec__10264,(0),null);
var seq__10267 = cljs.core.seq.call(null,(function (){var or__4160__auto__ = ps;
if(cljs.core.truth_(or__4160__auto__)){
return or__4160__auto__;
} else {
return cljs.core.deref.call(null,lt.objs.proc.procs);
}
})());
var chunk__10268 = null;
var count__10269 = (0);
var i__10270 = (0);
while(true){
if((i__10270 < count__10269)){
var p = cljs.core._nth.call(null,chunk__10268,i__10270);
lt.objs.proc.kill.call(null,p);


var G__10274 = seq__10267;
var G__10275 = chunk__10268;
var G__10276 = count__10269;
var G__10277 = (i__10270 + (1));
seq__10267 = G__10274;
chunk__10268 = G__10275;
count__10269 = G__10276;
i__10270 = G__10277;
continue;
} else {
var temp__5753__auto__ = cljs.core.seq.call(null,seq__10267);
if(temp__5753__auto__){
var seq__10267__$1 = temp__5753__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__10267__$1)){
var c__4591__auto__ = cljs.core.chunk_first.call(null,seq__10267__$1);
var G__10278 = cljs.core.chunk_rest.call(null,seq__10267__$1);
var G__10279 = c__4591__auto__;
var G__10280 = cljs.core.count.call(null,c__4591__auto__);
var G__10281 = (0);
seq__10267 = G__10278;
chunk__10268 = G__10279;
count__10269 = G__10280;
i__10270 = G__10281;
continue;
} else {
var p = cljs.core.first.call(null,seq__10267__$1);
lt.objs.proc.kill.call(null,p);


var G__10282 = cljs.core.next.call(null,seq__10267__$1);
var G__10283 = null;
var G__10284 = (0);
var G__10285 = (0);
seq__10267 = G__10282;
chunk__10268 = G__10283;
count__10269 = G__10284;
i__10270 = G__10285;
continue;
}
} else {
return null;
}
}
break;
}
}));

(lt.objs.proc.kill_all.cljs$lang$maxFixedArity = (0));

/** @this {Function} */
(lt.objs.proc.kill_all.cljs$lang$applyTo = (function (seq10262){
var self__4759__auto__ = this;
return self__4759__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null,seq10262));
}));

lt.objs.proc.parse_commands = (function lt$objs$proc$parse_commands(com){
var pipes = clojure.string.split.call(null,com,"|");
var iter__4564__auto__ = (function lt$objs$proc$parse_commands_$_iter__10286(s__10287){
return (new cljs.core.LazySeq(null,(function (){
var s__10287__$1 = s__10287;
while(true){
var temp__5753__auto__ = cljs.core.seq.call(null,s__10287__$1);
if(temp__5753__auto__){
var s__10287__$2 = temp__5753__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,s__10287__$2)){
var c__4562__auto__ = cljs.core.chunk_first.call(null,s__10287__$2);
var size__4563__auto__ = cljs.core.count.call(null,c__4562__auto__);
var b__10289 = cljs.core.chunk_buffer.call(null,size__4563__auto__);
if((function (){var i__10288 = (0);
while(true){
if((i__10288 < size__4563__auto__)){
var p = cljs.core._nth.call(null,c__4562__auto__,i__10288);
var args = cljs.core.filter.call(null,cljs.core.complement.call(null,cljs.core.empty_QMARK_),cljs.core.re_seq.call(null,/(?:(?:\\\s)|[^\s\"'])+|\"[^\"]*\"|'[^']*'/,p));
cljs.core.chunk_append.call(null,b__10289,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"command","command",-894540724),cljs.core.first.call(null,args),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.rest.call(null,args)], null));

var G__10290 = (i__10288 + (1));
i__10288 = G__10290;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__10289),lt$objs$proc$parse_commands_$_iter__10286.call(null,cljs.core.chunk_rest.call(null,s__10287__$2)));
} else {
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__10289),null);
}
} else {
var p = cljs.core.first.call(null,s__10287__$2);
var args = cljs.core.filter.call(null,cljs.core.complement.call(null,cljs.core.empty_QMARK_),cljs.core.re_seq.call(null,/(?:(?:\\\s)|[^\s\"'])+|\"[^\"]*\"|'[^']*'/,p));
return cljs.core.cons.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"command","command",-894540724),cljs.core.first.call(null,args),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.rest.call(null,args)], null),lt$objs$proc$parse_commands_$_iter__10286.call(null,cljs.core.rest.call(null,s__10287__$2)));
}
} else {
return null;
}
break;
}
}),null,null));
});
return iter__4564__auto__.call(null,pipes);
});
lt.objs.proc.merge_env = (function lt$objs$proc$merge_env(env){
if(cljs.core.not.call(null,env)){
return process.env;
} else {
return cljs.core.clj__GT_js.call(null,cljs.core.merge.call(null,cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4564__auto__ = (function lt$objs$proc$merge_env_$_iter__10291(s__10292){
return (new cljs.core.LazySeq(null,(function (){
var s__10292__$1 = s__10292;
while(true){
var temp__5753__auto__ = cljs.core.seq.call(null,s__10292__$1);
if(temp__5753__auto__){
var s__10292__$2 = temp__5753__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,s__10292__$2)){
var c__4562__auto__ = cljs.core.chunk_first.call(null,s__10292__$2);
var size__4563__auto__ = cljs.core.count.call(null,c__4562__auto__);
var b__10294 = cljs.core.chunk_buffer.call(null,size__4563__auto__);
if((function (){var i__10293 = (0);
while(true){
if((i__10293 < size__4563__auto__)){
var k = cljs.core._nth.call(null,c__4562__auto__,i__10293);
cljs.core.chunk_append.call(null,b__10294,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,(process.env[k])], null));

var G__10295 = (i__10293 + (1));
i__10293 = G__10295;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__10294),lt$objs$proc$merge_env_$_iter__10291.call(null,cljs.core.chunk_rest.call(null,s__10292__$2)));
} else {
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__10294),null);
}
} else {
var k = cljs.core.first.call(null,s__10292__$2);
return cljs.core.cons.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,(process.env[k])], null),lt$objs$proc$merge_env_$_iter__10291.call(null,cljs.core.rest.call(null,s__10292__$2)));
}
} else {
return null;
}
break;
}
}),null,null));
});
return iter__4564__auto__.call(null,Object.keys(process.env));
})()),env,cljs.core.deref.call(null,lt.objs.proc.custom_env)));
}
});
lt.objs.proc.simple_spawn_STAR_ = (function lt$objs$proc$simple_spawn_STAR_(obj,p__10300,cwd_QMARK_,env){
var map__10301 = p__10300;
var map__10301__$1 = cljs.core.__destructure_map.call(null,map__10301);
var command = cljs.core.get.call(null,map__10301__$1,new cljs.core.Keyword(null,"command","command",-894540724));
var args = cljs.core.get.call(null,map__10301__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var proc = lt.objs.proc.spawn.call(null,command,((cljs.core.seq.call(null,args))?cljs.core.clj__GT_js.call(null,args):null),(function (){var obj10303 = ({"cwd":cwd_QMARK_,"env":lt.objs.proc.merge_env.call(null,env)});
return obj10303;
})());
lt.objs.proc.add_BANG_.call(null,proc);

proc.on("exit",cljs.core.partial.call(null,lt.objs.proc.rem_BANG_,proc));

proc.on("error",(function (p1__10296_SHARP_){
if(cljs.core.truth_(cljs.core.deref.call(null,obj))){
cljs.core.println.call(null,cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__10296_SHARP_),(cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__10296_SHARP_).indexOf("ENOENT") > (-1)));

if((cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__10296_SHARP_).indexOf("ENOENT") > (-1))){
lt.object.raise.call(null,obj,new cljs.core.Keyword(null,"proc.error","proc.error",-61427727),["Could not find command: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(command)].join(''));

lt.object.raise.call(null,obj,new cljs.core.Keyword(null,"proc.exit","proc.exit",1585374833));

return proc.kill();
} else {
return lt.object.raise.call(null,obj,new cljs.core.Keyword(null,"proc.error","proc.error",-61427727),p1__10296_SHARP_);
}
} else {
return null;
}
}));

proc.stderr.on("data",(function (p1__10297_SHARP_){
if(cljs.core.not.call(null,cljs.core.deref.call(null,obj))){
return cljs.core.println.call(null,"ERROR running: ",command);
} else {
return lt.object.raise.call(null,obj,new cljs.core.Keyword(null,"proc.error","proc.error",-61427727),p1__10297_SHARP_);
}
}));

proc.stdout.on("data",(function (p1__10298_SHARP_){
if(cljs.core.truth_(cljs.core.deref.call(null,obj))){
return lt.object.raise.call(null,obj,new cljs.core.Keyword(null,"proc.out","proc.out",-1091295217),p1__10298_SHARP_);
} else {
return null;
}
}));

return proc.on("exit",(function (p1__10299_SHARP_){
if(cljs.core.truth_(cljs.core.deref.call(null,obj))){
return lt.object.raise.call(null,obj,new cljs.core.Keyword(null,"proc.exit","proc.exit",1585374833),p1__10299_SHARP_);
} else {
return null;
}
}),proc);
});
lt.objs.proc.exec = (function lt$objs$proc$exec(com){
var map__10304 = com;
var map__10304__$1 = cljs.core.__destructure_map.call(null,map__10304);
var this$ = map__10304__$1;
var command = cljs.core.get.call(null,map__10304__$1,new cljs.core.Keyword(null,"command","command",-894540724));
var obj = cljs.core.get.call(null,map__10304__$1,new cljs.core.Keyword(null,"obj","obj",981763962));
var cwd = cljs.core.get.call(null,map__10304__$1,new cljs.core.Keyword(null,"cwd","cwd",14056523));
var env = cljs.core.get.call(null,map__10304__$1,new cljs.core.Keyword(null,"env","env",-1815813235));
var args = cljs.core.get.call(null,map__10304__$1,new cljs.core.Keyword(null,"args","args",1315556576));
var commands = ((cljs.core.not.call(null,args))?lt.objs.proc.parse_commands.call(null,command):new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$], null));
var procs = cljs.core.doall.call(null,(function (){var iter__4564__auto__ = (function lt$objs$proc$exec_$_iter__10305(s__10306){
return (new cljs.core.LazySeq(null,(function (){
var s__10306__$1 = s__10306;
while(true){
var temp__5753__auto__ = cljs.core.seq.call(null,s__10306__$1);
if(temp__5753__auto__){
var s__10306__$2 = temp__5753__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,s__10306__$2)){
var c__4562__auto__ = cljs.core.chunk_first.call(null,s__10306__$2);
var size__4563__auto__ = cljs.core.count.call(null,c__4562__auto__);
var b__10308 = cljs.core.chunk_buffer.call(null,size__4563__auto__);
if((function (){var i__10307 = (0);
while(true){
if((i__10307 < size__4563__auto__)){
var c = cljs.core._nth.call(null,c__4562__auto__,i__10307);
cljs.core.chunk_append.call(null,b__10308,lt.objs.proc.simple_spawn_STAR_.call(null,obj,c,cwd,env));

var G__10309 = (i__10307 + (1));
i__10307 = G__10309;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__10308),lt$objs$proc$exec_$_iter__10305.call(null,cljs.core.chunk_rest.call(null,s__10306__$2)));
} else {
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__10308),null);
}
} else {
var c = cljs.core.first.call(null,s__10306__$2);
return cljs.core.cons.call(null,lt.objs.proc.simple_spawn_STAR_.call(null,obj,c,cwd,env),lt$objs$proc$exec_$_iter__10305.call(null,cljs.core.rest.call(null,s__10306__$2)));
}
} else {
return null;
}
break;
}
}),null,null));
});
return iter__4564__auto__.call(null,commands);
})());
lt.object.merge_BANG_.call(null,obj,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"procs","procs",-2025727913),procs], null));

return null;
});
/**
 * 
 */
lt.objs.proc.__BEH__kill_procs_on_close = (function lt$objs$proc$__BEH__kill_procs_on_close(this$){
return lt.objs.proc.kill_all.call(null);
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.proc","kill-procs-on-close","lt.objs.proc/kill-procs-on-close",206431418),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"closed","closed",-919675359),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.proc.__BEH__kill_procs_on_close);
lt.object.add_behavior_BANG_.call(null,lt.objs.app.app,new cljs.core.Keyword("lt.objs.proc","kill-procs-on-close","lt.objs.proc/kill-procs-on-close",206431418));
/**
 * 
 */
lt.objs.proc.__BEH__print_all = (function lt$objs$proc$__BEH__print_all(this$,data){
return cljs.core.println.call(null,"PROC: ",data);
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.proc","print-all","lt.objs.proc/print-all",-1424831167),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"proc.out","proc.out",-1091295217),null,new cljs.core.Keyword(null,"proc.exit","proc.exit",1585374833),null,new cljs.core.Keyword(null,"proc.error","proc.error",-61427727),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.proc.__BEH__print_all);
lt.object.object_STAR_.call(null,new cljs.core.Keyword("lt.objs.proc","test-printer","lt.objs.proc/test-printer",1645274936),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,"behaviors","behaviors",120724909),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("lt.objs.proc","print-all","lt.objs.proc/print-all",-1424831167)], null),new cljs.core.Keyword(null,"init","init",-1875481434),(function (){
return null;
}));
lt.objs.proc.printer = lt.object.create.call(null,new cljs.core.Keyword("lt.objs.proc","test-printer","lt.objs.proc/test-printer",1645274936));
lt.objs.proc.find_path_files = (function lt$objs$proc$find_path_files(){
return cljs.core.filter.call(null,lt.objs.files.exists_QMARK_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [lt.objs.files.home.call(null,".profile"),lt.objs.files.home.call(null,".bash_profile")], null));
});
lt.objs.proc.get_path_command = (function lt$objs$proc$get_path_command(){
return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.reduce.call(null,(function (fin,cur){
return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(fin),"source ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cur)," && "].join('');
}),"",lt.objs.proc.find_path_files.call(null))),"echo $PATH"].join('');
});
lt.objs.proc.etc_paths__GT_PATH = (function lt$objs$proc$etc_paths__GT_PATH(){
if(cljs.core.not.call(null,lt.objs.files.exists_QMARK_.call(null,"/etc/paths"))){
return "";
} else {
var ps = clojure.string.split.call(null,new cljs.core.Keyword(null,"content","content",15833224).cljs$core$IFn$_invoke$arity$1(lt.objs.files.open_sync.call(null,"/etc/paths")),"\n");
var path_str = cljs.core.reduce.call(null,cljs.core.str,cljs.core.interpose.call(null,":",cljs.core.filter.call(null,cljs.core.complement.call(null,cljs.core.empty_QMARK_),ps)));
return ["PATH=",cljs.core.str.cljs$core$IFn$_invoke$arity$1(path_str),":$PATH && "].join('');
}
});
/**
 * 
 */
lt.objs.proc.__BEH__set_path_OSX = (function lt$objs$proc$__BEH__set_path_OSX(app){
if(((lt.objs.platform.mac_QMARK_.call(null)) && (cljs.core.not.call(null,(process.env["LTCLI"]))))){
return require("child_process").exec([lt.objs.proc.etc_paths__GT_PATH.call(null),lt.objs.proc.get_path_command.call(null)].join(''),(function (err,out,serr){
if((!(cljs.core.empty_QMARK_.call(null,err)))){
lt.objs.notifos.set_msg_BANG_.call(null,"Failed to source PATH files. See console log for details.",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"class","class",-2030961996),"error"], null));

return console.error(err);
} else {
if(cljs.core.empty_QMARK_.call(null,out)){
return null;
} else {
return (process.env.PATH = out);
}
}
}));
} else {
return null;
}
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.proc","set-path-OSX","lt.objs.proc/set-path-OSX",-98766014),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"init","init",-1875481434),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.proc.__BEH__set_path_OSX);
/**
 * 
 */
lt.objs.proc.__BEH__global_path = (function lt$objs$proc$__BEH__global_path(app,path){
return (process.env.PATH = path);
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.proc","global-path","lt.objs.proc/global-path",-548979717),new cljs.core.Keyword(null,"exclusive","exclusive",-1507998718),true,new cljs.core.Keyword(null,"desc","desc",2093485764),"App: set global PATH for processes",new cljs.core.Keyword(null,"params","params",710516235),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"label","label",1718410804),"path"], null)], null),new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"user","user",1532431356),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"object.instant","object.instant",-29936727),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.proc.__BEH__global_path);
/**
 * 
 */
lt.objs.proc.__BEH__global_env = (function lt$objs$proc$__BEH__global_env(app,kvs){
return cljs.core.reset_BANG_.call(null,lt.objs.proc.custom_env,kvs);
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.proc","global-env","lt.objs.proc/global-env",-1514841312),new cljs.core.Keyword(null,"exclusive","exclusive",-1507998718),true,new cljs.core.Keyword(null,"desc","desc",2093485764),"App: add to the global ENV for processes",new cljs.core.Keyword(null,"params","params",710516235),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"label","label",1718410804),"env map"], null)], null),new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"user","user",1532431356),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"object.instant","object.instant",-29936727),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.proc.__BEH__global_env);
lt.objs.proc.var_caps = (function lt$objs$proc$var_caps(vs){
if(lt.objs.platform.win_QMARK_.call(null)){
return ["echo ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null,cljs.core.str,cljs.core.map.call(null,(function (p1__10310_SHARP_){
return ["%",cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__10310_SHARP_),"%;"].join('');
}),vs)))].join('');
} else {
return ["echo \"",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null,cljs.core.str,cljs.core.map.call(null,(function (p1__10311_SHARP_){
return ["$",cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__10311_SHARP_),";"].join('');
}),vs))),"\""].join('');
}
});
lt.objs.proc.capture = (function lt$objs$proc$capture(cmd,vars,cb){
return require("child_process").exec([cljs.core.str.cljs$core$IFn$_invoke$arity$1(cmd)," && ",lt.objs.proc.var_caps.call(null,vars)].join(''),(function (err,out,serr){
var vs = cljs.core.zipmap.call(null,vars,clojure.string.split.call(null,out,";"));
return cb.call(null,vs);
}));
});
