// Compiled by ClojureScript 1.10.844 {}
goog.provide('lt.objs.plugins');
goog.require('cljs.core');
goog.require('lt.object');
goog.require('lt.objs.command');
goog.require('lt.objs.context');
goog.require('lt.objs.console');
goog.require('lt.objs.app');
goog.require('lt.objs.files');
goog.require('lt.objs.settings');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.popup');
goog.require('lt.objs.deploy');
goog.require('lt.objs.notifos');
goog.require('lt.objs.tabs');
goog.require('lt.util.js');
goog.require('lt.objs.platform');
goog.require('cljs.reader');
goog.require('fetch.core');
goog.require('singultus.core');
goog.require('singultus.binding');
goog.require('lt.util.kahn');
goog.require('lt.util.load');
goog.require('lt.util.dom');
goog.require('clojure.set');
goog.require('clojure.string');
goog.require('clojure.walk');
lt.objs.plugins.plugins_dir = lt.objs.files.lt_home.call(null,"plugins");
lt.objs.plugins.user_plugins_dir = lt.objs.files.lt_user_dir.call(null,"plugins");
lt.objs.plugins._STAR_plugin_dir_STAR_ = null;
lt.objs.plugins.EOF_read = (function lt$objs$plugins$EOF_read(s){
if(cljs.core.truth_((function (){var and__4149__auto__ = s;
if(cljs.core.truth_(and__4149__auto__)){
return cljs.core.seq.call(null,s);
} else {
return and__4149__auto__;
}
})())){
return cljs.reader.read_string.call(null,s);
} else {
return null;
}
});
lt.objs.plugins.munge_plugin_name = (function lt$objs$plugins$munge_plugin_name(n){
if(cljs.core.truth_(n)){
return clojure.string.replace.call(null,clojure.string.replace.call(null,clojure.string.replace.call(null,n," ","_"),"-","_"),".","_");
} else {
return null;
}
});
lt.objs.plugins.adjust_path = (function lt$objs$plugins$adjust_path(path){
if(lt.objs.files.absolute_QMARK_.call(null,path)){
return path;
} else {
return lt.objs.files.join.call(null,(function (){var or__4160__auto__ = new cljs.core.Keyword("lt.objs.plugins","dir","lt.objs.plugins/dir",651688593).cljs$core$IFn$_invoke$arity$1(lt.object._STAR_behavior_meta_STAR_);
if(cljs.core.truth_(or__4160__auto__)){
return or__4160__auto__;
} else {
return lt.objs.files.lt_home.call(null);
}
})(),path);
}
});
lt.objs.plugins.find_plugin = (function lt$objs$plugins$find_plugin(plugin_name){
var plugin_name__$1 = lt.objs.plugins.munge_plugin_name.call(null,plugin_name);
if(cljs.core.truth_(new cljs.core.Keyword("lt.objs.plugins","dir","lt.objs.plugins/dir",651688593).cljs$core$IFn$_invoke$arity$1(lt.object._STAR_behavior_meta_STAR_))){
return new cljs.core.Keyword("lt.objs.plugins","dir","lt.objs.plugins/dir",651688593).cljs$core$IFn$_invoke$arity$1(lt.object._STAR_behavior_meta_STAR_);
} else {
if(cljs.core.truth_(lt.objs.files.exists_QMARK_.call(null,lt.objs.files.join.call(null,lt.objs.plugins.user_plugins_dir,plugin_name__$1)))){
return lt.objs.files.join.call(null,lt.objs.plugins.user_plugins_dir,plugin_name__$1);
} else {
if(cljs.core.truth_(lt.objs.files.exists_QMARK_.call(null,lt.objs.files.join.call(null,lt.objs.plugins.plugins_dir,plugin_name__$1)))){
return lt.objs.files.join.call(null,lt.objs.plugins.plugins_dir,plugin_name__$1);
} else {
return null;

}
}
}
});
lt.objs.plugins.local_module = (function lt$objs$plugins$local_module(plugin_name,module_name){
var temp__5753__auto__ = lt.objs.plugins.find_plugin.call(null,plugin_name);
if(cljs.core.truth_(temp__5753__auto__)){
var plugin_path = temp__5753__auto__;
return lt.objs.files.join.call(null,plugin_path,"node_modules",module_name);
} else {
return null;
}
});
lt.objs.plugins.by_name = (function lt$objs$plugins$by_name(plugin_name){
return cljs.core.get.call(null,new cljs.core.Keyword("lt.objs.plugins","plugins","lt.objs.plugins/plugins",-1345299551).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,lt.objs.app.app)),plugin_name);
});
lt.objs.plugins.installed_QMARK_ = (function lt$objs$plugins$installed_QMARK_(plugin_name){
return cljs.core.boolean$.call(null,lt.objs.plugins.by_name.call(null,plugin_name));
});
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",-894540724),new cljs.core.Keyword(null,"build","build",964396370),new cljs.core.Keyword(null,"desc","desc",2093485764),"Editor: build file or project",new cljs.core.Keyword(null,"exec","exec",1625568743),(function (){
var temp__5753__auto__ = lt.objs.editor.pool.last_active.call(null);
if(cljs.core.truth_(temp__5753__auto__)){
var ed = temp__5753__auto__;
return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"build","build",964396370));
} else {
return null;
}
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",-894540724),new cljs.core.Keyword(null,"behaviors.force-reload","behaviors.force-reload",98969940),new cljs.core.Keyword(null,"desc","desc",2093485764),"Plugins: Ignore cache and force reload the current behaviors file",new cljs.core.Keyword(null,"exec","exec",1625568743),(function (){
var temp__5753__auto__ = lt.objs.editor.pool.last_active.call(null);
if(cljs.core.truth_(temp__5753__auto__)){
var ed = temp__5753__auto__;
if(cljs.core.truth_(lt.object.has_tag_QMARK_.call(null,ed,new cljs.core.Keyword(null,"editor.behaviors","editor.behaviors",-661211790)))){
cljs.core.swap_BANG_.call(null,lt.objs.plugins.manager,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("lt.objs.plugins","force-reload","lt.objs.plugins/force-reload",180193649)], null),(function (p1__13274_SHARP_){
return cljs.core.conj.call(null,(function (){var or__4160__auto__ = p1__13274_SHARP_;
if(cljs.core.truth_(or__4160__auto__)){
return or__4160__auto__;
} else {
return cljs.core.PersistentHashSet.EMPTY;
}
})(),cljs.core.get_in.call(null,cljs.core.deref.call(null,ed),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"info","info",-317069002),new cljs.core.Keyword(null,"path","path",-188191168)], null)));
}));

return lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"behaviors.reload","behaviors.reload",2130924967));
} else {
return null;
}
} else {
return null;
}
})], null));
lt.objs.plugins.validate = (function lt$objs$plugins$validate(plugin,filename){
var valid_QMARK_ = cljs.core.every_QMARK_.call(null,plugin,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"author","author",2111686192),new cljs.core.Keyword(null,"behaviors","behaviors",120724909),new cljs.core.Keyword(null,"desc","desc",2093485764)], null));
if((!(valid_QMARK_))){
lt.objs.console.error.call(null,["Invalid ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(filename)," file: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"dir","dir",1734754661).cljs$core$IFn$_invoke$arity$1(plugin)),"/",cljs.core.str.cljs$core$IFn$_invoke$arity$1(filename),"\nPlugins ","must include values for name, version, author, behaviors, and desc."].join(''));

return null;
} else {
return plugin;
}
});
lt.objs.plugins.plugin_edn = (function lt$objs$plugins$plugin_edn(dir){
var file = lt.objs.files.join.call(null,dir,"plugin.edn");
var temp__5753__auto__ = (function (){var and__4149__auto__ = lt.objs.files.exists_QMARK_.call(null,file);
if(cljs.core.truth_(and__4149__auto__)){
return lt.objs.files.open_sync.call(null,file);
} else {
return and__4149__auto__;
}
})();
if(cljs.core.truth_(temp__5753__auto__)){
var content = temp__5753__auto__;
try{return lt.objs.plugins.validate.call(null,cljs.core.assoc.call(null,lt.objs.plugins.EOF_read.call(null,new cljs.core.Keyword(null,"content","content",15833224).cljs$core$IFn$_invoke$arity$1(content)),new cljs.core.Keyword(null,"dir","dir",1734754661),dir),"plugin.edn");
}catch (e13275){var e = e13275;
return lt.objs.console.error.call(null,["FAILED to load plugin.edn: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(dir)].join(''));
}} else {
return null;
}
});
lt.objs.plugins.plugin_json = (function lt$objs$plugins$plugin_json(dir){
var file = lt.objs.files.join.call(null,dir,"plugin.json");
var temp__5753__auto__ = (function (){var and__4149__auto__ = lt.objs.files.exists_QMARK_.call(null,file);
if(cljs.core.truth_(and__4149__auto__)){
return lt.objs.files.open_sync.call(null,file);
} else {
return and__4149__auto__;
}
})();
if(cljs.core.truth_(temp__5753__auto__)){
var content = temp__5753__auto__;
return lt.objs.plugins.validate.call(null,cljs.core.assoc.call(null,cljs.core.js__GT_clj.call(null,JSON.parse(new cljs.core.Keyword(null,"content","content",15833224).cljs$core$IFn$_invoke$arity$1(content)),new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),true),new cljs.core.Keyword(null,"dir","dir",1734754661),dir),"plugin.json");
} else {
return null;
}
});
lt.objs.plugins.plugin_info = (function lt$objs$plugins$plugin_info(dir){
var or__4160__auto__ = lt.objs.plugins.plugin_json.call(null,dir);
if(cljs.core.truth_(or__4160__auto__)){
return or__4160__auto__;
} else {
return lt.objs.plugins.plugin_edn.call(null,dir);
}
});
lt.objs.plugins.missing_deps = (function lt$objs$plugins$missing_deps(all){
var deps = cljs.core.mapcat.call(null,cljs.core.comp.call(null,cljs.core.seq,new cljs.core.Keyword(null,"dependencies","dependencies",1108064605)),cljs.core.vals.call(null,all));
return cljs.core.seq.call(null,cljs.core.vals.call(null,cljs.core.persistent_BANG_.call(null,cljs.core.reduce.call(null,(function (final$,p__13276){
var vec__13277 = p__13276;
var name = cljs.core.nth.call(null,vec__13277,(0),null);
var version = cljs.core.nth.call(null,vec__13277,(1),null);
var name__$1 = cljs.core.name.call(null,name);
var temp__5751__auto__ = (function (){var or__4160__auto__ = cljs.core.get.call(null,all,name__$1);
if(cljs.core.truth_(or__4160__auto__)){
return or__4160__auto__;
} else {
return cljs.core.get.call(null,final$,name__$1);
}
})();
if(cljs.core.truth_(temp__5751__auto__)){
var cur = temp__5751__auto__;
if(lt.objs.deploy.is_newer_QMARK_.call(null,new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(cur),version)){
return cljs.core.assoc_BANG_.call(null,final$,name__$1,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"name","name",1843675177),name__$1,new cljs.core.Keyword(null,"version","version",425292698),version], null));
} else {
return final$;
}
} else {
return cljs.core.assoc_BANG_.call(null,final$,name__$1,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"name","name",1843675177),name__$1,new cljs.core.Keyword(null,"version","version",425292698),version], null));
}
}),cljs.core.transient$.call(null,cljs.core.PersistentArrayMap.EMPTY),deps))));
});
lt.objs.plugins.outdated_QMARK_ = (function lt$objs$plugins$outdated_QMARK_(plugin){
var cached = new cljs.core.Keyword(null,"latest-version","latest-version",-1985110248).cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null,new cljs.core.Keyword(null,"server-plugins","server-plugins",-514262131).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,lt.objs.plugins.manager)),new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(plugin)));
if(cljs.core.truth_(cached)){
return lt.objs.deploy.is_newer_QMARK_.call(null,new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(plugin),cached);
} else {
return null;
}
});
lt.objs.plugins.plugin_behaviors = (function lt$objs$plugins$plugin_behaviors(plug){
if(cljs.core.seq.call(null,plug)){
try{var map__13281 = plug;
var map__13281__$1 = cljs.core.__destructure_map.call(null,map__13281);
var behaviors = cljs.core.get.call(null,map__13281__$1,new cljs.core.Keyword(null,"behaviors","behaviors",120724909));
var dir = cljs.core.get.call(null,map__13281__$1,new cljs.core.Keyword(null,"dir","dir",1734754661));
var file = lt.objs.files.join.call(null,dir,behaviors);
var file__$1 = lt.objs.files.real_path.call(null,file);
var behs = lt.objs.settings.parse_file.call(null,file__$1);
var force_QMARK_ = cljs.core.get.call(null,new cljs.core.Keyword("lt.objs.plugins","force-reload","lt.objs.plugins/force-reload",180193649).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,lt.objs.plugins.manager)),file__$1);
if(cljs.core.truth_(force_QMARK_)){
cljs.core.swap_BANG_.call(null,lt.objs.plugins.manager,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("lt.objs.plugins","force-reload","lt.objs.plugins/force-reload",180193649)], null),cljs.core.disj,file__$1);
} else {
}

if(cljs.core.truth_(behs)){
clojure.walk.prewalk.call(null,(function (x){
if(cljs.core.coll_QMARK_.call(null,x)){
cljs.core.alter_meta_BANG_.call(null,x,cljs.core.assoc,new cljs.core.Keyword("lt.objs.plugins","dir","lt.objs.plugins/dir",651688593),dir,new cljs.core.Keyword("lt.objs.plugins","force-reload","lt.objs.plugins/force-reload",180193649),force_QMARK_);
} else {
}

return x;
}),behs);

return behs;
} else {
return null;
}
}catch (e13280){var e = e13280;
lt.objs.console.error.call(null,["Could not load behaviors for plugin: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(plug))].join(''));

return cljs.core.PersistentArrayMap.EMPTY;
}} else {
return null;
}
});
lt.objs.plugins.plugin_dependency_graph = (function lt$objs$plugins$plugin_dependency_graph(plugins){
return cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4564__auto__ = (function lt$objs$plugins$plugin_dependency_graph_$_iter__13282(s__13283){
return (new cljs.core.LazySeq(null,(function (){
var s__13283__$1 = s__13283;
while(true){
var temp__5753__auto__ = cljs.core.seq.call(null,s__13283__$1);
if(temp__5753__auto__){
var s__13283__$2 = temp__5753__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,s__13283__$2)){
var c__4562__auto__ = cljs.core.chunk_first.call(null,s__13283__$2);
var size__4563__auto__ = cljs.core.count.call(null,c__4562__auto__);
var b__13285 = cljs.core.chunk_buffer.call(null,size__4563__auto__);
if((function (){var i__13284 = (0);
while(true){
if((i__13284 < size__4563__auto__)){
var vec__13286 = cljs.core._nth.call(null,c__4562__auto__,i__13284);
var nme = cljs.core.nth.call(null,vec__13286,(0),null);
var v = cljs.core.nth.call(null,vec__13286,(1),null);
cljs.core.chunk_append.call(null,b__13285,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [nme,cljs.core.set.call(null,cljs.core.map.call(null,cljs.core.name,cljs.core.keys.call(null,new cljs.core.Keyword(null,"dependencies","dependencies",1108064605).cljs$core$IFn$_invoke$arity$1(v))))], null));

var G__13292 = (i__13284 + (1));
i__13284 = G__13292;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__13285),lt$objs$plugins$plugin_dependency_graph_$_iter__13282.call(null,cljs.core.chunk_rest.call(null,s__13283__$2)));
} else {
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__13285),null);
}
} else {
var vec__13289 = cljs.core.first.call(null,s__13283__$2);
var nme = cljs.core.nth.call(null,vec__13289,(0),null);
var v = cljs.core.nth.call(null,vec__13289,(1),null);
return cljs.core.cons.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [nme,cljs.core.set.call(null,cljs.core.map.call(null,cljs.core.name,cljs.core.keys.call(null,new cljs.core.Keyword(null,"dependencies","dependencies",1108064605).cljs$core$IFn$_invoke$arity$1(v))))], null),lt$objs$plugins$plugin_dependency_graph_$_iter__13282.call(null,cljs.core.rest.call(null,s__13283__$2)));
}
} else {
return null;
}
break;
}
}),null,null));
});
return iter__4564__auto__.call(null,plugins);
})());
});
lt.objs.plugins.find_cycles = (function lt$objs$plugins$find_cycles(cur,p__13293){
var map__13294 = p__13293;
var map__13294__$1 = cljs.core.__destructure_map.call(null,map__13294);
var state = map__13294__$1;
var seen = cljs.core.get.call(null,map__13294__$1,new cljs.core.Keyword(null,"seen","seen",-518999789));
var root = cljs.core.get.call(null,map__13294__$1,new cljs.core.Keyword(null,"root","root",-448657453));
var stack = cljs.core.get.call(null,map__13294__$1,new cljs.core.Keyword(null,"stack","stack",-793405930));
var graph = cljs.core.get.call(null,map__13294__$1,new cljs.core.Keyword(null,"graph","graph",1558099509));
return cljs.core.first.call(null,cljs.core.filter.call(null,cljs.core.identity,(function (){var iter__4564__auto__ = (function lt$objs$plugins$find_cycles_$_iter__13295(s__13296){
return (new cljs.core.LazySeq(null,(function (){
var s__13296__$1 = s__13296;
while(true){
var temp__5753__auto__ = cljs.core.seq.call(null,s__13296__$1);
if(temp__5753__auto__){
var s__13296__$2 = temp__5753__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,s__13296__$2)){
var c__4562__auto__ = cljs.core.chunk_first.call(null,s__13296__$2);
var size__4563__auto__ = cljs.core.count.call(null,c__4562__auto__);
var b__13298 = cljs.core.chunk_buffer.call(null,size__4563__auto__);
if((function (){var i__13297 = (0);
while(true){
if((i__13297 < size__4563__auto__)){
var c = cljs.core._nth.call(null,c__4562__auto__,i__13297);
cljs.core.chunk_append.call(null,b__13298,((cljs.core._EQ_.call(null,c,root))?cljs.core.conj.call(null,stack,c):lt.objs.plugins.find_cycles.call(null,cljs.core.get.call(null,graph,c),cljs.core.update_in.call(null,cljs.core.update_in.call(null,state,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"stack","stack",-793405930)], null),cljs.core.conj,c),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"seen","seen",-518999789)], null),cljs.core.conj,c))));

var G__13299 = (i__13297 + (1));
i__13297 = G__13299;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__13298),lt$objs$plugins$find_cycles_$_iter__13295.call(null,cljs.core.chunk_rest.call(null,s__13296__$2)));
} else {
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__13298),null);
}
} else {
var c = cljs.core.first.call(null,s__13296__$2);
return cljs.core.cons.call(null,((cljs.core._EQ_.call(null,c,root))?cljs.core.conj.call(null,stack,c):lt.objs.plugins.find_cycles.call(null,cljs.core.get.call(null,graph,c),cljs.core.update_in.call(null,cljs.core.update_in.call(null,state,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"stack","stack",-793405930)], null),cljs.core.conj,c),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"seen","seen",-518999789)], null),cljs.core.conj,c))),lt$objs$plugins$find_cycles_$_iter__13295.call(null,cljs.core.rest.call(null,s__13296__$2)));
}
} else {
return null;
}
break;
}
}),null,null));
});
return iter__4564__auto__.call(null,cljs.core.remove.call(null,seen,cur));
})()));
});
lt.objs.plugins.__GT_cycles = (function lt$objs$plugins$__GT_cycles(graph){
return cljs.core.filterv.call(null,cljs.core.identity,(function (){var iter__4564__auto__ = (function lt$objs$plugins$__GT_cycles_$_iter__13300(s__13301){
return (new cljs.core.LazySeq(null,(function (){
var s__13301__$1 = s__13301;
while(true){
var temp__5753__auto__ = cljs.core.seq.call(null,s__13301__$1);
if(temp__5753__auto__){
var s__13301__$2 = temp__5753__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,s__13301__$2)){
var c__4562__auto__ = cljs.core.chunk_first.call(null,s__13301__$2);
var size__4563__auto__ = cljs.core.count.call(null,c__4562__auto__);
var b__13303 = cljs.core.chunk_buffer.call(null,size__4563__auto__);
if((function (){var i__13302 = (0);
while(true){
if((i__13302 < size__4563__auto__)){
var vec__13304 = cljs.core._nth.call(null,c__4562__auto__,i__13302);
var root = cljs.core.nth.call(null,vec__13304,(0),null);
var deps = cljs.core.nth.call(null,vec__13304,(1),null);
var stack = lt.objs.plugins.find_cycles.call(null,deps,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"seen","seen",-518999789),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,"stack","stack",-793405930),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [root], null),new cljs.core.Keyword(null,"graph","graph",1558099509),graph,new cljs.core.Keyword(null,"root","root",-448657453),root], null));
cljs.core.chunk_append.call(null,b__13303,stack);

var G__13310 = (i__13302 + (1));
i__13302 = G__13310;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__13303),lt$objs$plugins$__GT_cycles_$_iter__13300.call(null,cljs.core.chunk_rest.call(null,s__13301__$2)));
} else {
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__13303),null);
}
} else {
var vec__13307 = cljs.core.first.call(null,s__13301__$2);
var root = cljs.core.nth.call(null,vec__13307,(0),null);
var deps = cljs.core.nth.call(null,vec__13307,(1),null);
var stack = lt.objs.plugins.find_cycles.call(null,deps,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"seen","seen",-518999789),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,"stack","stack",-793405930),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [root], null),new cljs.core.Keyword(null,"graph","graph",1558099509),graph,new cljs.core.Keyword(null,"root","root",-448657453),root], null));
return cljs.core.cons.call(null,stack,lt$objs$plugins$__GT_cycles_$_iter__13300.call(null,cljs.core.rest.call(null,s__13301__$2)));
}
} else {
return null;
}
break;
}
}),null,null));
});
return iter__4564__auto__.call(null,graph);
})());
});
lt.objs.plugins.cycle_desc = (function lt$objs$plugins$cycle_desc(cycles){
var iter__4564__auto__ = (function lt$objs$plugins$cycle_desc_$_iter__13311(s__13312){
return (new cljs.core.LazySeq(null,(function (){
var s__13312__$1 = s__13312;
while(true){
var temp__5753__auto__ = cljs.core.seq.call(null,s__13312__$1);
if(temp__5753__auto__){
var s__13312__$2 = temp__5753__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,s__13312__$2)){
var c__4562__auto__ = cljs.core.chunk_first.call(null,s__13312__$2);
var size__4563__auto__ = cljs.core.count.call(null,c__4562__auto__);
var b__13314 = cljs.core.chunk_buffer.call(null,size__4563__auto__);
if((function (){var i__13313 = (0);
while(true){
if((i__13313 < size__4563__auto__)){
var cycle = cljs.core._nth.call(null,c__4562__auto__,i__13313);
cljs.core.chunk_append.call(null,b__13314,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div","div",1057191632),cljs.core.reduce.call(null,cljs.core.str,cljs.core.interpose.call(null," => ",cycle))], null));

var G__13315 = (i__13313 + (1));
i__13313 = G__13315;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__13314),lt$objs$plugins$cycle_desc_$_iter__13311.call(null,cljs.core.chunk_rest.call(null,s__13312__$2)));
} else {
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__13314),null);
}
} else {
var cycle = cljs.core.first.call(null,s__13312__$2);
return cljs.core.cons.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div","div",1057191632),cljs.core.reduce.call(null,cljs.core.str,cljs.core.interpose.call(null," => ",cycle))], null),lt$objs$plugins$cycle_desc_$_iter__13311.call(null,cljs.core.rest.call(null,s__13312__$2)));
}
} else {
return null;
}
break;
}
}),null,null));
});
return iter__4564__auto__.call(null,cycles);
});
lt.objs.plugins.metadata_commits = "https://api.github.com/repos/LightTable/plugin-metadata/commits";
lt.objs.plugins.metadata_download = "https://api.github.com/repos/LightTable/plugin-metadata/tarball/master";
lt.objs.plugins.metadata_dir = lt.objs.files.lt_user_dir.call(null,"metadata");
lt.objs.plugins.metadata_cache = lt.objs.files.join.call(null,lt.objs.plugins.metadata_dir,"cache.json");
lt.objs.plugins.version_sort = (function lt$objs$plugins$version_sort(a,b){
if(cljs.core._EQ_.call(null,a,b)){
return (0);
} else {
if(lt.objs.deploy.is_newer_QMARK_.call(null,a,b)){
return (-1);
} else {
return (1);

}
}
});
lt.objs.plugins.valid_plugin_dir_QMARK_ = (function lt$objs$plugins$valid_plugin_dir_QMARK_(path){
var and__4149__auto__ = lt.objs.files.dir_QMARK_.call(null,path);
if(cljs.core.truth_(and__4149__auto__)){
return (!(cljs.core._EQ_.call(null,"script",lt.objs.files.basename.call(null,path))));
} else {
return and__4149__auto__;
}
});
lt.objs.plugins.build_cache = (function lt$objs$plugins$build_cache(sha){
var items = cljs.core.filter.call(null,lt.objs.plugins.valid_plugin_dir_QMARK_,lt.objs.files.full_path_ls.call(null,lt.objs.plugins.metadata_dir));
var cache = cljs.core.into.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"__sha","__sha",1382835112),sha], null),(function (){var iter__4564__auto__ = (function lt$objs$plugins$build_cache_$_iter__13316(s__13317){
return (new cljs.core.LazySeq(null,(function (){
var s__13317__$1 = s__13317;
while(true){
var temp__5753__auto__ = cljs.core.seq.call(null,s__13317__$1);
if(temp__5753__auto__){
var s__13317__$2 = temp__5753__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,s__13317__$2)){
var c__4562__auto__ = cljs.core.chunk_first.call(null,s__13317__$2);
var size__4563__auto__ = cljs.core.count.call(null,c__4562__auto__);
var b__13319 = cljs.core.chunk_buffer.call(null,size__4563__auto__);
if((function (){var i__13318 = (0);
while(true){
if((i__13318 < size__4563__auto__)){
var plugin = cljs.core._nth.call(null,c__4562__auto__,i__13318);
var versions = cljs.core.vec.call(null,cljs.core.sort_by.call(null,new cljs.core.Keyword(null,"version","version",425292698),lt.objs.plugins.version_sort,cljs.core.map.call(null,lt.objs.plugins.plugin_info,cljs.core.filter.call(null,lt.objs.files.dir_QMARK_,lt.objs.files.full_path_ls.call(null,plugin)))));
var latest = cljs.core.last.call(null,versions);
cljs.core.chunk_append.call(null,b__13319,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(latest),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"versions","versions",536521978),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.call(null,cljs.core.juxt.call(null,new cljs.core.Keyword(null,"version","version",425292698),cljs.core.identity),versions)),new cljs.core.Keyword(null,"latest-version","latest-version",-1985110248),new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(latest)], null)], null));

var G__13320 = (i__13318 + (1));
i__13318 = G__13320;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__13319),lt$objs$plugins$build_cache_$_iter__13316.call(null,cljs.core.chunk_rest.call(null,s__13317__$2)));
} else {
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__13319),null);
}
} else {
var plugin = cljs.core.first.call(null,s__13317__$2);
var versions = cljs.core.vec.call(null,cljs.core.sort_by.call(null,new cljs.core.Keyword(null,"version","version",425292698),lt.objs.plugins.version_sort,cljs.core.map.call(null,lt.objs.plugins.plugin_info,cljs.core.filter.call(null,lt.objs.files.dir_QMARK_,lt.objs.files.full_path_ls.call(null,plugin)))));
var latest = cljs.core.last.call(null,versions);
return cljs.core.cons.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(latest),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"versions","versions",536521978),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.call(null,cljs.core.juxt.call(null,new cljs.core.Keyword(null,"version","version",425292698),cljs.core.identity),versions)),new cljs.core.Keyword(null,"latest-version","latest-version",-1985110248),new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(latest)], null)], null),lt$objs$plugins$build_cache_$_iter__13316.call(null,cljs.core.rest.call(null,s__13317__$2)));
}
} else {
return null;
}
break;
}
}),null,null));
});
return iter__4564__auto__.call(null,items);
})());
return cache;
});
lt.objs.plugins.save_cache = (function lt$objs$plugins$save_cache(cache){
return lt.objs.files.save.call(null,lt.objs.plugins.metadata_cache,JSON.stringify(cljs.core.clj__GT_js.call(null,cache)));
});
lt.objs.plugins.latest_metadata_sha = (function lt$objs$plugins$latest_metadata_sha(){
return fetch.core.xhr.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"get","get",1683182755),lt.objs.plugins.metadata_commits], null),cljs.core.PersistentArrayMap.EMPTY,(function (data){
var temp__5753__auto__ = (function (){try{return JSON.parse(data);
}catch (e13321){var e = e13321;
return lt.objs.console.error.call(null,["Invalid JSON response from ",lt.objs.plugins.metadata_commits,": ",cljs.core.pr_str.call(null,data)].join(''));
}})();
if(cljs.core.truth_(temp__5753__auto__)){
var parsed = temp__5753__auto__;
var sha = ((parsed[(0)])["sha"]);
return lt.object.raise.call(null,lt.objs.plugins.manager,new cljs.core.Keyword(null,"metadata.sha","metadata.sha",-275753543),sha);
} else {
return null;
}
}));
});
lt.objs.plugins.download_metadata = (function lt$objs$plugins$download_metadata(sha){
var tmp_gz = lt.objs.files.lt_user_dir.call(null,"metadata-temp.tar.gz");
var tmp_dir = lt.objs.files.lt_user_dir.call(null,"metadata-temp");
lt.objs.notifos.working.call(null,"Updating plugin metadata");

return lt.objs.deploy.download_file.call(null,lt.objs.plugins.metadata_download,tmp_gz,(function (){
return lt.objs.deploy.untar.call(null,tmp_gz,tmp_dir,(function (){
lt.objs.notifos.done_working.call(null);

var munged_dir = cljs.core.first.call(null,lt.objs.files.full_path_ls.call(null,tmp_dir));
if(cljs.core.truth_(munged_dir)){
if(cljs.core.truth_(lt.objs.files.exists_QMARK_.call(null,lt.objs.plugins.metadata_dir))){
lt.objs.files.delete_BANG_.call(null,lt.objs.plugins.metadata_dir);
} else {
}

lt.objs.files.move_BANG_.call(null,munged_dir,lt.objs.plugins.metadata_dir);
} else {
}

lt.objs.files.delete_BANG_.call(null,tmp_dir);

lt.objs.files.delete_BANG_.call(null,tmp_gz);

if(cljs.core.truth_(munged_dir)){
lt.objs.plugins.save_cache.call(null,lt.objs.plugins.build_cache.call(null,sha));

lt.objs.notifos.done_working.call(null,"Plugin metadata updated. ");

return lt.object.raise.call(null,lt.objs.plugins.manager,new cljs.core.Keyword(null,"metadata.updated","metadata.updated",745911191));
} else {
return lt.objs.plugins.install_failed.call(null,"metadata");
}
}));
}));
});
lt.objs.plugins.read_cache = (function lt$objs$plugins$read_cache(){
if(cljs.core.truth_(lt.objs.files.exists_QMARK_.call(null,lt.objs.plugins.metadata_cache))){
return cljs.core.js__GT_clj.call(null,JSON.parse(new cljs.core.Keyword(null,"content","content",15833224).cljs$core$IFn$_invoke$arity$1(lt.objs.files.open_sync.call(null,lt.objs.plugins.metadata_cache))),new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),true);
} else {
return null;
}
});
lt.objs.plugins.search_plugins = (function lt$objs$plugins$search_plugins(plugins,search){
var search__$1 = search.toLowerCase();
return cljs.core.filter.call(null,(function (plugin){
return (((new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$2(plugin,"").toLowerCase().indexOf(search__$1) > (-1))) || ((new cljs.core.Keyword(null,"author","author",2111686192).cljs$core$IFn$_invoke$arity$2(plugin,"").toLowerCase().indexOf(search__$1) > (-1))) || ((new cljs.core.Keyword(null,"desc","desc",2093485764).cljs$core$IFn$_invoke$arity$2(plugin,"").toLowerCase().indexOf(search__$1) > (-1))));
}),plugins);
});
lt.objs.plugins.latest_version_merge = (function lt$objs$plugins$latest_version_merge(neue,old){
var neue__$1 = cljs.core.seq.call(null,neue);
return cljs.core.reduce.call(null,(function (final$,p__13322){
var vec__13323 = p__13322;
var name = cljs.core.nth.call(null,vec__13323,(0),null);
var ver = cljs.core.nth.call(null,vec__13323,(1),null);
var temp__5751__auto__ = new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(final$.call(null,name));
if(cljs.core.truth_(temp__5751__auto__)){
var cur_ver = temp__5751__auto__;
if(lt.objs.deploy.is_newer_QMARK_.call(null,ver,cur_ver)){
return cljs.core.assoc.call(null,final$,name,ver);
} else {
return final$;
}
} else {
return cljs.core.assoc.call(null,final$,name,ver);
}
}),old,neue__$1);
});
lt.objs.plugins.transitive_deps = (function lt$objs$plugins$transitive_deps(plugins,p__13326,seen){
var vec__13327 = p__13326;
var name = cljs.core.nth.call(null,vec__13327,(0),null);
var ver = cljs.core.nth.call(null,vec__13327,(1),null);
var name__$1 = cljs.core.keyword.call(null,name);
var temp__5751__auto__ = cljs.core.get_in.call(null,plugins,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [name__$1,new cljs.core.Keyword(null,"versions","versions",536521978),cljs.core.keyword.call(null,ver)], null));
if(cljs.core.truth_(temp__5751__auto__)){
var cur = temp__5751__auto__;
var deps = new cljs.core.Keyword(null,"dependencies","dependencies",1108064605).cljs$core$IFn$_invoke$arity$1(cur);
var unique = cljs.core.remove.call(null,seen,cljs.core.keys.call(null,deps));
var seen__$1 = lt.objs.plugins.latest_version_merge.call(null,cljs.core.PersistentArrayMap.createAsIfByAssoc([name__$1,cur]),seen);
return cljs.core.reduce.call(null,(function (seen__$2,cur__$1){
return lt.objs.plugins.transitive_deps.call(null,plugins,cur__$1,seen__$2);
}),seen__$1,cljs.core.select_keys.call(null,deps,unique));
} else {
return seen;
}
});
lt.objs.plugins.latest_version = (function lt$objs$plugins$latest_version(plugin){
return cljs.core.get.call(null,new cljs.core.Keyword(null,"versions","versions",536521978).cljs$core$IFn$_invoke$arity$1(plugin),cljs.core.keyword.call(null,new cljs.core.Keyword(null,"latest-version","latest-version",-1985110248).cljs$core$IFn$_invoke$arity$1(plugin)));
});
lt.objs.plugins.all_latest = (function lt$objs$plugins$all_latest(plugins){
return cljs.core.map.call(null,lt.objs.plugins.latest_version,cljs.core.vals.call(null,cljs.core.dissoc.call(null,plugins,new cljs.core.Keyword(null,"__sha","__sha",1382835112))));
});
lt.objs.plugins.install_failed = (function lt$objs$plugins$install_failed(name){
if(cljs.core.truth_((function (){var and__4149__auto__ = lt.objs.plugins.by_name.call(null,name);
if(cljs.core.truth_(and__4149__auto__)){
return cljs.core.not.call(null,new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(lt.objs.plugins.by_name.call(null,name)));
} else {
return and__4149__auto__;
}
})())){
lt.object.update_BANG_.call(null,lt.objs.app.app,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("lt.objs.plugins","plugins","lt.objs.plugins/plugins",-1345299551)], null),cljs.core.dissoc,name);
} else {
}

return lt.objs.notifos.done_working.call(null,["Plugin install failed for: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join(''));
});
lt.objs.plugins.plugin__GT_tar = (function lt$objs$plugins$plugin__GT_tar(plugin){
var vec__13331 = cljs.core.take.call(null,(2),cljs.core.filter.call(null,(function (p1__13330_SHARP_){
return cljs.core.not_EQ_.call(null,p1__13330_SHARP_,"");
}),cljs.core.reverse.call(null,clojure.string.split.call(null,new cljs.core.Keyword(null,"source","source",-433931539).cljs$core$IFn$_invoke$arity$1(plugin),"/"))));
var repo = cljs.core.nth.call(null,vec__13331,(0),null);
var username = cljs.core.nth.call(null,vec__13331,(1),null);
var repo__$1 = repo.replace(/.git/,"");
return ["https://api.github.com/repos/",cljs.core.str.cljs$core$IFn$_invoke$arity$1(username),"/",cljs.core.str.cljs$core$IFn$_invoke$arity$1(repo__$1),"/tarball/",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(plugin))].join('');
});
lt.objs.plugins.fetch_and_install = (function lt$objs$plugins$fetch_and_install(url,name,cb){
var munged_name = lt.objs.plugins.munge_plugin_name.call(null,name);
var tmp_gz = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(lt.objs.plugins.user_plugins_dir),"/",munged_name,"-tmp.tar.gz"].join('');
var tmp_dir = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(lt.objs.plugins.user_plugins_dir),"/",munged_name,"-tmp"].join('');
lt.objs.notifos.working.call(null,["Downloading plugin: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join(''));

return lt.objs.deploy.download_file.call(null,url,tmp_gz,(function (){
lt.objs.notifos.done_working.call(null);

lt.objs.notifos.working.call(null,"Extracting plugin...");

return lt.objs.deploy.untar.call(null,tmp_gz,tmp_dir,(function (){
var munged_dir = cljs.core.first.call(null,lt.objs.files.full_path_ls.call(null,tmp_dir));
var final_path = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(lt.objs.plugins.user_plugins_dir),"/",munged_name,"/"].join('');
if(cljs.core.truth_(munged_dir)){
if(cljs.core.truth_(lt.objs.files.exists_QMARK_.call(null,final_path))){
lt.objs.files.delete_BANG_.call(null,final_path);
} else {
}

lt.objs.files.move_BANG_.call(null,munged_dir,final_path);
} else {
}

lt.objs.files.delete_BANG_.call(null,tmp_dir);

lt.objs.files.delete_BANG_.call(null,tmp_gz);

if(cljs.core.truth_(munged_dir)){
lt.objs.notifos.done_working.call(null,["Plugin fetched: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join(''));

lt.object.raise.call(null,lt.objs.plugins.manager,new cljs.core.Keyword(null,"plugin.fetched","plugin.fetched",-359787238));

if(cljs.core.truth_(cb)){
return cb.call(null);
} else {
return null;
}
} else {
return lt.objs.plugins.install_failed.call(null,name);
}
}));
}));
});
lt.objs.plugins.install_version = (function lt$objs$plugins$install_version(plugin,cb){
var name = new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(plugin);
var ver = new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(plugin);
var installed_QMARK_ = cljs.core.get.call(null,new cljs.core.Keyword("lt.objs.plugins","plugins","lt.objs.plugins/plugins",-1345299551).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,lt.objs.app.app)),name);
if(cljs.core.truth_((function (){var or__4160__auto__ = cljs.core.not.call(null,installed_QMARK_);
if(or__4160__auto__){
return or__4160__auto__;
} else {
var and__4149__auto__ = new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(installed_QMARK_);
if(cljs.core.truth_(and__4149__auto__)){
return lt.objs.deploy.is_newer_QMARK_.call(null,new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(installed_QMARK_),ver);
} else {
return and__4149__auto__;
}
}
})())){
lt.object.update_BANG_.call(null,lt.objs.app.app,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("lt.objs.plugins","plugins","lt.objs.plugins/plugins",-1345299551)], null),cljs.core.assoc,name,cljs.core.PersistentArrayMap.EMPTY);

return lt.objs.plugins.fetch_and_install.call(null,lt.objs.plugins.plugin__GT_tar.call(null,plugin),name,(function (){
if(cljs.core.truth_(cb)){
return cb.call(null,true);
} else {
return null;
}
}));
} else {
lt.objs.notifos.set_msg_BANG_.call(null,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)," is already installed"].join(''));

if(cljs.core.truth_(cb)){
return cb.call(null,false);
} else {
return null;
}
}
});
lt.objs.plugins.transitive_install = (function lt$objs$plugins$transitive_install(plugin,deps,cb){
var cur = cljs.core.keyword.call(null,new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(plugin));
var others = cljs.core.dissoc.call(null,deps,cur);
var counter = cljs.core.atom.call(null,cljs.core.count.call(null,others));
var count_down = (function (){
cljs.core.swap_BANG_.call(null,counter,cljs.core.dec);

if((cljs.core.deref.call(null,counter) <= (0))){
return lt.objs.plugins.install_version.call(null,deps.call(null,cur),(function (installed_QMARK_){
if(cljs.core.truth_(cb)){
return cb.call(null,installed_QMARK_);
} else {
return null;
}
}));
} else {
return null;
}
});
if(cljs.core.seq.call(null,others)){
var seq__13334 = cljs.core.seq.call(null,others);
var chunk__13335 = null;
var count__13336 = (0);
var i__13337 = (0);
while(true){
if((i__13337 < count__13336)){
var vec__13344 = cljs.core._nth.call(null,chunk__13335,i__13337);
var _ = cljs.core.nth.call(null,vec__13344,(0),null);
var dep = cljs.core.nth.call(null,vec__13344,(1),null);
lt.objs.plugins.install_version.call(null,dep,count_down);


var G__13350 = seq__13334;
var G__13351 = chunk__13335;
var G__13352 = count__13336;
var G__13353 = (i__13337 + (1));
seq__13334 = G__13350;
chunk__13335 = G__13351;
count__13336 = G__13352;
i__13337 = G__13353;
continue;
} else {
var temp__5753__auto__ = cljs.core.seq.call(null,seq__13334);
if(temp__5753__auto__){
var seq__13334__$1 = temp__5753__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__13334__$1)){
var c__4591__auto__ = cljs.core.chunk_first.call(null,seq__13334__$1);
var G__13354 = cljs.core.chunk_rest.call(null,seq__13334__$1);
var G__13355 = c__4591__auto__;
var G__13356 = cljs.core.count.call(null,c__4591__auto__);
var G__13357 = (0);
seq__13334 = G__13354;
chunk__13335 = G__13355;
count__13336 = G__13356;
i__13337 = G__13357;
continue;
} else {
var vec__13347 = cljs.core.first.call(null,seq__13334__$1);
var _ = cljs.core.nth.call(null,vec__13347,(0),null);
var dep = cljs.core.nth.call(null,vec__13347,(1),null);
lt.objs.plugins.install_version.call(null,dep,count_down);


var G__13358 = cljs.core.next.call(null,seq__13334__$1);
var G__13359 = null;
var G__13360 = (0);
var G__13361 = (0);
seq__13334 = G__13358;
chunk__13335 = G__13359;
count__13336 = G__13360;
i__13337 = G__13361;
continue;
}
} else {
return null;
}
}
break;
}
} else {
return count_down.call(null);
}
});
lt.objs.plugins.discover_deps = (function lt$objs$plugins$discover_deps(plugin,cb){
var deps = lt.objs.plugins.transitive_deps.call(null,new cljs.core.Keyword(null,"server-plugins","server-plugins",-514262131).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,lt.objs.plugins.manager)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(plugin),new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(plugin)], null),cljs.core.PersistentArrayMap.EMPTY);
if(cljs.core.not.call(null,cljs.core.seq.call(null,deps))){
return lt.objs.plugins.install_failed.call(null,new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(plugin));
} else {
return lt.objs.plugins.transitive_install.call(null,plugin,deps,cb);
}
});
lt.objs.plugins.install_missing = (function lt$objs$plugins$install_missing(missing){
var counter = cljs.core.atom.call(null,cljs.core.count.call(null,missing));
var count_down = (function (){
cljs.core.swap_BANG_.call(null,counter,cljs.core.dec);

if((cljs.core.deref.call(null,counter) <= (0))){
lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"behaviors.reload","behaviors.reload",2130924967));

lt.object.raise.call(null,lt.objs.plugins.manager,new cljs.core.Keyword(null,"refresh!","refresh!",156149341));

return lt.objs.notifos.set_msg_BANG_.call(null,"All missing dependencies installed.");
} else {
return null;
}
});
var seq__13362 = cljs.core.seq.call(null,missing);
var chunk__13363 = null;
var count__13364 = (0);
var i__13365 = (0);
while(true){
if((i__13365 < count__13364)){
var dep = cljs.core._nth.call(null,chunk__13363,i__13365);
lt.objs.plugins.discover_deps.call(null,dep,count_down);


var G__13366 = seq__13362;
var G__13367 = chunk__13363;
var G__13368 = count__13364;
var G__13369 = (i__13365 + (1));
seq__13362 = G__13366;
chunk__13363 = G__13367;
count__13364 = G__13368;
i__13365 = G__13369;
continue;
} else {
var temp__5753__auto__ = cljs.core.seq.call(null,seq__13362);
if(temp__5753__auto__){
var seq__13362__$1 = temp__5753__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__13362__$1)){
var c__4591__auto__ = cljs.core.chunk_first.call(null,seq__13362__$1);
var G__13370 = cljs.core.chunk_rest.call(null,seq__13362__$1);
var G__13371 = c__4591__auto__;
var G__13372 = cljs.core.count.call(null,c__4591__auto__);
var G__13373 = (0);
seq__13362 = G__13370;
chunk__13363 = G__13371;
count__13364 = G__13372;
i__13365 = G__13373;
continue;
} else {
var dep = cljs.core.first.call(null,seq__13362__$1);
lt.objs.plugins.discover_deps.call(null,dep,count_down);


var G__13374 = cljs.core.next.call(null,seq__13362__$1);
var G__13375 = null;
var G__13376 = (0);
var G__13377 = (0);
seq__13362 = G__13374;
chunk__13363 = G__13375;
count__13364 = G__13376;
i__13365 = G__13377;
continue;
}
} else {
return null;
}
}
break;
}
});
/**
 * Check a plugins map for outdated or missing :dependencies and prompt
 *   to install missing ones
 */
lt.objs.plugins.check_missing = (function lt$objs$plugins$check_missing(deps){
var temp__5753__auto__ = lt.objs.plugins.missing_deps.call(null,deps);
if(temp__5753__auto__){
var missing_QMARK_ = temp__5753__auto__;
return lt.objs.popup.popup_BANG_.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"header","header",119441134),"Some plugin dependencies are missing.",new cljs.core.Keyword(null,"body","body",-2049205669),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div","div",1057191632),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span","span",1394872991),"We found that the following plugin dependencies are missing: "], null),(function (){var iter__4564__auto__ = (function lt$objs$plugins$check_missing_$_iter__13378(s__13379){
return (new cljs.core.LazySeq(null,(function (){
var s__13379__$1 = s__13379;
while(true){
var temp__5753__auto____$1 = cljs.core.seq.call(null,s__13379__$1);
if(temp__5753__auto____$1){
var s__13379__$2 = temp__5753__auto____$1;
if(cljs.core.chunked_seq_QMARK_.call(null,s__13379__$2)){
var c__4562__auto__ = cljs.core.chunk_first.call(null,s__13379__$2);
var size__4563__auto__ = cljs.core.count.call(null,c__4562__auto__);
var b__13381 = cljs.core.chunk_buffer.call(null,size__4563__auto__);
if((function (){var i__13380 = (0);
while(true){
if((i__13380 < size__4563__auto__)){
var map__13382 = cljs.core._nth.call(null,c__4562__auto__,i__13380);
var map__13382__$1 = cljs.core.__destructure_map.call(null,map__13382);
var name = cljs.core.get.call(null,map__13382__$1,new cljs.core.Keyword(null,"name","name",1843675177));
var version = cljs.core.get.call(null,map__13382__$1,new cljs.core.Keyword(null,"version","version",425292698));
cljs.core.chunk_append.call(null,b__13381,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div","div",1057191632),name," ",version," "], null));

var G__13384 = (i__13380 + (1));
i__13380 = G__13384;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__13381),lt$objs$plugins$check_missing_$_iter__13378.call(null,cljs.core.chunk_rest.call(null,s__13379__$2)));
} else {
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__13381),null);
}
} else {
var map__13383 = cljs.core.first.call(null,s__13379__$2);
var map__13383__$1 = cljs.core.__destructure_map.call(null,map__13383);
var name = cljs.core.get.call(null,map__13383__$1,new cljs.core.Keyword(null,"name","name",1843675177));
var version = cljs.core.get.call(null,map__13383__$1,new cljs.core.Keyword(null,"version","version",425292698));
return cljs.core.cons.call(null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div","div",1057191632),name," ",version," "], null),lt$objs$plugins$check_missing_$_iter__13378.call(null,cljs.core.rest.call(null,s__13379__$2)));
}
} else {
return null;
}
break;
}
}),null,null));
});
return iter__4564__auto__.call(null,missing_QMARK_);
})(),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span","span",1394872991),"Would you like us to install them?"], null)], null),new cljs.core.Keyword(null,"buttons","buttons",-1953831197),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"label","label",1718410804),"Cancel"], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"label","label",1718410804),"Install all",new cljs.core.Keyword(null,"action","action",-811238024),(function (){
return lt.objs.plugins.install_missing.call(null,missing_QMARK_);
})], null)], null)], null));
} else {
return null;
}
});
/**
 * Return a map of plugins by plugin name based on what's read from filesystem
 */
lt.objs.plugins.available_plugins = (function lt$objs$plugins$available_plugins(){
var ds = cljs.core.concat.call(null,lt.objs.files.dirs.call(null,lt.objs.plugins.user_plugins_dir),lt.objs.files.dirs.call(null,lt.objs.plugins.plugins_dir),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [lt.objs.settings.user_plugin_dir], null));
var plugins = cljs.core.filterv.call(null,cljs.core.identity,cljs.core.map.call(null,lt.objs.plugins.plugin_info,ds));
return cljs.core.persistent_BANG_.call(null,cljs.core.reduce.call(null,(function (final$,p){
var temp__5751__auto__ = cljs.core.get.call(null,final$,new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(p));
if(cljs.core.truth_(temp__5751__auto__)){
var cur = temp__5751__auto__;
if(lt.objs.deploy.is_newer_QMARK_.call(null,new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(cur),new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(p))){
return cljs.core.assoc_BANG_.call(null,final$,new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(p),p);
} else {
return final$;
}
} else {
return cljs.core.assoc_BANG_.call(null,final$,new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(p),p);
}
}),cljs.core.transient$.call(null,cljs.core.PersistentArrayMap.EMPTY),plugins));
});
lt.objs.plugins.uninstall = (function lt$objs$plugins$uninstall(plugin){
if(cljs.core.truth_(new cljs.core.Keyword(null,"dir","dir",1734754661).cljs$core$IFn$_invoke$arity$1(plugin))){
lt.objs.files.delete_BANG_.call(null,new cljs.core.Keyword(null,"dir","dir",1734754661).cljs$core$IFn$_invoke$arity$1(plugin));

lt.object.raise.call(null,lt.objs.plugins.manager,new cljs.core.Keyword(null,"refresh!","refresh!",156149341),new cljs.core.Keyword(null,"ignore-missing","ignore-missing",836103362),true);

return lt.objs.notifos.set_msg_BANG_.call(null,["Uninstalled ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(plugin))," ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(plugin))].join(''));
} else {
return null;
}
});
/**
 * 
 */
lt.objs.plugins.url_input = (function lt$objs$plugins$url_input(){
var e__992__auto__ = singultus.core.html.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"input","input",556931961),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"type","type",1174270348),"text",new cljs.core.Keyword(null,"placeholder","placeholder",-104873083),"Github URL"], null)], null));
var seq__13385_13401 = cljs.core.seq.call(null,cljs.core.partition.call(null,(2),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"focus","focus",234677911),((function (e__992__auto__){
return (function (){
return lt.objs.context.in_BANG_.call(null,new cljs.core.Keyword(null,"popup.input","popup.input",-1726140162));
});})(e__992__auto__))
,new cljs.core.Keyword(null,"blur","blur",-453500461),((function (e__992__auto__){
return (function (){
return lt.objs.context.out_BANG_.call(null,new cljs.core.Keyword(null,"popup.input","popup.input",-1726140162));
});})(e__992__auto__))
], null)));
var chunk__13386_13402 = null;
var count__13387_13403 = (0);
var i__13388_13404 = (0);
while(true){
if((i__13388_13404 < count__13387_13403)){
var vec__13395_13405 = cljs.core._nth.call(null,chunk__13386_13402,i__13388_13404);
var ev__993__auto___13406 = cljs.core.nth.call(null,vec__13395_13405,(0),null);
var func__994__auto___13407 = cljs.core.nth.call(null,vec__13395_13405,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13406,func__994__auto___13407);


var G__13408 = seq__13385_13401;
var G__13409 = chunk__13386_13402;
var G__13410 = count__13387_13403;
var G__13411 = (i__13388_13404 + (1));
seq__13385_13401 = G__13408;
chunk__13386_13402 = G__13409;
count__13387_13403 = G__13410;
i__13388_13404 = G__13411;
continue;
} else {
var temp__5753__auto___13412 = cljs.core.seq.call(null,seq__13385_13401);
if(temp__5753__auto___13412){
var seq__13385_13413__$1 = temp__5753__auto___13412;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__13385_13413__$1)){
var c__4591__auto___13414 = cljs.core.chunk_first.call(null,seq__13385_13413__$1);
var G__13415 = cljs.core.chunk_rest.call(null,seq__13385_13413__$1);
var G__13416 = c__4591__auto___13414;
var G__13417 = cljs.core.count.call(null,c__4591__auto___13414);
var G__13418 = (0);
seq__13385_13401 = G__13415;
chunk__13386_13402 = G__13416;
count__13387_13403 = G__13417;
i__13388_13404 = G__13418;
continue;
} else {
var vec__13398_13419 = cljs.core.first.call(null,seq__13385_13413__$1);
var ev__993__auto___13420 = cljs.core.nth.call(null,vec__13398_13419,(0),null);
var func__994__auto___13421 = cljs.core.nth.call(null,vec__13398_13419,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13420,func__994__auto___13421);


var G__13422 = cljs.core.next.call(null,seq__13385_13413__$1);
var G__13423 = null;
var G__13424 = (0);
var G__13425 = (0);
seq__13385_13401 = G__13422;
chunk__13386_13402 = G__13423;
count__13387_13403 = G__13424;
i__13388_13404 = G__13425;
continue;
}
} else {
}
}
break;
}

return e__992__auto__;
});
/**
 * 
 */
lt.objs.plugins.tab = (function lt$objs$plugins$tab(this$,tab_name,label){
var e__992__auto__ = singultus.core.html.call(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"button","button",1456579943),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"class","class",-2030961996),singultus.binding.bound.call(null,this$,(function (p1__13426_SHARP_){
if(cljs.core._EQ_.call(null,tab_name,new cljs.core.Keyword(null,"tab","tab",-559583621).cljs$core$IFn$_invoke$arity$1(p1__13426_SHARP_))){
return "active";
} else {
return null;
}
}))], null),label], null));
var seq__13427_13443 = cljs.core.seq.call(null,cljs.core.partition.call(null,(2),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"click","click",1912301393),((function (e__992__auto__){
return (function (){
return lt.object.merge_BANG_.call(null,this$,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tab","tab",-559583621),tab_name], null));
});})(e__992__auto__))
], null)));
var chunk__13428_13444 = null;
var count__13429_13445 = (0);
var i__13430_13446 = (0);
while(true){
if((i__13430_13446 < count__13429_13445)){
var vec__13437_13447 = cljs.core._nth.call(null,chunk__13428_13444,i__13430_13446);
var ev__993__auto___13448 = cljs.core.nth.call(null,vec__13437_13447,(0),null);
var func__994__auto___13449 = cljs.core.nth.call(null,vec__13437_13447,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13448,func__994__auto___13449);


var G__13450 = seq__13427_13443;
var G__13451 = chunk__13428_13444;
var G__13452 = count__13429_13445;
var G__13453 = (i__13430_13446 + (1));
seq__13427_13443 = G__13450;
chunk__13428_13444 = G__13451;
count__13429_13445 = G__13452;
i__13430_13446 = G__13453;
continue;
} else {
var temp__5753__auto___13454 = cljs.core.seq.call(null,seq__13427_13443);
if(temp__5753__auto___13454){
var seq__13427_13455__$1 = temp__5753__auto___13454;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__13427_13455__$1)){
var c__4591__auto___13456 = cljs.core.chunk_first.call(null,seq__13427_13455__$1);
var G__13457 = cljs.core.chunk_rest.call(null,seq__13427_13455__$1);
var G__13458 = c__4591__auto___13456;
var G__13459 = cljs.core.count.call(null,c__4591__auto___13456);
var G__13460 = (0);
seq__13427_13443 = G__13457;
chunk__13428_13444 = G__13458;
count__13429_13445 = G__13459;
i__13430_13446 = G__13460;
continue;
} else {
var vec__13440_13461 = cljs.core.first.call(null,seq__13427_13455__$1);
var ev__993__auto___13462 = cljs.core.nth.call(null,vec__13440_13461,(0),null);
var func__994__auto___13463 = cljs.core.nth.call(null,vec__13440_13461,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13462,func__994__auto___13463);


var G__13464 = cljs.core.next.call(null,seq__13427_13455__$1);
var G__13465 = null;
var G__13466 = (0);
var G__13467 = (0);
seq__13427_13443 = G__13464;
chunk__13428_13444 = G__13465;
count__13429_13445 = G__13466;
i__13430_13446 = G__13467;
continue;
}
} else {
}
}
break;
}

return e__992__auto__;
});
/**
 * 
 */
lt.objs.plugins.search_input = (function lt$objs$plugins$search_input(this$){
var e__992__auto__ = singultus.core.html.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"input","input",556931961),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"placeholder","placeholder",-104873083),"Search available plugins"], null)], null));
var seq__13468_13484 = cljs.core.seq.call(null,cljs.core.partition.call(null,(2),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"focus","focus",234677911),((function (e__992__auto__){
return (function (){
return lt.objs.context.in_BANG_.call(null,new cljs.core.Keyword(null,"plugin-manager.search","plugin-manager.search",-770563448),this$);
});})(e__992__auto__))
,new cljs.core.Keyword(null,"blur","blur",-453500461),((function (e__992__auto__){
return (function (){
return lt.objs.context.out_BANG_.call(null,new cljs.core.Keyword(null,"plugin-manager.search","plugin-manager.search",-770563448));
});})(e__992__auto__))
], null)));
var chunk__13469_13485 = null;
var count__13470_13486 = (0);
var i__13471_13487 = (0);
while(true){
if((i__13471_13487 < count__13470_13486)){
var vec__13478_13488 = cljs.core._nth.call(null,chunk__13469_13485,i__13471_13487);
var ev__993__auto___13489 = cljs.core.nth.call(null,vec__13478_13488,(0),null);
var func__994__auto___13490 = cljs.core.nth.call(null,vec__13478_13488,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13489,func__994__auto___13490);


var G__13491 = seq__13468_13484;
var G__13492 = chunk__13469_13485;
var G__13493 = count__13470_13486;
var G__13494 = (i__13471_13487 + (1));
seq__13468_13484 = G__13491;
chunk__13469_13485 = G__13492;
count__13470_13486 = G__13493;
i__13471_13487 = G__13494;
continue;
} else {
var temp__5753__auto___13495 = cljs.core.seq.call(null,seq__13468_13484);
if(temp__5753__auto___13495){
var seq__13468_13496__$1 = temp__5753__auto___13495;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__13468_13496__$1)){
var c__4591__auto___13497 = cljs.core.chunk_first.call(null,seq__13468_13496__$1);
var G__13498 = cljs.core.chunk_rest.call(null,seq__13468_13496__$1);
var G__13499 = c__4591__auto___13497;
var G__13500 = cljs.core.count.call(null,c__4591__auto___13497);
var G__13501 = (0);
seq__13468_13484 = G__13498;
chunk__13469_13485 = G__13499;
count__13470_13486 = G__13500;
i__13471_13487 = G__13501;
continue;
} else {
var vec__13481_13502 = cljs.core.first.call(null,seq__13468_13496__$1);
var ev__993__auto___13503 = cljs.core.nth.call(null,vec__13481_13502,(0),null);
var func__994__auto___13504 = cljs.core.nth.call(null,vec__13481_13502,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13503,func__994__auto___13504);


var G__13505 = cljs.core.next.call(null,seq__13468_13496__$1);
var G__13506 = null;
var G__13507 = (0);
var G__13508 = (0);
seq__13468_13484 = G__13505;
chunk__13469_13485 = G__13506;
count__13470_13486 = G__13507;
i__13471_13487 = G__13508;
continue;
}
} else {
}
}
break;
}

return e__992__auto__;
});
/**
 * 
 */
lt.objs.plugins.tabs_and_search = (function lt$objs$plugins$tabs_and_search(this$){
var e__992__auto__ = singultus.core.html.call(null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div.tabs","div.tabs",-1767258748),lt.objs.plugins.tab.call(null,this$,new cljs.core.Keyword(null,"installed","installed",553977691),"Installed"),lt.objs.plugins.tab.call(null,this$,new cljs.core.Keyword(null,"server","server",1499190120),"Available"),lt.objs.plugins.search_input.call(null,this$)], null));
var seq__13509_13525 = cljs.core.seq.call(null,cljs.core.partition.call(null,(2),cljs.core.PersistentVector.EMPTY));
var chunk__13510_13526 = null;
var count__13511_13527 = (0);
var i__13512_13528 = (0);
while(true){
if((i__13512_13528 < count__13511_13527)){
var vec__13519_13529 = cljs.core._nth.call(null,chunk__13510_13526,i__13512_13528);
var ev__993__auto___13530 = cljs.core.nth.call(null,vec__13519_13529,(0),null);
var func__994__auto___13531 = cljs.core.nth.call(null,vec__13519_13529,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13530,func__994__auto___13531);


var G__13532 = seq__13509_13525;
var G__13533 = chunk__13510_13526;
var G__13534 = count__13511_13527;
var G__13535 = (i__13512_13528 + (1));
seq__13509_13525 = G__13532;
chunk__13510_13526 = G__13533;
count__13511_13527 = G__13534;
i__13512_13528 = G__13535;
continue;
} else {
var temp__5753__auto___13536 = cljs.core.seq.call(null,seq__13509_13525);
if(temp__5753__auto___13536){
var seq__13509_13537__$1 = temp__5753__auto___13536;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__13509_13537__$1)){
var c__4591__auto___13538 = cljs.core.chunk_first.call(null,seq__13509_13537__$1);
var G__13539 = cljs.core.chunk_rest.call(null,seq__13509_13537__$1);
var G__13540 = c__4591__auto___13538;
var G__13541 = cljs.core.count.call(null,c__4591__auto___13538);
var G__13542 = (0);
seq__13509_13525 = G__13539;
chunk__13510_13526 = G__13540;
count__13511_13527 = G__13541;
i__13512_13528 = G__13542;
continue;
} else {
var vec__13522_13543 = cljs.core.first.call(null,seq__13509_13537__$1);
var ev__993__auto___13544 = cljs.core.nth.call(null,vec__13522_13543,(0),null);
var func__994__auto___13545 = cljs.core.nth.call(null,vec__13522_13543,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13544,func__994__auto___13545);


var G__13546 = cljs.core.next.call(null,seq__13509_13537__$1);
var G__13547 = null;
var G__13548 = (0);
var G__13549 = (0);
seq__13509_13525 = G__13546;
chunk__13510_13526 = G__13547;
count__13511_13527 = G__13548;
i__13512_13528 = G__13549;
continue;
}
} else {
}
}
break;
}

return e__992__auto__;
});
/**
 * 
 */
lt.objs.plugins.source_button = (function lt$objs$plugins$source_button(plugin){
var e__992__auto__ = singultus.core.html.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span.source","span.source",910479131),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"a","a",-2123407586),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"href","href",-793805698),new cljs.core.Keyword(null,"url","url",276297046).cljs$core$IFn$_invoke$arity$2(plugin,new cljs.core.Keyword(null,"source","source",-433931539).cljs$core$IFn$_invoke$arity$1(plugin))], null),"website"], null)], null));
var seq__13550_13566 = cljs.core.seq.call(null,cljs.core.partition.call(null,(2),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"click","click",1912301393),((function (e__992__auto__){
return (function (e){
lt.util.dom.prevent.call(null,e);

lt.util.dom.stop_propagation.call(null,e);

return lt.objs.platform.open_url.call(null,new cljs.core.Keyword(null,"url","url",276297046).cljs$core$IFn$_invoke$arity$2(plugin,new cljs.core.Keyword(null,"source","source",-433931539).cljs$core$IFn$_invoke$arity$1(plugin)));
});})(e__992__auto__))
], null)));
var chunk__13551_13567 = null;
var count__13552_13568 = (0);
var i__13553_13569 = (0);
while(true){
if((i__13553_13569 < count__13552_13568)){
var vec__13560_13570 = cljs.core._nth.call(null,chunk__13551_13567,i__13553_13569);
var ev__993__auto___13571 = cljs.core.nth.call(null,vec__13560_13570,(0),null);
var func__994__auto___13572 = cljs.core.nth.call(null,vec__13560_13570,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13571,func__994__auto___13572);


var G__13573 = seq__13550_13566;
var G__13574 = chunk__13551_13567;
var G__13575 = count__13552_13568;
var G__13576 = (i__13553_13569 + (1));
seq__13550_13566 = G__13573;
chunk__13551_13567 = G__13574;
count__13552_13568 = G__13575;
i__13553_13569 = G__13576;
continue;
} else {
var temp__5753__auto___13577 = cljs.core.seq.call(null,seq__13550_13566);
if(temp__5753__auto___13577){
var seq__13550_13578__$1 = temp__5753__auto___13577;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__13550_13578__$1)){
var c__4591__auto___13579 = cljs.core.chunk_first.call(null,seq__13550_13578__$1);
var G__13580 = cljs.core.chunk_rest.call(null,seq__13550_13578__$1);
var G__13581 = c__4591__auto___13579;
var G__13582 = cljs.core.count.call(null,c__4591__auto___13579);
var G__13583 = (0);
seq__13550_13566 = G__13580;
chunk__13551_13567 = G__13581;
count__13552_13568 = G__13582;
i__13553_13569 = G__13583;
continue;
} else {
var vec__13563_13584 = cljs.core.first.call(null,seq__13550_13578__$1);
var ev__993__auto___13585 = cljs.core.nth.call(null,vec__13563_13584,(0),null);
var func__994__auto___13586 = cljs.core.nth.call(null,vec__13563_13584,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13585,func__994__auto___13586);


var G__13587 = cljs.core.next.call(null,seq__13550_13578__$1);
var G__13588 = null;
var G__13589 = (0);
var G__13590 = (0);
seq__13550_13566 = G__13587;
chunk__13551_13567 = G__13588;
count__13552_13568 = G__13589;
i__13553_13569 = G__13590;
continue;
}
} else {
}
}
break;
}

return e__992__auto__;
});
/**
 * 
 */
lt.objs.plugins.update_button = (function lt$objs$plugins$update_button(plugin){
var e__992__auto__ = singultus.core.html.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span.update","span.update",-1010830276)], null));
var seq__13591_13607 = cljs.core.seq.call(null,cljs.core.partition.call(null,(2),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"click","click",1912301393),((function (e__992__auto__){
return (function (e){
lt.util.dom.prevent.call(null,e);

lt.util.dom.stop_propagation.call(null,e);

return lt.objs.plugins.discover_deps.call(null,plugin,(function (){
lt.object.raise.call(null,lt.objs.plugins.manager,new cljs.core.Keyword(null,"refresh!","refresh!",156149341));

lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"behaviors.reload","behaviors.reload",2130924967));

return lt.util.js.wait.call(null,(1000),(function (){
return lt.objs.notifos.set_msg_BANG_.call(null,["Updated ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(plugin))," ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(plugin))].join(''));
}));
}));
});})(e__992__auto__))
], null)));
var chunk__13592_13608 = null;
var count__13593_13609 = (0);
var i__13594_13610 = (0);
while(true){
if((i__13594_13610 < count__13593_13609)){
var vec__13601_13611 = cljs.core._nth.call(null,chunk__13592_13608,i__13594_13610);
var ev__993__auto___13612 = cljs.core.nth.call(null,vec__13601_13611,(0),null);
var func__994__auto___13613 = cljs.core.nth.call(null,vec__13601_13611,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13612,func__994__auto___13613);


var G__13614 = seq__13591_13607;
var G__13615 = chunk__13592_13608;
var G__13616 = count__13593_13609;
var G__13617 = (i__13594_13610 + (1));
seq__13591_13607 = G__13614;
chunk__13592_13608 = G__13615;
count__13593_13609 = G__13616;
i__13594_13610 = G__13617;
continue;
} else {
var temp__5753__auto___13618 = cljs.core.seq.call(null,seq__13591_13607);
if(temp__5753__auto___13618){
var seq__13591_13619__$1 = temp__5753__auto___13618;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__13591_13619__$1)){
var c__4591__auto___13620 = cljs.core.chunk_first.call(null,seq__13591_13619__$1);
var G__13621 = cljs.core.chunk_rest.call(null,seq__13591_13619__$1);
var G__13622 = c__4591__auto___13620;
var G__13623 = cljs.core.count.call(null,c__4591__auto___13620);
var G__13624 = (0);
seq__13591_13607 = G__13621;
chunk__13592_13608 = G__13622;
count__13593_13609 = G__13623;
i__13594_13610 = G__13624;
continue;
} else {
var vec__13604_13625 = cljs.core.first.call(null,seq__13591_13619__$1);
var ev__993__auto___13626 = cljs.core.nth.call(null,vec__13604_13625,(0),null);
var func__994__auto___13627 = cljs.core.nth.call(null,vec__13604_13625,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13626,func__994__auto___13627);


var G__13628 = cljs.core.next.call(null,seq__13591_13619__$1);
var G__13629 = null;
var G__13630 = (0);
var G__13631 = (0);
seq__13591_13607 = G__13628;
chunk__13592_13608 = G__13629;
count__13593_13609 = G__13630;
i__13594_13610 = G__13631;
continue;
}
} else {
}
}
break;
}

return e__992__auto__;
});
/**
 * 
 */
lt.objs.plugins.install_button = (function lt$objs$plugins$install_button(plugin){
var e__992__auto__ = singultus.core.html.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span.install","span.install",-1588354777)], null));
var seq__13632_13648 = cljs.core.seq.call(null,cljs.core.partition.call(null,(2),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"click","click",1912301393),((function (e__992__auto__){
return (function (e){
var me_13652 = this;
lt.objs.plugins.discover_deps.call(null,plugin,(function (){
lt.util.dom.remove.call(null,lt.util.dom.parent.call(null,me_13652));

lt.object.raise.call(null,lt.objs.plugins.manager,new cljs.core.Keyword(null,"refresh!","refresh!",156149341));

lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"behaviors.reload","behaviors.reload",2130924967));

return lt.util.js.wait.call(null,(1000),(function (){
return lt.objs.notifos.set_msg_BANG_.call(null,["Installed ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(plugin))," ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(plugin))].join(''));
}));
}));

lt.util.dom.prevent.call(null,e);

return lt.util.dom.stop_propagation.call(null,e);
});})(e__992__auto__))
], null)));
var chunk__13633_13649 = null;
var count__13634_13650 = (0);
var i__13635_13651 = (0);
while(true){
if((i__13635_13651 < count__13634_13650)){
var vec__13642_13653 = cljs.core._nth.call(null,chunk__13633_13649,i__13635_13651);
var ev__993__auto___13654 = cljs.core.nth.call(null,vec__13642_13653,(0),null);
var func__994__auto___13655 = cljs.core.nth.call(null,vec__13642_13653,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13654,func__994__auto___13655);


var G__13656 = seq__13632_13648;
var G__13657 = chunk__13633_13649;
var G__13658 = count__13634_13650;
var G__13659 = (i__13635_13651 + (1));
seq__13632_13648 = G__13656;
chunk__13633_13649 = G__13657;
count__13634_13650 = G__13658;
i__13635_13651 = G__13659;
continue;
} else {
var temp__5753__auto___13660 = cljs.core.seq.call(null,seq__13632_13648);
if(temp__5753__auto___13660){
var seq__13632_13661__$1 = temp__5753__auto___13660;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__13632_13661__$1)){
var c__4591__auto___13662 = cljs.core.chunk_first.call(null,seq__13632_13661__$1);
var G__13663 = cljs.core.chunk_rest.call(null,seq__13632_13661__$1);
var G__13664 = c__4591__auto___13662;
var G__13665 = cljs.core.count.call(null,c__4591__auto___13662);
var G__13666 = (0);
seq__13632_13648 = G__13663;
chunk__13633_13649 = G__13664;
count__13634_13650 = G__13665;
i__13635_13651 = G__13666;
continue;
} else {
var vec__13645_13667 = cljs.core.first.call(null,seq__13632_13661__$1);
var ev__993__auto___13668 = cljs.core.nth.call(null,vec__13645_13667,(0),null);
var func__994__auto___13669 = cljs.core.nth.call(null,vec__13645_13667,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13668,func__994__auto___13669);


var G__13670 = cljs.core.next.call(null,seq__13632_13661__$1);
var G__13671 = null;
var G__13672 = (0);
var G__13673 = (0);
seq__13632_13648 = G__13670;
chunk__13633_13649 = G__13671;
count__13634_13650 = G__13672;
i__13635_13651 = G__13673;
continue;
}
} else {
}
}
break;
}

return e__992__auto__;
});
/**
 * 
 */
lt.objs.plugins.plugin_link_title = (function lt$objs$plugins$plugin_link_title(plugin){
var e__992__auto__ = singultus.core.html.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span.link","span.link",1320447716),new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(plugin)], null));
var seq__13674_13690 = cljs.core.seq.call(null,cljs.core.partition.call(null,(2),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"click","click",1912301393),((function (e__992__auto__){
return (function (e){
lt.util.dom.prevent.call(null,e);

lt.util.dom.stop_propagation.call(null,e);

return lt.objs.platform.open_url.call(null,new cljs.core.Keyword(null,"url","url",276297046).cljs$core$IFn$_invoke$arity$2(plugin,new cljs.core.Keyword(null,"source","source",-433931539).cljs$core$IFn$_invoke$arity$1(plugin)));
});})(e__992__auto__))
], null)));
var chunk__13675_13691 = null;
var count__13676_13692 = (0);
var i__13677_13693 = (0);
while(true){
if((i__13677_13693 < count__13676_13692)){
var vec__13684_13694 = cljs.core._nth.call(null,chunk__13675_13691,i__13677_13693);
var ev__993__auto___13695 = cljs.core.nth.call(null,vec__13684_13694,(0),null);
var func__994__auto___13696 = cljs.core.nth.call(null,vec__13684_13694,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13695,func__994__auto___13696);


var G__13697 = seq__13674_13690;
var G__13698 = chunk__13675_13691;
var G__13699 = count__13676_13692;
var G__13700 = (i__13677_13693 + (1));
seq__13674_13690 = G__13697;
chunk__13675_13691 = G__13698;
count__13676_13692 = G__13699;
i__13677_13693 = G__13700;
continue;
} else {
var temp__5753__auto___13701 = cljs.core.seq.call(null,seq__13674_13690);
if(temp__5753__auto___13701){
var seq__13674_13702__$1 = temp__5753__auto___13701;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__13674_13702__$1)){
var c__4591__auto___13703 = cljs.core.chunk_first.call(null,seq__13674_13702__$1);
var G__13704 = cljs.core.chunk_rest.call(null,seq__13674_13702__$1);
var G__13705 = c__4591__auto___13703;
var G__13706 = cljs.core.count.call(null,c__4591__auto___13703);
var G__13707 = (0);
seq__13674_13690 = G__13704;
chunk__13675_13691 = G__13705;
count__13676_13692 = G__13706;
i__13677_13693 = G__13707;
continue;
} else {
var vec__13687_13708 = cljs.core.first.call(null,seq__13674_13702__$1);
var ev__993__auto___13709 = cljs.core.nth.call(null,vec__13687_13708,(0),null);
var func__994__auto___13710 = cljs.core.nth.call(null,vec__13687_13708,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13709,func__994__auto___13710);


var G__13711 = cljs.core.next.call(null,seq__13674_13702__$1);
var G__13712 = null;
var G__13713 = (0);
var G__13714 = (0);
seq__13674_13690 = G__13711;
chunk__13675_13691 = G__13712;
count__13676_13692 = G__13713;
i__13677_13693 = G__13714;
continue;
}
} else {
}
}
break;
}

return e__992__auto__;
});
/**
 * 
 */
lt.objs.plugins.plugin_title = (function lt$objs$plugins$plugin_title(plugin){
var e__992__auto__ = singultus.core.html.call(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"h1","h1",-1896887462),lt.objs.plugins.plugin_link_title.call(null,plugin),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span.version","span.version",937544592),new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(plugin)], null)], null));
var seq__13715_13731 = cljs.core.seq.call(null,cljs.core.partition.call(null,(2),cljs.core.PersistentVector.EMPTY));
var chunk__13716_13732 = null;
var count__13717_13733 = (0);
var i__13718_13734 = (0);
while(true){
if((i__13718_13734 < count__13717_13733)){
var vec__13725_13735 = cljs.core._nth.call(null,chunk__13716_13732,i__13718_13734);
var ev__993__auto___13736 = cljs.core.nth.call(null,vec__13725_13735,(0),null);
var func__994__auto___13737 = cljs.core.nth.call(null,vec__13725_13735,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13736,func__994__auto___13737);


var G__13738 = seq__13715_13731;
var G__13739 = chunk__13716_13732;
var G__13740 = count__13717_13733;
var G__13741 = (i__13718_13734 + (1));
seq__13715_13731 = G__13738;
chunk__13716_13732 = G__13739;
count__13717_13733 = G__13740;
i__13718_13734 = G__13741;
continue;
} else {
var temp__5753__auto___13742 = cljs.core.seq.call(null,seq__13715_13731);
if(temp__5753__auto___13742){
var seq__13715_13743__$1 = temp__5753__auto___13742;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__13715_13743__$1)){
var c__4591__auto___13744 = cljs.core.chunk_first.call(null,seq__13715_13743__$1);
var G__13745 = cljs.core.chunk_rest.call(null,seq__13715_13743__$1);
var G__13746 = c__4591__auto___13744;
var G__13747 = cljs.core.count.call(null,c__4591__auto___13744);
var G__13748 = (0);
seq__13715_13731 = G__13745;
chunk__13716_13732 = G__13746;
count__13717_13733 = G__13747;
i__13718_13734 = G__13748;
continue;
} else {
var vec__13728_13749 = cljs.core.first.call(null,seq__13715_13743__$1);
var ev__993__auto___13750 = cljs.core.nth.call(null,vec__13728_13749,(0),null);
var func__994__auto___13751 = cljs.core.nth.call(null,vec__13728_13749,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13750,func__994__auto___13751);


var G__13752 = cljs.core.next.call(null,seq__13715_13743__$1);
var G__13753 = null;
var G__13754 = (0);
var G__13755 = (0);
seq__13715_13731 = G__13752;
chunk__13716_13732 = G__13753;
count__13717_13733 = G__13754;
i__13718_13734 = G__13755;
continue;
}
} else {
}
}
break;
}

return e__992__auto__;
});
/**
 * 
 */
lt.objs.plugins.server_plugin_ui = (function lt$objs$plugins$server_plugin_ui(plugin){
var e__992__auto__ = singultus.core.html.call(null,(function (){var info = plugin;
var ver = new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(info);
var installed = cljs.core.get.call(null,new cljs.core.Keyword("lt.objs.plugins","plugins","lt.objs.plugins/plugins",-1345299551).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,lt.objs.app.app)),new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(info));
var update_QMARK_ = (function (){var and__4149__auto__ = new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(installed);
if(cljs.core.truth_(and__4149__auto__)){
return lt.objs.deploy.is_newer_QMARK_.call(null,new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(installed),ver);
} else {
return and__4149__auto__;
}
})();
return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"li","li",723558921),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"class","class",-2030961996),(cljs.core.truth_(update_QMARK_)?"has-update":null)], null),((cljs.core.not.call(null,installed))?lt.objs.plugins.install_button.call(null,plugin):(cljs.core.truth_(update_QMARK_)?lt.objs.plugins.update_button.call(null,plugin):new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span.installed","span.installed",1342874909)], null))),lt.objs.plugins.source_button.call(null,plugin),lt.objs.plugins.plugin_title.call(null,plugin),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"h3","h3",2067611163),new cljs.core.Keyword(null,"author","author",2111686192).cljs$core$IFn$_invoke$arity$1(info)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),new cljs.core.Keyword(null,"desc","desc",2093485764).cljs$core$IFn$_invoke$arity$1(info)], null)], null);
})());
var seq__13756_13772 = cljs.core.seq.call(null,cljs.core.partition.call(null,(2),cljs.core.PersistentVector.EMPTY));
var chunk__13757_13773 = null;
var count__13758_13774 = (0);
var i__13759_13775 = (0);
while(true){
if((i__13759_13775 < count__13758_13774)){
var vec__13766_13776 = cljs.core._nth.call(null,chunk__13757_13773,i__13759_13775);
var ev__993__auto___13777 = cljs.core.nth.call(null,vec__13766_13776,(0),null);
var func__994__auto___13778 = cljs.core.nth.call(null,vec__13766_13776,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13777,func__994__auto___13778);


var G__13779 = seq__13756_13772;
var G__13780 = chunk__13757_13773;
var G__13781 = count__13758_13774;
var G__13782 = (i__13759_13775 + (1));
seq__13756_13772 = G__13779;
chunk__13757_13773 = G__13780;
count__13758_13774 = G__13781;
i__13759_13775 = G__13782;
continue;
} else {
var temp__5753__auto___13783 = cljs.core.seq.call(null,seq__13756_13772);
if(temp__5753__auto___13783){
var seq__13756_13784__$1 = temp__5753__auto___13783;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__13756_13784__$1)){
var c__4591__auto___13785 = cljs.core.chunk_first.call(null,seq__13756_13784__$1);
var G__13786 = cljs.core.chunk_rest.call(null,seq__13756_13784__$1);
var G__13787 = c__4591__auto___13785;
var G__13788 = cljs.core.count.call(null,c__4591__auto___13785);
var G__13789 = (0);
seq__13756_13772 = G__13786;
chunk__13757_13773 = G__13787;
count__13758_13774 = G__13788;
i__13759_13775 = G__13789;
continue;
} else {
var vec__13769_13790 = cljs.core.first.call(null,seq__13756_13784__$1);
var ev__993__auto___13791 = cljs.core.nth.call(null,vec__13769_13790,(0),null);
var func__994__auto___13792 = cljs.core.nth.call(null,vec__13769_13790,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13791,func__994__auto___13792);


var G__13793 = cljs.core.next.call(null,seq__13756_13784__$1);
var G__13794 = null;
var G__13795 = (0);
var G__13796 = (0);
seq__13756_13772 = G__13793;
chunk__13757_13773 = G__13794;
count__13758_13774 = G__13795;
i__13759_13775 = G__13796;
continue;
}
} else {
}
}
break;
}

return e__992__auto__;
});
/**
 * 
 */
lt.objs.plugins.uninstall_button = (function lt$objs$plugins$uninstall_button(plugin){
var e__992__auto__ = singultus.core.html.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span.uninstall","span.uninstall",1805638532)], null));
var seq__13797_13813 = cljs.core.seq.call(null,cljs.core.partition.call(null,(2),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"click","click",1912301393),((function (e__992__auto__){
return (function (){
return lt.objs.popup.popup_BANG_.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"header","header",119441134),"Uninstall plugin?",new cljs.core.Keyword(null,"body","body",-2049205669),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div","div",1057191632),"This will delete the plugin from your system, removing any local\n                                 changes you may have made, and cannot be undone."], null),new cljs.core.Keyword(null,"buttons","buttons",-1953831197),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"label","label",1718410804),"Delete plugin",new cljs.core.Keyword(null,"action","action",-811238024),(function (){
return lt.objs.plugins.uninstall.call(null,plugin);
})], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"label","label",1718410804),"Cancel"], null)], null)], null));
});})(e__992__auto__))
], null)));
var chunk__13798_13814 = null;
var count__13799_13815 = (0);
var i__13800_13816 = (0);
while(true){
if((i__13800_13816 < count__13799_13815)){
var vec__13807_13817 = cljs.core._nth.call(null,chunk__13798_13814,i__13800_13816);
var ev__993__auto___13818 = cljs.core.nth.call(null,vec__13807_13817,(0),null);
var func__994__auto___13819 = cljs.core.nth.call(null,vec__13807_13817,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13818,func__994__auto___13819);


var G__13820 = seq__13797_13813;
var G__13821 = chunk__13798_13814;
var G__13822 = count__13799_13815;
var G__13823 = (i__13800_13816 + (1));
seq__13797_13813 = G__13820;
chunk__13798_13814 = G__13821;
count__13799_13815 = G__13822;
i__13800_13816 = G__13823;
continue;
} else {
var temp__5753__auto___13824 = cljs.core.seq.call(null,seq__13797_13813);
if(temp__5753__auto___13824){
var seq__13797_13825__$1 = temp__5753__auto___13824;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__13797_13825__$1)){
var c__4591__auto___13826 = cljs.core.chunk_first.call(null,seq__13797_13825__$1);
var G__13827 = cljs.core.chunk_rest.call(null,seq__13797_13825__$1);
var G__13828 = c__4591__auto___13826;
var G__13829 = cljs.core.count.call(null,c__4591__auto___13826);
var G__13830 = (0);
seq__13797_13813 = G__13827;
chunk__13798_13814 = G__13828;
count__13799_13815 = G__13829;
i__13800_13816 = G__13830;
continue;
} else {
var vec__13810_13831 = cljs.core.first.call(null,seq__13797_13825__$1);
var ev__993__auto___13832 = cljs.core.nth.call(null,vec__13810_13831,(0),null);
var func__994__auto___13833 = cljs.core.nth.call(null,vec__13810_13831,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13832,func__994__auto___13833);


var G__13834 = cljs.core.next.call(null,seq__13797_13825__$1);
var G__13835 = null;
var G__13836 = (0);
var G__13837 = (0);
seq__13797_13813 = G__13834;
chunk__13798_13814 = G__13835;
count__13799_13815 = G__13836;
i__13800_13816 = G__13837;
continue;
}
} else {
}
}
break;
}

return e__992__auto__;
});
/**
 * 
 */
lt.objs.plugins.installed_plugin_ui = (function lt$objs$plugins$installed_plugin_ui(plugin){
var e__992__auto__ = singultus.core.html.call(null,(function (){var cached = new cljs.core.Keyword(null,"latest-version","latest-version",-1985110248).cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null,new cljs.core.Keyword(null,"server-plugins","server-plugins",-514262131).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,lt.objs.plugins.manager)),cljs.core.keyword.call(null,new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(plugin))));
var update_QMARK_ = (cljs.core.truth_(cached)?lt.objs.deploy.is_newer_QMARK_.call(null,new cljs.core.Keyword(null,"version","version",425292698).cljs$core$IFn$_invoke$arity$1(plugin),cached):null);
return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"li","li",723558921),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"class","class",-2030961996),(cljs.core.truth_(update_QMARK_)?"has-update":null)], null),(cljs.core.truth_(update_QMARK_)?lt.objs.plugins.update_button.call(null,cljs.core.assoc.call(null,plugin,new cljs.core.Keyword(null,"version","version",425292698),cached)):null),lt.objs.plugins.uninstall_button.call(null,plugin),lt.objs.plugins.source_button.call(null,plugin),lt.objs.plugins.plugin_title.call(null,plugin),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"h3","h3",2067611163),new cljs.core.Keyword(null,"author","author",2111686192).cljs$core$IFn$_invoke$arity$1(plugin)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",151049309),new cljs.core.Keyword(null,"desc","desc",2093485764).cljs$core$IFn$_invoke$arity$1(plugin)], null)], null);
})());
var seq__13838_13854 = cljs.core.seq.call(null,cljs.core.partition.call(null,(2),cljs.core.PersistentVector.EMPTY));
var chunk__13839_13855 = null;
var count__13840_13856 = (0);
var i__13841_13857 = (0);
while(true){
if((i__13841_13857 < count__13840_13856)){
var vec__13848_13858 = cljs.core._nth.call(null,chunk__13839_13855,i__13841_13857);
var ev__993__auto___13859 = cljs.core.nth.call(null,vec__13848_13858,(0),null);
var func__994__auto___13860 = cljs.core.nth.call(null,vec__13848_13858,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13859,func__994__auto___13860);


var G__13861 = seq__13838_13854;
var G__13862 = chunk__13839_13855;
var G__13863 = count__13840_13856;
var G__13864 = (i__13841_13857 + (1));
seq__13838_13854 = G__13861;
chunk__13839_13855 = G__13862;
count__13840_13856 = G__13863;
i__13841_13857 = G__13864;
continue;
} else {
var temp__5753__auto___13865 = cljs.core.seq.call(null,seq__13838_13854);
if(temp__5753__auto___13865){
var seq__13838_13866__$1 = temp__5753__auto___13865;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__13838_13866__$1)){
var c__4591__auto___13867 = cljs.core.chunk_first.call(null,seq__13838_13866__$1);
var G__13868 = cljs.core.chunk_rest.call(null,seq__13838_13866__$1);
var G__13869 = c__4591__auto___13867;
var G__13870 = cljs.core.count.call(null,c__4591__auto___13867);
var G__13871 = (0);
seq__13838_13854 = G__13868;
chunk__13839_13855 = G__13869;
count__13840_13856 = G__13870;
i__13841_13857 = G__13871;
continue;
} else {
var vec__13851_13872 = cljs.core.first.call(null,seq__13838_13866__$1);
var ev__993__auto___13873 = cljs.core.nth.call(null,vec__13851_13872,(0),null);
var func__994__auto___13874 = cljs.core.nth.call(null,vec__13851_13872,(1),null);
lt.util.dom.on.call(null,e__992__auto__,ev__993__auto___13873,func__994__auto___13874);


var G__13875 = cljs.core.next.call(null,seq__13838_13866__$1);
var G__13876 = null;
var G__13877 = (0);
var G__13878 = (0);
seq__13838_13854 = G__13875;
chunk__13839_13855 = G__13876;
count__13840_13856 = G__13877;
i__13841_13857 = G__13878;
continue;
}
} else {
}
}
break;
}

return e__992__auto__;
});
lt.object.object_STAR_.call(null,new cljs.core.Keyword("lt.objs.plugins","plugin-manager","lt.objs.plugins/plugin-manager",1307241720),new cljs.core.Keyword(null,"tags","tags",1771418977),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"plugin-manager","plugin-manager",-1975892988),null], null), null),new cljs.core.Keyword(null,"name","name",1843675177),"Plugins",new cljs.core.Keyword(null,"tab","tab",-559583621),new cljs.core.Keyword(null,"installed","installed",553977691),new cljs.core.Keyword(null,"init","init",-1875481434),(function (this$){
lt.object.merge_BANG_.call(null,this$,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"server-plugins","server-plugins",-514262131),lt.objs.plugins.read_cache.call(null)], null));

return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div","div",1057191632),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"class","class",-2030961996),singultus.binding.bound.call(null,this$,(function (p1__13879_SHARP_){
return ["plugin-manager",((cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"tab","tab",-559583621).cljs$core$IFn$_invoke$arity$1(p1__13879_SHARP_),new cljs.core.Keyword(null,"server","server",1499190120)))?" server":null)].join('');
}))], null),lt.objs.plugins.tabs_and_search.call(null,this$),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ul.server-plugins","ul.server-plugins",1725626404)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ul.plugins","ul.plugins",-1500673029)], null)], null);
}));
lt.objs.plugins.manager = lt.object.create.call(null,new cljs.core.Keyword("lt.objs.plugins","plugin-manager","lt.objs.plugins/plugin-manager",1307241720));
/**
 * 
 */
lt.objs.plugins.__BEH__check_local_metadata_cache = (function lt$objs$plugins$__BEH__check_local_metadata_cache(this$,sha){
if((!(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"__sha","__sha",1382835112).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"server-plugins","server-plugins",-514262131).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$))),sha)))){
return lt.objs.plugins.download_metadata.call(null,sha);
} else {
return lt.object.raise.call(null,this$,new cljs.core.Keyword(null,"metadata.updated","metadata.updated",745911191));
}
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.plugins","check-local-metadata-cache","lt.objs.plugins/check-local-metadata-cache",-1519445176),new cljs.core.Keyword(null,"desc","desc",2093485764),"Plugin Manager: check local metadata cache for update",new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"metadata.sha","metadata.sha",-275753543),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.plugins.__BEH__check_local_metadata_cache);
/**
 * 
 */
lt.objs.plugins.__BEH__draw_plugins_on_updated = (function lt$objs$plugins$__BEH__draw_plugins_on_updated(this$,sha){
lt.object.merge_BANG_.call(null,this$,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"server-plugins","server-plugins",-514262131),lt.objs.plugins.read_cache.call(null)], null));

return lt.object.raise.call(null,this$,new cljs.core.Keyword(null,"plugin-results","plugin-results",-2136889402),lt.objs.plugins.all_latest.call(null,new cljs.core.Keyword(null,"server-plugins","server-plugins",-514262131).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$))));
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.plugins","draw-plugins-on-updated","lt.objs.plugins/draw-plugins-on-updated",-778374643),new cljs.core.Keyword(null,"desc","desc",2093485764),"Plugin Manager: draw plugins on metadata update",new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"metadata.updated","metadata.updated",745911191),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.plugins.__BEH__draw_plugins_on_updated);
/**
 * 
 */
lt.objs.plugins.__BEH__get_latest_metadata_sha = (function lt$objs$plugins$__BEH__get_latest_metadata_sha(this$,sha){
return lt.objs.plugins.latest_metadata_sha.call(null);
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.plugins","get-latest-metadata-sha","lt.objs.plugins/get-latest-metadata-sha",-1241515287),new cljs.core.Keyword(null,"desc","desc",2093485764),"Plugin Manager: get the latest metadata sha",new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"fetch-plugins","fetch-plugins",37225319),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.plugins.__BEH__get_latest_metadata_sha);
/**
 * 
 */
lt.objs.plugins.__BEH__render_server_plugins = (function lt$objs$plugins$__BEH__render_server_plugins(this$,plugins){
var ul = lt.util.dom.$.call(null,new cljs.core.Keyword(null,".server-plugins",".server-plugins",254338048),lt.object.__GT_content.call(null,this$));
lt.util.dom.empty.call(null,ul);

return lt.util.dom.append.call(null,ul,lt.util.dom.fragment.call(null,cljs.core.map.call(null,lt.objs.plugins.server_plugin_ui,cljs.core.remove.call(null,(function (p1__13880_SHARP_){
return lt.objs.plugins.installed_QMARK_.call(null,new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(p1__13880_SHARP_));
}),plugins))));
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.plugins","render-server-plugins","lt.objs.plugins/render-server-plugins",672426141),new cljs.core.Keyword(null,"desc","desc",2093485764),"Plugin Manager: render plugin results",new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"plugin-results","plugin-results",-2136889402),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.plugins.__BEH__render_server_plugins);
/**
 * 
 */
lt.objs.plugins.__BEH__search_server_plugins = (function lt$objs$plugins$__BEH__search_server_plugins(this$,search){
var plugins = lt.objs.plugins.all_latest.call(null,new cljs.core.Keyword(null,"server-plugins","server-plugins",-514262131).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,lt.objs.plugins.manager)));
return lt.object.raise.call(null,this$,new cljs.core.Keyword(null,"plugin-results","plugin-results",-2136889402),((cljs.core.empty_QMARK_.call(null,search))?plugins:lt.objs.plugins.search_plugins.call(null,plugins,search)));
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.plugins","search-server-plugins","lt.objs.plugins/search-server-plugins",-28716632),new cljs.core.Keyword(null,"desc","desc",2093485764),"Plugin Manager: search plugins",new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"search-plugins!","search-plugins!",-246727177),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.plugins.__BEH__search_server_plugins);
lt.objs.plugins.save_plugins = (function lt$objs$plugins$save_plugins(plugin_maps){
var plugin_edn_file = lt.objs.files.join.call(null,lt.objs.settings.user_plugin_dir,"plugin.edn");
var plugin_edn = lt.objs.settings.safe_read.call(null,new cljs.core.Keyword(null,"content","content",15833224).cljs$core$IFn$_invoke$arity$1(lt.objs.files.open_sync.call(null,plugin_edn_file)),plugin_edn_file);
var plugin_name = (function (){var G__13883 = new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(plugin_edn);
if(cljs.core.truth_(G__13883)){
} else {
throw (new Error(["Assert failed: ","User plugin doesn't have a :name","\n","G__13883"].join('')));
}

return G__13883;
})();
var deps = cljs.core.into.call(null,cljs.core.sorted_map.call(null),cljs.core.map.call(null,cljs.core.juxt.call(null,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"version","version",425292698)),cljs.core.remove.call(null,(function (p1__13881_SHARP_){
return cljs.core.contains_QMARK_.call(null,cljs.core.PersistentHashSet.createAsIfByAssoc([plugin_name]),new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(p1__13881_SHARP_));
}),cljs.core.vals.call(null,plugin_maps))));
var plugin_edn_body = cljs.core.pr_str.call(null,cljs.core.assoc.call(null,plugin_edn,new cljs.core.Keyword(null,"dependencies","dependencies",1108064605),deps));
return lt.objs.files.save.call(null,plugin_edn_file,clojure.string.replace_first.call(null,clojure.string.replace_first.call(null,clojure.string.replace.call(null,plugin_edn_body,/(\"\s*,|\{|\},)/,(function (p1__13882_SHARP_){
return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__13882_SHARP_),"\n"].join('');
})),/^\{\n/,"{"),/:dependencies/,";; Do not edit - :dependencies are auto-generated\n:dependencies"));
});
/**
 * 
 */
lt.objs.plugins.__BEH__save_user_plugin_dependencies = (function lt$objs$plugins$__BEH__save_user_plugin_dependencies(var_args){
var args__4777__auto__ = [];
var len__4771__auto___13886 = arguments.length;
var i__4772__auto___13887 = (0);
while(true){
if((i__4772__auto___13887 < len__4771__auto___13886)){
args__4777__auto__.push((arguments[i__4772__auto___13887]));

var G__13888 = (i__4772__auto___13887 + (1));
i__4772__auto___13887 = G__13888;
continue;
} else {
}
break;
}

var argseq__4778__auto__ = ((((1) < args__4777__auto__.length))?(new cljs.core.IndexedSeq(args__4777__auto__.slice((1)),(0),null)):null);
return lt.objs.plugins.__BEH__save_user_plugin_dependencies.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4778__auto__);
});

(lt.objs.plugins.__BEH__save_user_plugin_dependencies.cljs$core$IFn$_invoke$arity$variadic = (function (this$,opts){
return lt.objs.plugins.save_plugins.call(null,lt.objs.plugins.available_plugins.call(null));
}));

(lt.objs.plugins.__BEH__save_user_plugin_dependencies.cljs$lang$maxFixedArity = (1));

/** @this {Function} */
(lt.objs.plugins.__BEH__save_user_plugin_dependencies.cljs$lang$applyTo = (function (seq13884){
var G__13885 = cljs.core.first.call(null,seq13884);
var seq13884__$1 = cljs.core.next.call(null,seq13884);
var self__4758__auto__ = this;
return self__4758__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13885,seq13884__$1);
}));


lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.plugins","save-user-plugin-dependencies","lt.objs.plugins/save-user-plugin-dependencies",1116558032),new cljs.core.Keyword(null,"desc","desc",2093485764),"Saves dependencies to user's plugin.edn",new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refresh!","refresh!",156149341),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.plugins.__BEH__save_user_plugin_dependencies);
/**
 * 
 */
lt.objs.plugins.__BEH__render_installed_plugins = (function lt$objs$plugins$__BEH__render_installed_plugins(var_args){
var args__4777__auto__ = [];
var len__4771__auto___13894 = arguments.length;
var i__4772__auto___13895 = (0);
while(true){
if((i__4772__auto___13895 < len__4771__auto___13894)){
args__4777__auto__.push((arguments[i__4772__auto___13895]));

var G__13896 = (i__4772__auto___13895 + (1));
i__4772__auto___13895 = G__13896;
continue;
} else {
}
break;
}

var argseq__4778__auto__ = ((((1) < args__4777__auto__.length))?(new cljs.core.IndexedSeq(args__4777__auto__.slice((1)),(0),null)):null);
return lt.objs.plugins.__BEH__render_installed_plugins.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4778__auto__);
});

(lt.objs.plugins.__BEH__render_installed_plugins.cljs$core$IFn$_invoke$arity$variadic = (function (this$,p__13892){
var map__13893 = p__13892;
var map__13893__$1 = cljs.core.__destructure_map.call(null,map__13893);
var ignore_missing = cljs.core.get.call(null,map__13893__$1,new cljs.core.Keyword(null,"ignore-missing","ignore-missing",836103362));
lt.object.merge_BANG_.call(null,lt.objs.app.app,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("lt.objs.plugins","plugins","lt.objs.plugins/plugins",-1345299551),lt.objs.plugins.available_plugins.call(null)], null));

if(cljs.core.truth_(ignore_missing)){
} else {
lt.objs.plugins.check_missing.call(null,new cljs.core.Keyword("lt.objs.plugins","plugins","lt.objs.plugins/plugins",-1345299551).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,lt.objs.app.app)));
}

var ul = lt.util.dom.$.call(null,new cljs.core.Keyword(null,".plugins",".plugins",425396696),lt.object.__GT_content.call(null,this$));
lt.util.dom.empty.call(null,ul);

return lt.util.dom.append.call(null,ul,lt.util.dom.fragment.call(null,cljs.core.map.call(null,lt.objs.plugins.installed_plugin_ui,cljs.core.sort_by.call(null,(function (p1__13889_SHARP_){
return new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(p1__13889_SHARP_).toUpperCase();
}),cljs.core.vals.call(null,new cljs.core.Keyword("lt.objs.plugins","plugins","lt.objs.plugins/plugins",-1345299551).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,lt.objs.app.app)))))));
}));

(lt.objs.plugins.__BEH__render_installed_plugins.cljs$lang$maxFixedArity = (1));

/** @this {Function} */
(lt.objs.plugins.__BEH__render_installed_plugins.cljs$lang$applyTo = (function (seq13890){
var G__13891 = cljs.core.first.call(null,seq13890);
var seq13890__$1 = cljs.core.next.call(null,seq13890);
var self__4758__auto__ = this;
return self__4758__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13891,seq13890__$1);
}));


lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.plugins","render-installed-plugins","lt.objs.plugins/render-installed-plugins",1742015148),new cljs.core.Keyword(null,"desc","desc",2093485764),"Plugin Manager: refresh installed plugins",new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refresh!","refresh!",156149341),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.plugins.__BEH__render_installed_plugins);
/**
 * 
 */
lt.objs.plugins.__BEH__on_close = (function lt$objs$plugins$__BEH__on_close(this$){
return lt.objs.tabs.rem_BANG_.call(null,this$);
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.plugins","on-close","lt.objs.plugins/on-close",-1793651150),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"close","close",1835149582),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.plugins.__BEH__on_close);
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"command","command",-894540724),new cljs.core.Keyword(null,"plugin-manager.search","plugin-manager.search",-770563448),new cljs.core.Keyword(null,"hidden","hidden",-312506092),true,new cljs.core.Keyword(null,"desc","desc",2093485764),"Plugins: Search",new cljs.core.Keyword(null,"exec","exec",1625568743),(function (term){
var term__$1 = (function (){var or__4160__auto__ = term;
if(cljs.core.truth_(or__4160__auto__)){
return or__4160__auto__;
} else {
return lt.util.dom.val.call(null,lt.util.dom.$.call(null,new cljs.core.Keyword(null,"input","input",556931961),lt.object.__GT_content.call(null,lt.objs.plugins.manager)));
}
})();
lt.object.merge_BANG_.call(null,lt.objs.plugins.manager,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tab","tab",-559583621),new cljs.core.Keyword(null,"server","server",1499190120)], null));

return lt.object.raise.call(null,lt.objs.plugins.manager,new cljs.core.Keyword(null,"search-plugins!","search-plugins!",-246727177),term__$1);
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",-894540724),new cljs.core.Keyword(null,"plugin-manager.refresh","plugin-manager.refresh",1682385037),new cljs.core.Keyword(null,"desc","desc",2093485764),"Plugins: Refresh plugin list",new cljs.core.Keyword(null,"exec","exec",1625568743),(function (){
lt.object.raise.call(null,lt.objs.plugins.manager,new cljs.core.Keyword(null,"refresh!","refresh!",156149341));

return lt.object.raise.call(null,lt.objs.plugins.manager,new cljs.core.Keyword(null,"fetch-plugins","fetch-plugins",37225319));
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",-894540724),new cljs.core.Keyword(null,"plugin-manager.show","plugin-manager.show",-401374110),new cljs.core.Keyword(null,"desc","desc",2093485764),"Plugins: Show plugin manager",new cljs.core.Keyword(null,"exec","exec",1625568743),(function (){
lt.objs.tabs.add_or_focus_BANG_.call(null,lt.objs.plugins.manager);

lt.util.dom.focus.call(null,lt.util.dom.$.call(null,new cljs.core.Keyword(null,"input","input",556931961),lt.object.__GT_content.call(null,lt.objs.plugins.manager)));

return lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"plugin-manager.refresh","plugin-manager.refresh",1682385037));
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",-894540724),new cljs.core.Keyword(null,"plugin-manager.update-outdated","plugin-manager.update-outdated",238956641),new cljs.core.Keyword(null,"desc","desc",2093485764),"Plugins: Update all outdated",new cljs.core.Keyword(null,"exec","exec",1625568743),(function (){
var outdated = cljs.core.filter.call(null,lt.objs.plugins.outdated_QMARK_,cljs.core.vals.call(null,new cljs.core.Keyword("lt.objs.plugins","plugins","lt.objs.plugins/plugins",-1345299551).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,lt.objs.app.app))));
var names = cljs.core.atom.call(null,cljs.core.PersistentHashSet.EMPTY);
var countdown = cljs.core.atom.call(null,cljs.core.count.call(null,outdated));
var seq__13897 = cljs.core.seq.call(null,outdated);
var chunk__13900 = null;
var count__13901 = (0);
var i__13902 = (0);
while(true){
if((i__13902 < count__13901)){
var plugin = cljs.core._nth.call(null,chunk__13900,i__13902);
if(cljs.core.seq.call(null,outdated)){
var cached_13905 = new cljs.core.Keyword(null,"latest-version","latest-version",-1985110248).cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null,new cljs.core.Keyword(null,"server-plugins","server-plugins",-514262131).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,lt.objs.plugins.manager)),new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(plugin)));
lt.objs.plugins.discover_deps.call(null,cljs.core.assoc.call(null,plugin,new cljs.core.Keyword(null,"version","version",425292698),cached_13905),((function (seq__13897,chunk__13900,count__13901,i__13902,cached_13905,plugin,outdated,names,countdown){
return (function (){
cljs.core.swap_BANG_.call(null,names,cljs.core.conj,new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(plugin));

cljs.core.swap_BANG_.call(null,countdown,cljs.core.dec);

lt.object.raise.call(null,lt.objs.plugins.manager,new cljs.core.Keyword(null,"refresh!","refresh!",156149341));

if((cljs.core.deref.call(null,countdown) <= (0))){
lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"behaviors.reload","behaviors.reload",2130924967));

return lt.objs.notifos.set_msg_BANG_.call(null,cljs.core.apply.call(null,cljs.core.str,"Updated: ",cljs.core.interpose.call(null,", ",cljs.core.deref.call(null,names))));
} else {
return null;
}
});})(seq__13897,chunk__13900,count__13901,i__13902,cached_13905,plugin,outdated,names,countdown))
);


var G__13906 = seq__13897;
var G__13907 = chunk__13900;
var G__13908 = count__13901;
var G__13909 = (i__13902 + (1));
seq__13897 = G__13906;
chunk__13900 = G__13907;
count__13901 = G__13908;
i__13902 = G__13909;
continue;
} else {
var G__13910 = seq__13897;
var G__13911 = chunk__13900;
var G__13912 = count__13901;
var G__13913 = (i__13902 + (1));
seq__13897 = G__13910;
chunk__13900 = G__13911;
count__13901 = G__13912;
i__13902 = G__13913;
continue;
}
} else {
var temp__5753__auto__ = cljs.core.seq.call(null,seq__13897);
if(temp__5753__auto__){
var seq__13897__$1 = temp__5753__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__13897__$1)){
var c__4591__auto__ = cljs.core.chunk_first.call(null,seq__13897__$1);
var G__13914 = cljs.core.chunk_rest.call(null,seq__13897__$1);
var G__13915 = c__4591__auto__;
var G__13916 = cljs.core.count.call(null,c__4591__auto__);
var G__13917 = (0);
seq__13897 = G__13914;
chunk__13900 = G__13915;
count__13901 = G__13916;
i__13902 = G__13917;
continue;
} else {
var plugin = cljs.core.first.call(null,seq__13897__$1);
if(cljs.core.seq.call(null,outdated)){
var cached_13918 = new cljs.core.Keyword(null,"latest-version","latest-version",-1985110248).cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null,new cljs.core.Keyword(null,"server-plugins","server-plugins",-514262131).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,lt.objs.plugins.manager)),new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(plugin)));
lt.objs.plugins.discover_deps.call(null,cljs.core.assoc.call(null,plugin,new cljs.core.Keyword(null,"version","version",425292698),cached_13918),((function (seq__13897,chunk__13900,count__13901,i__13902,cached_13918,plugin,seq__13897__$1,temp__5753__auto__,outdated,names,countdown){
return (function (){
cljs.core.swap_BANG_.call(null,names,cljs.core.conj,new cljs.core.Keyword(null,"name","name",1843675177).cljs$core$IFn$_invoke$arity$1(plugin));

cljs.core.swap_BANG_.call(null,countdown,cljs.core.dec);

lt.object.raise.call(null,lt.objs.plugins.manager,new cljs.core.Keyword(null,"refresh!","refresh!",156149341));

if((cljs.core.deref.call(null,countdown) <= (0))){
lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"behaviors.reload","behaviors.reload",2130924967));

return lt.objs.notifos.set_msg_BANG_.call(null,cljs.core.apply.call(null,cljs.core.str,"Updated: ",cljs.core.interpose.call(null,", ",cljs.core.deref.call(null,names))));
} else {
return null;
}
});})(seq__13897,chunk__13900,count__13901,i__13902,cached_13918,plugin,seq__13897__$1,temp__5753__auto__,outdated,names,countdown))
);


var G__13919 = cljs.core.next.call(null,seq__13897__$1);
var G__13920 = null;
var G__13921 = (0);
var G__13922 = (0);
seq__13897 = G__13919;
chunk__13900 = G__13920;
count__13901 = G__13921;
i__13902 = G__13922;
continue;
} else {
var G__13923 = cljs.core.next.call(null,seq__13897__$1);
var G__13924 = null;
var G__13925 = (0);
var G__13926 = (0);
seq__13897 = G__13923;
chunk__13900 = G__13924;
count__13901 = G__13925;
i__13902 = G__13926;
continue;
}
}
} else {
return null;
}
}
break;
}
})], null));
/**
 * 
 */
lt.objs.plugins.__BEH__init_plugins = (function lt$objs$plugins$__BEH__init_plugins(app){
if(cljs.core.truth_(lt.objs.files.exists_QMARK_.call(null,lt.objs.plugins.user_plugins_dir))){
} else {
lt.objs.files.mkdir.call(null,lt.objs.plugins.user_plugins_dir);
}

lt.object.raise.call(null,lt.objs.app.app,new cljs.core.Keyword(null,"create-user-plugin","create-user-plugin",1061956772));

lt.object.raise.call(null,lt.objs.app.app,new cljs.core.Keyword(null,"flatten-map-settings","flatten-map-settings",772619331));

lt.object.merge_BANG_.call(null,lt.objs.app.app,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("lt.objs.plugins","plugins","lt.objs.plugins/plugins",-1345299551),lt.objs.plugins.available_plugins.call(null)], null));

return lt.objs.plugins.check_missing.call(null,new cljs.core.Keyword("lt.objs.plugins","plugins","lt.objs.plugins/plugins",-1345299551).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,lt.objs.app.app)));
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.plugins","init-plugins","lt.objs.plugins/init-plugins",-1184369360),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"pre-load","pre-load",-1239999613),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.plugins.__BEH__init_plugins);
/**
 * 
 */
lt.objs.plugins.__BEH__behaviors__DOT__refreshed_load_keys = (function lt$objs$plugins$__BEH__behaviors__DOT__refreshed_load_keys(){
return lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"keymaps.reload","keymaps.reload",-244540607));
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.plugins","behaviors.refreshed-load-keys","lt.objs.plugins/behaviors.refreshed-load-keys",-515974854),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"behaviors.refreshed","behaviors.refreshed",-919120200),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.plugins.__BEH__behaviors__DOT__refreshed_load_keys);
/**
 * 
 */
lt.objs.plugins.__BEH__plugin_behavior_diffs = (function lt$objs$plugins$__BEH__plugin_behavior_diffs(this$,diffs){
var plugins = new cljs.core.Keyword("lt.objs.plugins","plugins","lt.objs.plugins/plugins",-1345299551).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$));
var dep_graph = lt.objs.plugins.plugin_dependency_graph.call(null,plugins);
var dep_ordered = cljs.core.seq.call(null,lt.util.kahn.kahn_sort.call(null,dep_graph));
var mapped = ((dep_ordered)?cljs.core.map.call(null,plugins,dep_ordered):cljs.core.vals.call(null,plugins));
if(cljs.core.truth_((function (){var and__4149__auto__ = plugins;
if(cljs.core.truth_(and__4149__auto__)){
return ((cljs.core.not.call(null,dep_ordered)) && (cljs.core.not.call(null,new cljs.core.Keyword("lt.objs.plugins","cycle-warned","lt.objs.plugins/cycle-warned",389538336).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)))));
} else {
return and__4149__auto__;
}
})())){
lt.object.merge_BANG_.call(null,this$,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("lt.objs.plugins","cycle-warned","lt.objs.plugins/cycle-warned",389538336),true], null));

lt.objs.popup.popup_BANG_.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"header","header",119441134),"There's a cycle in your plugin dependencies.",new cljs.core.Keyword(null,"body","body",-2049205669),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div","div",1057191632),"As a result, we can't come up with an optimal way to load them.\n                                                This means there may be unexpected consequences to being loaded out of order.\n                                                Here are the plugins causing the cycle: ",lt.objs.plugins.cycle_desc.call(null,lt.objs.plugins.__GT_cycles.call(null,dep_graph))], null),new cljs.core.Keyword(null,"buttons","buttons",-1953831197),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"label","label",1718410804),"ok"], null)], null)], null));
} else {
}

return cljs.core.concat.call(null,diffs,cljs.core.mapv.call(null,lt.objs.plugins.plugin_behaviors,mapped));
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.plugins","plugin-behavior-diffs","lt.objs.plugins/plugin-behavior-diffs",223443609),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"behaviors.diffs.plugin+","behaviors.diffs.plugin+",-195662477),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.plugins.__BEH__plugin_behavior_diffs);
/**
 * 
 */
lt.objs.plugins.__BEH__plugin_keymap_diffs = (function lt$objs$plugins$__BEH__plugin_keymap_diffs(this$,diffs){
return cljs.core.concat.call(null,diffs,cljs.core.filter.call(null,cljs.core.identity,cljs.core.mapv.call(null,lt.objs.settings.parse_key_file,new cljs.core.Keyword("lt.objs.plugins","keymaps","lt.objs.plugins/keymaps",371725296).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)))));
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.plugins","plugin-keymap-diffs","lt.objs.plugins/plugin-keymap-diffs",1117010566),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keymap.diffs.plugin+","keymap.diffs.plugin+",844114694),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.plugins.__BEH__plugin_keymap_diffs);
/**
 * 
 */
lt.objs.plugins.__BEH__load_js = (function lt$objs$plugins$__BEH__load_js(this$,path){
var _STAR_plugin_dir_STAR__orig_val__13928 = lt.objs.plugins._STAR_plugin_dir_STAR_;
var _STAR_force_reload_STAR__orig_val__13929 = lt.util.load._STAR_force_reload_STAR_;
var _STAR_plugin_dir_STAR__temp_val__13930 = new cljs.core.Keyword("lt.objs.plugins","dir","lt.objs.plugins/dir",651688593).cljs$core$IFn$_invoke$arity$1(lt.object._STAR_behavior_meta_STAR_);
var _STAR_force_reload_STAR__temp_val__13931 = new cljs.core.Keyword("lt.objs.plugins","force-reload","lt.objs.plugins/force-reload",180193649).cljs$core$IFn$_invoke$arity$1(lt.object._STAR_behavior_meta_STAR_);
(lt.objs.plugins._STAR_plugin_dir_STAR_ = _STAR_plugin_dir_STAR__temp_val__13930);

(lt.util.load._STAR_force_reload_STAR_ = _STAR_force_reload_STAR__temp_val__13931);

try{var paths = ((cljs.core.coll_QMARK_.call(null,path))?path:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null));
var seq__13932 = cljs.core.seq.call(null,paths);
var chunk__13933 = null;
var count__13934 = (0);
var i__13935 = (0);
while(true){
if((i__13935 < count__13934)){
var path__$1 = cljs.core._nth.call(null,chunk__13933,i__13935);
var path_13940__$2 = lt.objs.plugins.adjust_path.call(null,path__$1);
if(cljs.core.truth_((function (){var or__4160__auto__ = lt.util.load._STAR_force_reload_STAR_;
if(cljs.core.truth_(or__4160__auto__)){
return or__4160__auto__;
} else {
return cljs.core.not.call(null,cljs.core.get.call(null,new cljs.core.Keyword("lt.objs.plugins","loaded-files","lt.objs.plugins/loaded-files",-79546456).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)),path_13940__$2));
}
})())){
try{lt.util.load.js.call(null,path_13940__$2,true);

lt.object.update_BANG_.call(null,this$,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("lt.objs.plugins","loaded-files","lt.objs.plugins/loaded-files",-79546456)], null),((function (seq__13932,chunk__13933,count__13934,i__13935,path_13940__$2,path__$1,paths,_STAR_plugin_dir_STAR__orig_val__13928,_STAR_force_reload_STAR__orig_val__13929,_STAR_plugin_dir_STAR__temp_val__13930,_STAR_force_reload_STAR__temp_val__13931){
return (function (p1__13927_SHARP_){
return cljs.core.conj.call(null,(function (){var or__4160__auto__ = p1__13927_SHARP_;
if(cljs.core.truth_(or__4160__auto__)){
return or__4160__auto__;
} else {
return cljs.core.PersistentHashSet.EMPTY;
}
})(),path_13940__$2);
});})(seq__13932,chunk__13933,count__13934,i__13935,path_13940__$2,path__$1,paths,_STAR_plugin_dir_STAR__orig_val__13928,_STAR_force_reload_STAR__orig_val__13929,_STAR_plugin_dir_STAR__temp_val__13930,_STAR_force_reload_STAR__temp_val__13931))
);
}catch (e13938){var e_13941 = e13938;
lt.objs.console.error.call(null,["Error loading JS file: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(path_13940__$2)," : ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(e_13941)].join(''),e_13941);
}} else {
}


var G__13942 = seq__13932;
var G__13943 = chunk__13933;
var G__13944 = count__13934;
var G__13945 = (i__13935 + (1));
seq__13932 = G__13942;
chunk__13933 = G__13943;
count__13934 = G__13944;
i__13935 = G__13945;
continue;
} else {
var temp__5753__auto__ = cljs.core.seq.call(null,seq__13932);
if(temp__5753__auto__){
var seq__13932__$1 = temp__5753__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__13932__$1)){
var c__4591__auto__ = cljs.core.chunk_first.call(null,seq__13932__$1);
var G__13946 = cljs.core.chunk_rest.call(null,seq__13932__$1);
var G__13947 = c__4591__auto__;
var G__13948 = cljs.core.count.call(null,c__4591__auto__);
var G__13949 = (0);
seq__13932 = G__13946;
chunk__13933 = G__13947;
count__13934 = G__13948;
i__13935 = G__13949;
continue;
} else {
var path__$1 = cljs.core.first.call(null,seq__13932__$1);
var path_13950__$2 = lt.objs.plugins.adjust_path.call(null,path__$1);
if(cljs.core.truth_((function (){var or__4160__auto__ = lt.util.load._STAR_force_reload_STAR_;
if(cljs.core.truth_(or__4160__auto__)){
return or__4160__auto__;
} else {
return cljs.core.not.call(null,cljs.core.get.call(null,new cljs.core.Keyword("lt.objs.plugins","loaded-files","lt.objs.plugins/loaded-files",-79546456).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)),path_13950__$2));
}
})())){
try{lt.util.load.js.call(null,path_13950__$2,true);

lt.object.update_BANG_.call(null,this$,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("lt.objs.plugins","loaded-files","lt.objs.plugins/loaded-files",-79546456)], null),((function (seq__13932,chunk__13933,count__13934,i__13935,path_13950__$2,path__$1,seq__13932__$1,temp__5753__auto__,paths,_STAR_plugin_dir_STAR__orig_val__13928,_STAR_force_reload_STAR__orig_val__13929,_STAR_plugin_dir_STAR__temp_val__13930,_STAR_force_reload_STAR__temp_val__13931){
return (function (p1__13927_SHARP_){
return cljs.core.conj.call(null,(function (){var or__4160__auto__ = p1__13927_SHARP_;
if(cljs.core.truth_(or__4160__auto__)){
return or__4160__auto__;
} else {
return cljs.core.PersistentHashSet.EMPTY;
}
})(),path_13950__$2);
});})(seq__13932,chunk__13933,count__13934,i__13935,path_13950__$2,path__$1,seq__13932__$1,temp__5753__auto__,paths,_STAR_plugin_dir_STAR__orig_val__13928,_STAR_force_reload_STAR__orig_val__13929,_STAR_plugin_dir_STAR__temp_val__13930,_STAR_force_reload_STAR__temp_val__13931))
);
}catch (e13939){var e_13951 = e13939;
lt.objs.console.error.call(null,["Error loading JS file: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(path_13950__$2)," : ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(e_13951)].join(''),e_13951);
}} else {
}


var G__13952 = cljs.core.next.call(null,seq__13932__$1);
var G__13953 = null;
var G__13954 = (0);
var G__13955 = (0);
seq__13932 = G__13952;
chunk__13933 = G__13953;
count__13934 = G__13954;
i__13935 = G__13955;
continue;
}
} else {
return null;
}
}
break;
}
}finally {(lt.util.load._STAR_force_reload_STAR_ = _STAR_force_reload_STAR__orig_val__13929);

(lt.objs.plugins._STAR_plugin_dir_STAR_ = _STAR_plugin_dir_STAR__orig_val__13928);
}});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.plugins","load-js","lt.objs.plugins/load-js",-1745643293),new cljs.core.Keyword(null,"desc","desc",2093485764),"App: Load javascript file(s)",new cljs.core.Keyword(null,"params","params",710516235),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"label","label",1718410804),"path(s)"], null)], null),new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"user","user",1532431356),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"object.instant-load","object.instant-load",853728870),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.plugins.__BEH__load_js);
/**
 * 
 */
lt.objs.plugins.__BEH__load_css = (function lt$objs$plugins$__BEH__load_css(this$,path){
var paths = cljs.core.map.call(null,lt.objs.plugins.adjust_path,((cljs.core.coll_QMARK_.call(null,path))?path:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null)));
var seq__13957 = cljs.core.seq.call(null,paths);
var chunk__13958 = null;
var count__13959 = (0);
var i__13960 = (0);
while(true){
if((i__13960 < count__13959)){
var path__$1 = cljs.core._nth.call(null,chunk__13958,i__13960);
if(cljs.core.truth_((function (){var or__4160__auto__ = lt.util.load._STAR_force_reload_STAR_;
if(cljs.core.truth_(or__4160__auto__)){
return or__4160__auto__;
} else {
return cljs.core.not.call(null,cljs.core.get.call(null,new cljs.core.Keyword("lt.objs.plugins","loaded-files","lt.objs.plugins/loaded-files",-79546456).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)),path__$1));
}
})())){
lt.object.update_BANG_.call(null,this$,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("lt.objs.plugins","loaded-files","lt.objs.plugins/loaded-files",-79546456)], null),((function (seq__13957,chunk__13958,count__13959,i__13960,path__$1,paths){
return (function (p1__13956_SHARP_){
return cljs.core.conj.call(null,(function (){var or__4160__auto__ = p1__13956_SHARP_;
if(cljs.core.truth_(or__4160__auto__)){
return or__4160__auto__;
} else {
return cljs.core.PersistentHashSet.EMPTY;
}
})(),path__$1);
});})(seq__13957,chunk__13958,count__13959,i__13960,path__$1,paths))
);

lt.util.load.css.call(null,path__$1);
} else {
}


var G__13961 = seq__13957;
var G__13962 = chunk__13958;
var G__13963 = count__13959;
var G__13964 = (i__13960 + (1));
seq__13957 = G__13961;
chunk__13958 = G__13962;
count__13959 = G__13963;
i__13960 = G__13964;
continue;
} else {
var temp__5753__auto__ = cljs.core.seq.call(null,seq__13957);
if(temp__5753__auto__){
var seq__13957__$1 = temp__5753__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,seq__13957__$1)){
var c__4591__auto__ = cljs.core.chunk_first.call(null,seq__13957__$1);
var G__13965 = cljs.core.chunk_rest.call(null,seq__13957__$1);
var G__13966 = c__4591__auto__;
var G__13967 = cljs.core.count.call(null,c__4591__auto__);
var G__13968 = (0);
seq__13957 = G__13965;
chunk__13958 = G__13966;
count__13959 = G__13967;
i__13960 = G__13968;
continue;
} else {
var path__$1 = cljs.core.first.call(null,seq__13957__$1);
if(cljs.core.truth_((function (){var or__4160__auto__ = lt.util.load._STAR_force_reload_STAR_;
if(cljs.core.truth_(or__4160__auto__)){
return or__4160__auto__;
} else {
return cljs.core.not.call(null,cljs.core.get.call(null,new cljs.core.Keyword("lt.objs.plugins","loaded-files","lt.objs.plugins/loaded-files",-79546456).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)),path__$1));
}
})())){
lt.object.update_BANG_.call(null,this$,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("lt.objs.plugins","loaded-files","lt.objs.plugins/loaded-files",-79546456)], null),((function (seq__13957,chunk__13958,count__13959,i__13960,path__$1,seq__13957__$1,temp__5753__auto__,paths){
return (function (p1__13956_SHARP_){
return cljs.core.conj.call(null,(function (){var or__4160__auto__ = p1__13956_SHARP_;
if(cljs.core.truth_(or__4160__auto__)){
return or__4160__auto__;
} else {
return cljs.core.PersistentHashSet.EMPTY;
}
})(),path__$1);
});})(seq__13957,chunk__13958,count__13959,i__13960,path__$1,seq__13957__$1,temp__5753__auto__,paths))
);

lt.util.load.css.call(null,path__$1);
} else {
}


var G__13969 = cljs.core.next.call(null,seq__13957__$1);
var G__13970 = null;
var G__13971 = (0);
var G__13972 = (0);
seq__13957 = G__13969;
chunk__13958 = G__13970;
count__13959 = G__13971;
i__13960 = G__13972;
continue;
}
} else {
return null;
}
}
break;
}
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.plugins","load-css","lt.objs.plugins/load-css",480386133),new cljs.core.Keyword(null,"desc","desc",2093485764),"App: Load css file(s)",new cljs.core.Keyword(null,"params","params",710516235),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"label","label",1718410804),"path(s)"], null)], null),new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"user","user",1532431356),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"object.instant","object.instant",-29936727),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.plugins.__BEH__load_css);
/**
 * 
 */
lt.objs.plugins.__BEH__load_keymap = (function lt$objs$plugins$__BEH__load_keymap(this$,path){
var path__$1 = lt.objs.plugins.adjust_path.call(null,path);
if(cljs.core.truth_(new cljs.core.Keyword("lt.objs.plugins","keymaps","lt.objs.plugins/keymaps",371725296).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)))){
return lt.object.update_BANG_.call(null,this$,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("lt.objs.plugins","keymaps","lt.objs.plugins/keymaps",371725296)], null),cljs.core.conj,path__$1);
} else {
return lt.object.merge_BANG_.call(null,this$,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("lt.objs.plugins","keymaps","lt.objs.plugins/keymaps",371725296),cljs.core.PersistentHashSet.createAsIfByAssoc([path__$1])], null));
}
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.plugins","load-keymap","lt.objs.plugins/load-keymap",904677993),new cljs.core.Keyword(null,"desc","desc",2093485764),"App: Load a keymap file",new cljs.core.Keyword(null,"params","params",710516235),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"label","label",1718410804),"path"], null)], null),new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"user","user",1532431356),new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"object.instant","object.instant",-29936727),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.plugins.__BEH__load_keymap);
/**
 * 
 */
lt.objs.plugins.__BEH__check_for_plugin_file = (function lt$objs$plugins$__BEH__check_for_plugin_file(this$){
var path = new cljs.core.Keyword(null,"path","path",-188191168).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"info","info",-317069002).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)));
var plugin_edn = (function (){var or__4160__auto__ = lt.objs.files.walk_up_find.call(null,path,"plugin.json");
if(cljs.core.truth_(or__4160__auto__)){
return or__4160__auto__;
} else {
return lt.objs.files.walk_up_find.call(null,path,"plugin.edn");
}
})();
if(cljs.core.truth_(plugin_edn)){
lt.object.merge_BANG_.call(null,this$,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("lt.objs.plugins","plugin-path","lt.objs.plugins/plugin-path",-1106303476),lt.objs.files.parent.call(null,plugin_edn)], null));

return lt.object.add_tags.call(null,this$,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"plugin.file","plugin.file",1804030614)], null));
} else {
return null;
}
});

lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.plugins","check-for-plugin-file","lt.objs.plugins/check-for-plugin-file",-2052849661),new cljs.core.Keyword(null,"desc","desc",2093485764),"Plugin: Determine if this is a plugin file",new cljs.core.Keyword(null,"triggers","triggers",-1443678770),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"create","create",-1301499256),null], null), null),new cljs.core.Keyword(null,"reaction","reaction",490869788),lt.objs.plugins.__BEH__check_for_plugin_file);
lt.object.tag_behaviors.call(null,new cljs.core.Keyword(null,"app","app",-560961707),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("lt.objs.plugins","init-plugins","lt.objs.plugins/init-plugins",-1184369360),new cljs.core.Keyword("lt.objs.plugins","plugin-behavior-diffs","lt.objs.plugins/plugin-behavior-diffs",223443609),new cljs.core.Keyword("lt.objs.plugins","plugin-keymap-diffs","lt.objs.plugins/plugin-keymap-diffs",1117010566)], null));
